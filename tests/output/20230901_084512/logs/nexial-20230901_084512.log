2023-09-01 08:45:18.653|I|Thread-1|(DELAYED) nexial-core dev_1535 starting up...
2023-09-01 08:45:18.656|I|Thread-1|(DELAYED) found plans in C:\projects\GKCore\gkcore\tests\artifact\plan\GNUKhata-plan.xlsx: all subplans included
2023-09-01 08:45:18.656|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx
2023-09-01 08:45:18.656|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\GKUser.data.xlsx
2023-09-01 08:45:18.656|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx
2023-09-01 08:45:18.660|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\GNUKhata.data.xlsx
2023-09-01 08:45:18.661|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx
2023-09-01 08:45:18.661|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Account.data.xlsx
2023-09-01 08:45:18.661|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx
2023-09-01 08:45:18.661|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\AuditLogs.data.xlsx
2023-09-01 08:45:18.661|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx
2023-09-01 08:45:18.661|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\CustomerandSupplier.data.xlsx
2023-09-01 08:45:18.661|I|Thread-1|(DELAYED) skipping plan step in ROW 10 since it's disabled
2023-09-01 08:45:18.661|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Invite.data.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Invoice.data.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Product.data.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Reports.data.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Tax.data.xlsx
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) skipping plan step in ROW 16 since it's disabled
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) skipping plan step in ROW 17 since it's disabled
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) skipping plan step in ROW 18 since it's disabled
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) input files and output directory resolved...
2023-09-01 08:45:18.662|I|Thread-1|(DELAYED) cleaning up outdated temp files...
2023-09-01 08:45:18.663|I|Thread-1|(DELAYED) No predefined nexial-setup found
2023-09-01 08:45:18.663|I|Thread-1|(DELAYED) re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GKUser.data.xlsx
2023-09-01 08:45:18.663|I|Thread-1|(DELAYED) [20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 08:45:18.663|I|Thread-1|(DELAYED) [20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx] new thread started
2023-09-01 08:45:18.663|I|Thread-1|No predefined nexial-setup found
2023-09-01 08:45:19.179|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2023-09-01 08:45:19.179|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2023-09-01 08:45:19.179|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2023-09-01 08:45:19.438|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:45:20.045|I|Thread-1|On-Demand Inspection detection enabled
2023-09-01 08:45:20.046|I|Thread-1|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx with 1 iteration(s)
2023-09-01 08:45:20.060|I|Thread-1|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 08:45:20.060|I|Thread-1|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 08:45:20.331|I|Thread-1|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001.xlsx
2023-09-01 08:45:20.331|I|Thread-1|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GKUser.data.xlsx
2023-09-01 08:45:20.582|I|Thread-1|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001.xlsx
2023-09-01 08:45:21.410|I|Thread-1|STARTS
2023-09-01 08:45:22.484|I|Thread-1|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:45:22.496|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx' from 'Test Plan' step 5
2023-09-01 08:45:22.505|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:45:22.511|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token - executing test scenario
2023-09-01 08:45:22.512|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token - executing activity
2023-09-01 08:45:22.517|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:45:24.006|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:45:24.831|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:45:25.435|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:45:26.064|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:45:26.666|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:45:27.485|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:45:28.761|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:45:28.765|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:45:28.821|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:45:29.435|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:45:30.073|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:45:30.120|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:45:30.121|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:45:30.797|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:45:30.798|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:45:32.144|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:45:32.777|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:45:33.383|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:45:34.006|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:45:34.620|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:45:35.243|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:45:35.848|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:45:36.469|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:45:37.484|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:45:37.485|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:45:37.528|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:45:38.140|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:45:38.769|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:45:38.793|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:45:38.794|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:45:39.423|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:45:39.424|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token|Login Token - ending activity
2023-09-01 08:45:40.113|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Token] saving test scenario
2023-09-01 08:45:40.280|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get - executing test scenario
2023-09-01 08:45:40.280|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers - executing activity
2023-09-01 08:45:40.280|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:45:40.930|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:45:40.930|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}organisation/gkusers)
2023-09-01 08:45:41.570|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/organisation/gkusers' as ${url}
2023-09-01 08:45:41.571|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:45:42.185|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/organisation/gkusers HTTP/1.1
2023-09-01 08:45:42.992|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:45:42.993|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/organisation/gkusers HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:45:43.019|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/organisation/gkusers'
2023-09-01 08:45:43.020|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(0, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:45:43.676|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  8|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:45:43.677|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  9|base.save(var,value)      - executing save(var,value)(GkResultCount, [JSON(${response}.body) => count(gkresult)])
2023-09-01 08:45:44.327|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|#  9|base.save(var,value)      - PASS stored '6' as ${GkResultCount}
2023-09-01 08:45:44.329|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 10|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:45:44.956|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 10|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:45:44.957|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 11|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(4, -1)
2023-09-01 08:45:45.571|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:45:45.573|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:45:46.176|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:45:46.789|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1257' as ${userid}
2023-09-01 08:45:46.790|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:45:47.403|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1257'
2023-09-01 08:45:47.405|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:45:48.029|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:45:48.030|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:45:48.031|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:45:48.647|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:45:49.255|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1258' as ${userid}
2023-09-01 08:45:49.256|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:45:49.871|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1258'
2023-09-01 08:45:49.872|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:45:50.481|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:45:50.482|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:45:50.483|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:45:51.086|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:45:51.693|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1255' as ${userid}
2023-09-01 08:45:51.694|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:45:52.308|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1255'
2023-09-01 08:45:52.310|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:45:52.915|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2023-09-01 08:45:52.916|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #4---------------------------------------------->
2023-09-01 08:45:52.917|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:45:53.521|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:45:54.127|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1256' as ${userid}
2023-09-01 08:45:54.128|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:45:54.734|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1256'
2023-09-01 08:45:54.735|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:45:55.338|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2023-09-01 08:45:55.340|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #5---------------------------------------------->
2023-09-01 08:45:55.341|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:45:55.944|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:45:56.556|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1259' as ${userid}
2023-09-01 08:45:56.557|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:45:57.173|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1259'
2023-09-01 08:45:57.174|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:45:57.787|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 5
2023-09-01 08:45:57.788|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #6---------------------------------------------->
2023-09-01 08:45:57.789|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:45:58.401|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:45:59.006|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '2' as ${userid}
2023-09-01 08:45:59.007|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:45:59.623|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '2'
2023-09-01 08:45:59.624|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:46:00.226|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 6
2023-09-01 08:46:00.227|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #7---------------------------------------------->
2023-09-01 08:46:00.228|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:46:00.856|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 11|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:46:00.857|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Org_gkUser.txt)
2023-09-01 08:46:02.217|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:46:02.870|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:46:03.476|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:46:04.123|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 809 is less than or equal to 3000
2023-09-01 08:46:04.727|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:46:05.352|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:46:05.954|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:46:05.959|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\Org_gkUser.txt!=null)		=> MATCHED
2023-09-01 08:46:06.784|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:46:07.391|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:46:08.019|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:46:08.033|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers|# 16|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:46:08.037|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - organisation/gkUsers - ending activity
2023-09-01 08:46:08.037|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs - executing activity
2023-09-01 08:46:08.038|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 17|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:46:08.661|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 17|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:46:08.663|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 18|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser/orgs)
2023-09-01 08:46:09.294|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 18|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser/orgs' as ${url}
2023-09-01 08:46:09.295|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:46:09.905|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/gkuser/orgs HTTP/1.1
2023-09-01 08:46:10.698|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:46:10.699|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/gkuser/orgs HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:46:10.727|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser/orgs'
2023-09-01 08:46:10.728|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:46:11.370|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 20|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:46:11.371|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 21|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\gkUserOrgs.txt)
2023-09-01 08:46:12.739|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:46:13.356|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:46:13.965|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:46:14.589|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 12|number.assertLesserOrEqua - PASS 795 is less than or equal to 3000
2023-09-01 08:46:15.203|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:46:15.826|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:46:16.431|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:46:16.432|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\gkUserOrgs.txt!=null)		=> MATCHED
2023-09-01 08:46:17.082|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:46:17.693|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:46:18.311|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:46:18.337|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 21|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:46:18.338|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 22|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:46:18.969|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs|# 22|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:46:18.970|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/orgs - ending activity
2023-09-01 08:46:18.971|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser - executing activity
2023-09-01 08:46:18.971|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 23|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:46:19.621|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 23|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:46:19.622|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 24|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:46:20.259|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 24|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:46:20.259|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 25|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:46:20.891|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 25|base.save(var,value)      - PASS stored 'test75445' as ${randomUsername}
2023-09-01 08:46:20.892|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 26|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:46:21.534|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 26|base.save(var,value)      - PASS stored '{
    "username": "test75445",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:46:21.535|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:46:22.143|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:46:23.148|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:46:23.149|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:46:23.179|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:46:23.180|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 28|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:46:23.828|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 28|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:46:23.829|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 29|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:46:25.185|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:46:25.816|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:46:26.433|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:46:27.064|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1006 is less than or equal to 3000
2023-09-01 08:46:27.667|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:46:28.297|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:46:28.902|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:46:28.904|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:46:29.530|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:46:30.136|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:46:30.756|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:46:30.778|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 29|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:46:30.779|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 30|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:46:31.426|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser|# 30|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:46:31.427|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser - ending activity
2023-09-01 08:46:31.428|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question - executing activity
2023-09-01 08:46:31.428|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 31|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/pwd/question?username=${randomUsername})
2023-09-01 08:46:32.057|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 31|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test75445' as ${url}
2023-09-01 08:46:32.059|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:46:32.665|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test75445 HTTP/1.1
2023-09-01 08:46:33.409|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:46:33.410|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test75445 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:46:33.443|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test75445'
2023-09-01 08:46:33.444|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:46:34.084|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 33|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:46:34.085|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 34|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult.userid)])
2023-09-01 08:46:34.731|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 34|base.save(var,value)      - PASS stored '1365' as ${userid}
2023-09-01 08:46:34.732|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\pwdQuestion.txt)
2023-09-01 08:46:36.085|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:46:36.699|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:46:37.306|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:46:37.935|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 12|number.assertLesserOrEqua - PASS 745 is less than or equal to 3000
2023-09-01 08:46:38.538|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:46:39.162|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:46:39.765|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:46:39.767|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\pwdQuestion.txt!=null)		=> MATCHED
2023-09-01 08:46:40.401|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:46:41.002|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:46:41.628|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:46:41.638|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 35|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:46:41.639|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:46:42.275|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question|# 36|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:46:42.276|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive/gkuser/pwd/question - ending activity
2023-09-01 08:46:42.276|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer - executing activity
2023-09-01 08:46:42.277|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:46:42.911|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 37|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:46:42.912|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/pwd/answer?userid=${userid}&useranswer=${answer})
2023-09-01 08:46:43.555|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 38|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1365&useranswer=admin' as ${url}
2023-09-01 08:46:43.556|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:46:44.162|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1365&useranswer=admin HTTP/1.1
2023-09-01 08:46:44.926|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:46:44.927|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1365&useranswer=admin HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:46:44.974|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1365&useranswer=admin'
2023-09-01 08:46:44.975|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 40|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:46:45.610|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 40|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:46:45.611|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 41|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\pwdAnswer.txt)
2023-09-01 08:46:46.939|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:46:47.577|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:46:48.187|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:46:48.820|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 766 is less than or equal to 3000
2023-09-01 08:46:49.426|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:46:50.055|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:46:50.657|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:46:50.659|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\pwdAnswer.txt!=null)		=> MATCHED
2023-09-01 08:46:51.283|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:46:51.886|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:46:52.505|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:46:52.521|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 41|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:46:52.521|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 42|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:46:53.155|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer|# 42|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:46:53.156|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|Positive - gkUser/pwd/answer - ending activity
2023-09-01 08:46:53.156|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} - executing activity
2023-09-01 08:46:53.157|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 43|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:46:53.789|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 43|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:46:53.790|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 44|base.save(var,value)      - executing save(var,value)(NewUser, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:46:54.427|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 44|base.save(var,value)      - PASS stored 'test55262' as ${NewUser}
2023-09-01 08:46:54.428|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 45|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${NewUser}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:46:55.065|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 45|base.save(var,value)      - PASS stored '{
    "username": "test55262",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:46:55.066|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:46:55.680|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:46:56.702|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:46:56.703|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:46:56.728|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:46:56.729|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 47|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:46:57.358|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 47|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:46:57.359|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 48|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\gkUser.txt)
2023-09-01 08:46:58.705|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:46:59.338|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:46:59.947|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:47:00.587|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1025 is less than or equal to 3000
2023-09-01 08:47:01.190|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:47:01.817|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:47:02.420|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:47:02.422|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\gkUser.txt!=null)		=> MATCHED
2023-09-01 08:47:03.041|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:47:03.650|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:47:04.262|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:47:04.273|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 48|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:47:04.274|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 49|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:47:04.931|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 49|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:47:04.931|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 50|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/check/username=${NewUser})
2023-09-01 08:47:05.553|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 50|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/check/username=test55262' as ${url}
2023-09-01 08:47:05.553|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response_CheckUser)
2023-09-01 08:47:06.170|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/check/username=test55262 HTTP/1.1
2023-09-01 08:47:06.979|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:47:06.981|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/check/username=test55262 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:47:07.002|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/check/username=test55262'
2023-09-01 08:47:07.003|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 52|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response_CheckUser}.body) => extract(gkstatus)])
2023-09-01 08:47:07.641|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 52|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:47:07.642|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 53|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response_CheckUser}.returnCode
actualResponseTime=${response_CheckUser}.elapsedTime
actualContentType=${response_CheckUser}.headers.[Content-Type]
responseBody=${response_CheckUser}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\checkUser.txt)
2023-09-01 08:47:08.956|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:47:09.600|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:47:10.202|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:47:10.831|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 810 is less than or equal to 3000
2023-09-01 08:47:11.441|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:47:12.074|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:47:12.683|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:47:12.685|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\checkUser.txt!=null)		=> MATCHED
2023-09-01 08:47:13.306|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:47:13.922|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:47:14.544|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: schema
2023-09-01 08:47:14.555|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 53|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:47:14.556|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 54|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:47:15.207|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username}|# 54|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:47:15.208|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get|gkUser/check/{username} - ending activity
2023-09-01 08:47:16.975|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Get] saving test scenario
2023-09-01 08:47:17.117|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post - executing test scenario
2023-09-01 08:47:17.117|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User - executing activity
2023-09-01 08:47:17.119|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  5|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:47:17.752|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  5|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:47:17.752|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  6|base.save(var,value)      - executing save(var,value)(body, {
    "username": "test[NUMBER(${num})=>randomDigits(5)]",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:47:18.394|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  6|base.save(var,value)      - PASS stored '{
    "username": "test42418",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:47:18.395|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  7|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:47:19.007|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  7|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:47:20.048|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  7|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:47:20.050|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  7|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:47:20.073|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  7|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:47:20.074|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:47:20.728|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:47:20.728|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  9|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:47:22.053|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:47:22.691|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:47:23.302|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:47:23.927|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1044 is less than or equal to 3000
2023-09-01 08:47:24.545|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:47:25.184|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:47:25.798|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:47:25.799|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:47:26.426|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:47:27.028|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:47:27.649|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:47:27.661|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|#  9|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:47:27.662|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:47:28.287|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User|# 10|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:47:28.288|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post|Create User - ending activity
2023-09-01 08:47:28.575|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Post] saving test scenario
2023-09-01 08:47:28.752|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put - executing test scenario
2023-09-01 08:47:28.753|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset - executing activity
2023-09-01 08:47:28.753|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:47:29.389|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:47:29.390|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:47:30.024|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:47:30.025|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:47:30.678|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  7|base.save(var,value)      - PASS stored 'test65420' as ${randomUsername}
2023-09-01 08:47:30.678|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  8|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:47:31.322|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  8|base.save(var,value)      - PASS stored '{
    "username": "test65420",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:47:31.323|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:47:31.941|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:47:32.981|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:47:32.983|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:47:33.017|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:47:33.019|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 10|base.save(var,value)      - executing save(var,value)(actualAnswer, ${answer})
2023-09-01 08:47:33.648|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 10|base.save(var,value)      - PASS stored 'admin' as ${actualAnswer}
2023-09-01 08:47:33.648|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:47:34.285|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:47:34.286|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 12|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:47:35.606|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:47:36.230|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:47:36.842|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:47:37.456|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1042 is less than or equal to 3000
2023-09-01 08:47:38.058|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:47:38.691|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:47:39.304|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:47:39.305|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:47:39.936|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:47:40.538|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:47:41.156|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:47:41.166|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 12|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:47:41.166|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:47:41.796|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:47:41.797|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/pwd/question?username=${randomUsername})
2023-09-01 08:47:42.449|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 14|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test65420' as ${url}
2023-09-01 08:47:42.450|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:47:43.054|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test65420 HTTP/1.1
2023-09-01 08:47:43.841|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:47:43.842|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test65420 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:47:43.870|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test65420'
2023-09-01 08:47:43.870|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 16|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:47:44.507|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 16|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:47:44.509|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 17|base.save(var,value)      - executing save(var,value)(actualUserid, [JSON(${response}.body) => extract(gkresult.userid)])
2023-09-01 08:47:45.149|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 17|base.save(var,value)      - PASS stored '1368' as ${actualUserid}
2023-09-01 08:47:45.149|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 18|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\pwdQuestion.txt)
2023-09-01 08:47:46.471|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:47:47.106|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:47:47.708|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:47:48.335|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - PASS 789 is less than or equal to 3000
2023-09-01 08:47:48.945|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:47:49.561|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:47:50.177|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:47:50.179|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\pwdQuestion.txt!=null)		=> MATCHED
2023-09-01 08:47:50.800|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:47:51.416|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:47:52.038|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:47:52.050|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 18|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:47:52.050|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 19|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:47:52.673|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 19|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:47:52.674|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 20|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser/pwd/reset)
2023-09-01 08:47:53.320|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 20|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser/pwd/reset' as ${url}
2023-09-01 08:47:53.321|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 21|base.save(var,value)      - executing save(var,value)(body, {
  "userid": "${actualUserid}",
  "useranswer": "${actualAnswer}",
  "userpassword": "${resetPassword}"
}
)
2023-09-01 08:47:53.951|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 21|base.save(var,value)      - PASS stored '{
  "userid": "1368",
  "useranswer": "admin",
  "userpassword": "User12345"
}
' as ${body}
2023-09-01 08:47:53.952|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 08:47:54.564|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/gkuser/pwd/reset HTTP/1.1
2023-09-01 08:47:55.611|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 08:47:55.612|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/gkuser/pwd/reset HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:47:55.631|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser/pwd/reset'
2023-09-01 08:47:55.632|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 23|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:47:56.272|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 23|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:47:56.273|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 24|base.verbose(text)        - executing verbose(text)(${response}.body)
2023-09-01 08:47:56.880|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 24|base.verbose(text)        - 
{"gkstatus": 0}
2023-09-01 08:47:56.882|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 24|base.verbose(text)        - PASS 
2023-09-01 08:47:56.884|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 25|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\resetUser.txt)
2023-09-01 08:47:58.239|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:47:58.863|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:47:59.469|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:48:00.100|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1049 is less than or equal to 3000
2023-09-01 08:48:00.713|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:48:01.343|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:48:01.959|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:48:01.961|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\resetUser.txt!=null)		=> MATCHED
2023-09-01 08:48:02.577|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:48:03.184|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:48:03.797|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:48:03.817|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 25|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:48:03.818|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:48:04.461|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset|# 26|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:48:04.461|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|gkUser/pwd/reset - ending activity
2023-09-01 08:48:04.462|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|Clear the Token - executing activity
2023-09-01 08:48:04.463|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|Clear the Token|# 27|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:48:05.079|I|Thread-1|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:48:05.091|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|Clear the Token|# 27|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:48:05.092|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put|Clear the Token - ending activity
2023-09-01 08:48:05.909|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001|Put] saving test scenario
2023-09-01 08:48:06.140|I|Thread-1|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 163627 ms
» Test Steps:     167
» Error(s):       0



2023-09-01 08:48:06.697|I|Thread-1|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 168178 ms
» Iterations:     [1] total 1
» Test Steps:     167
» Passed:         167
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.001,GKUser.20230901_084520.001.xlsx



2023-09-01 08:48:06.697|I|Thread-1|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:48:06.924|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx] now completed
2023-09-01 08:48:06.924|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GNUKhata.data.xlsx
2023-09-01 08:48:06.986|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 08:48:06.986|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx] new thread started
2023-09-01 08:48:06.989|I|Thread-5|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:48:06.990|I|Thread-5|On-Demand Inspection detection enabled
2023-09-01 08:48:06.991|I|Thread-5|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx with 1 iteration(s)
2023-09-01 08:48:06.991|I|Thread-5|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 08:48:06.992|I|Thread-5|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 08:48:07.147|I|Thread-5|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001.xlsx
2023-09-01 08:48:07.148|I|Thread-5|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GNUKhata.data.xlsx
2023-09-01 08:48:07.232|I|Thread-5|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001.xlsx
2023-09-01 08:48:07.541|I|Thread-5|STARTS
2023-09-01 08:48:07.551|I|Thread-5|skipping test step in ROW 5 since it's disabled
2023-09-01 08:48:07.552|I|Thread-5|skipping test step in ROW 6 since it's disabled
2023-09-01 08:48:07.554|I|Thread-5|skipping test step in ROW 7 since it's disabled
2023-09-01 08:48:08.575|I|Thread-5|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:48:08.576|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx' from 'Test Plan' step 6
2023-09-01 08:48:08.576|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:48:08.577|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token - executing test scenario
2023-09-01 08:48:08.578|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token - executing activity
2023-09-01 08:48:08.579|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:48:09.884|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:48:10.504|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:48:11.109|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:48:11.721|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:48:12.334|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:48:12.942|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:48:14.014|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:48:14.015|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:48:14.042|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:48:14.647|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:48:15.277|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:48:15.290|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:48:15.291|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:48:15.926|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:48:15.927|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:48:17.252|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:48:17.884|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:48:18.486|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:48:19.116|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:48:19.718|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:48:20.338|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:48:20.948|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:48:21.557|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:48:22.549|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:48:22.550|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:48:22.566|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:48:23.169|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:48:23.802|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:48:23.813|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:48:23.814|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:48:24.431|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:48:24.432|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(jSessionId, ${response}.cookies.JSESSIONID.value)
2023-09-01 08:48:25.082|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored '.value' as ${jSessionId}
2023-09-01 08:48:25.083|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token|Login Token - ending activity
2023-09-01 08:48:25.462|I|Thread-5|[GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Token] saving test scenario
2023-09-01 08:48:25.582|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post - executing test scenario
2023-09-01 08:48:25.582|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Set headers - executing activity
2023-09-01 08:48:25.582|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 08:48:26.205|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 08:48:26.206|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 08:48:26.855|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 08:48:26.856|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Set headers - ending activity
2023-09-01 08:48:26.856|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User - executing activity
2023-09-01 08:48:26.857|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:48:27.480|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:48:27.480|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|#  8|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:48:28.133|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|#  8|base.save(var,value)      - PASS stored 'test79411' as ${randomUsername}
2023-09-01 08:48:28.134|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|#  9|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:48:28.775|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|#  9|base.save(var,value)      - PASS stored '{
    "username": "test79411",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:48:28.776|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 10|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:48:29.385|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 10|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:48:30.416|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 10|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:48:30.418|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 10|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:48:30.435|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 10|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:48:30.436|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 11|base.verbose(text)        - executing verbose(text)(${response}.body)
2023-09-01 08:48:31.042|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 11|base.verbose(text)        - 
{"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3Q3OTQxMSIsInVzZXJpZCI6MTM2OX0.0okf9A25QqUHF2V0vFXj6Wz-dFYSzRMyKcBZ9MBE7pw"}
2023-09-01 08:48:31.045|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 11|base.verbose(text)        - PASS 
2023-09-01 08:48:31.046|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)([JSON(${response}.body) => extract(gkstatus)], 0)
2023-09-01 08:48:31.669|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 12|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:48:31.669|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 13|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:48:33.032|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:48:33.664|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:48:34.273|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:48:34.906|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1034 is less than or equal to 3000
2023-09-01 08:48:35.515|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:48:36.136|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:48:36.742|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:48:36.744|I|Thread-5|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GNUKhata\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:48:37.365|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:48:37.969|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:48:38.584|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:48:38.594|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User|# 13|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:48:38.594|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create User - ending activity
2023-09-01 08:48:38.594|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID - executing activity
2023-09-01 08:48:38.595|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 14|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:48:39.223|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 14|base.save(var,value)      - PASS stored '{
    "username": "test79411",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:48:39.224|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:48:39.835|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:48:40.839|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:48:40.840|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:48:40.868|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:48:40.868|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 16|base.assertEqual(expected - executing assertEqual(expected,actual)([JSON(${response}.body) => extract(gkstatus)], 1)
2023-09-01 08:48:41.525|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 16|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '1' = '1'
2023-09-01 08:48:41.526|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DuplicateUser.txt)
2023-09-01 08:48:42.852|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:48:43.482|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:48:44.094|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:48:44.728|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1005 is less than or equal to 3000
2023-09-01 08:48:45.341|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:48:45.959|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:48:46.567|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:48:46.569|I|Thread-5|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GNUKhata\DuplicateUser.txt!=null)		=> MATCHED
2023-09-01 08:48:47.182|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:48:47.795|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:48:48.408|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:48:48.427|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 17|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:48:48.428|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 18|ws.clearHeaders(headers)  - executing clearHeaders(headers)(Authorization,Cookie)
2023-09-01 08:48:49.039|I|Thread-5|removed nexial.ws.header.Authorization as HTTP Header; previous value=""
2023-09-01 08:48:49.040|I|Thread-5|removed nexial.ws.header.Cookie as HTTP Header; previous value=JSESSIONID=.value
2023-09-01 08:48:49.057|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID|# 18|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:48:49.058|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post|Create user with exisiting ID - ending activity
2023-09-01 08:48:49.485|I|Thread-5|[GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Post] saving test scenario
2023-09-01 08:48:49.590|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get - executing test scenario
2023-09-01 08:48:49.591|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get|Read Organisation details - executing activity
2023-09-01 08:48:49.591|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get|Read Organisation details|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${response})
2023-09-01 08:48:49.595|I|Thread-5|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:48:49.597|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get|Read Organisation details|#  5|ws.header(name,value)     - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:48:49.597|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get|Read Organisation details|#  6|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:48:49.599|I|Thread-5|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:48:49.599|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get|Read Organisation details|#  6|ws.assertReturnCode(var,r - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:48:49.600|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get|Read Organisation details|#  7|number.assertLesser(num1, - executing assertLesser(num1,num2)(${response}.elapsedTime, 3000)
2023-09-01 08:48:49.600|I|Thread-5|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:48:49.600|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get|Read Organisation details|#  7|number.assertLesser(num1, - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:48:49.601|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get|Read Organisation details - ending activity
2023-09-01 08:48:49.616|I|Thread-5|[GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001|Get] saving test scenario
2023-09-01 08:48:49.707|I|Thread-5|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 41130 ms
» Test Steps:     41
» Error(s):       0



2023-09-01 08:48:50.046|I|Thread-5|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 43057 ms
» Iterations:     [1] total 1
» Test Steps:     41
» Passed:         38
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_084806.001.xlsx



2023-09-01 08:48:50.047|I|Thread-5|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:48:50.382|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx] now completed
2023-09-01 08:48:50.383|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Account.data.xlsx
2023-09-01 08:48:50.433|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 08:48:50.435|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx] new thread started
2023-09-01 08:48:50.438|I|Thread-8|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:48:50.439|I|Thread-8|On-Demand Inspection detection enabled
2023-09-01 08:48:50.439|I|Thread-8|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx with 1 iteration(s)
2023-09-01 08:48:50.440|I|Thread-8|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 08:48:50.440|I|Thread-8|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 08:48:50.599|I|Thread-8|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001.xlsx
2023-09-01 08:48:50.599|I|Thread-8|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Account.data.xlsx
2023-09-01 08:48:50.677|I|Thread-8|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001.xlsx
2023-09-01 08:48:50.940|I|Thread-8|STARTS
2023-09-01 08:48:51.953|I|Thread-8|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:48:51.953|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx' from 'Test Plan' step 7
2023-09-01 08:48:51.954|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:48:51.955|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token - executing test scenario
2023-09-01 08:48:51.955|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token - executing activity
2023-09-01 08:48:51.956|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:48:53.287|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:48:53.900|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:48:54.510|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:48:55.137|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:48:55.751|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:48:56.358|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:48:57.408|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:48:57.409|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:48:57.434|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:48:58.038|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:48:58.654|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:48:58.665|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:48:58.665|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:48:59.312|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:48:59.313|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:49:00.652|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:49:01.272|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:49:01.883|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:49:02.494|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:49:03.098|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:49:03.716|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:49:04.318|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:49:04.934|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:49:06.180|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:49:06.181|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:49:06.206|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:49:06.808|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:49:07.441|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:49:07.453|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:49:07.453|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:49:08.099|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:49:08.100|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token|Login Token - ending activity
2023-09-01 08:49:08.485|I|Thread-8|[GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Token] saving test scenario
2023-09-01 08:49:08.565|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get - executing test scenario
2023-09-01 08:49:08.565|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) - executing activity
2023-09-01 08:49:08.566|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:49:09.194|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:49:09.194|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 08:49:09.828|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 08:49:09.829|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:49:10.435|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 08:49:11.745|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:49:11.988|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:49:12.017|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 08:49:12.018|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:49:12.672|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:49:12.672|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  9|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Accounts.txt)
2023-09-01 08:49:14.037|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:49:14.669|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:49:15.271|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:49:15.889|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1555 is less than or equal to 3000
2023-09-01 08:49:16.500|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:49:17.136|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:49:17.740|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:49:17.741|I|Thread-8|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Account\\Accounts.txt!=null)		=> MATCHED
2023-09-01 08:49:18.382|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:49:18.997|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:49:19.620|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:49:19.642|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|#  9|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:49:19.642|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:49:20.280|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|# 10|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:49:20.281|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|# 11|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:49:20.883|I|Thread-8|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:49:20.907|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts)|# 11|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:49:20.908|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts (List of accounts) - ending activity
2023-09-01 08:49:20.908|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet - executing activity
2023-09-01 08:49:20.909|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 12|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:49:21.543|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 12|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:49:21.543|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 13|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts/spreadsheet?fystart=${fystart}&fyend=${fyend}&orgname=${orgname}&orgtype=${orgtype})
2023-09-01 08:49:22.171|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 13|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For Profit' as ${url}
2023-09-01 08:49:22.172|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:49:22.781|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For+Profit HTTP/1.1
2023-09-01 08:49:23.948|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:49:23.958|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For+Profit HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:49:24.007|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For Profit'
2023-09-01 08:49:24.007|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 15|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=4000
expectedContentType=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
)
2023-09-01 08:49:25.438|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:49:26.071|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:49:26.685|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:49:27.318|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1178 is less than or equal to 4000
2023-09-01 08:49:27.933|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:49:28.558|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
2023-09-01 08:49:29.162|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:49:29.163|I|Thread-8|evaluating flow control:	ProceedIf(!=null)		=> NOT MATCHED
2023-09-01 08:49:29.164|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 14|json.assertCorrectness(js - SKIPPED current step skipped: NOT TRUE(${schema} != null)
2023-09-01 08:49:29.775|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:49:30.399|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response
2023-09-01 08:49:30.411|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 15|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:49:30.412|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 16|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:49:31.044|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 16|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:49:31.044|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 17|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:49:31.657|I|Thread-8|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:49:31.675|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet|# 17|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:49:31.675|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get|Positive - accounts/Spreadsheet - ending activity
2023-09-01 08:49:32.248|I|Thread-8|[GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Get] saving test scenario
2023-09-01 08:49:32.351|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post - executing test scenario
2023-09-01 08:49:32.352|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Set headers - executing activity
2023-09-01 08:49:32.352|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:49:32.968|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:49:32.968|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Set headers - ending activity
2023-09-01 08:49:32.969|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation - executing activity
2023-09-01 08:49:32.969|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 08:49:33.585|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 08:49:33.586|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|#  7|base.save(var,value)      - executing save(var,value)(randomACname, test[NUMBER(${num})=>randomDigits(3)])
2023-09-01 08:49:34.226|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|#  7|base.save(var,value)      - PASS stored 'test198' as ${randomACname}
2023-09-01 08:49:34.226|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|#  8|base.save(var,value)      - executing save(var,value)(randomOrigin, createAccount[NUMBER(${num})=>randomDigits(1)])
2023-09-01 08:49:34.850|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|#  8|base.save(var,value)      - PASS stored 'createAccount2' as ${randomOrigin}
2023-09-01 08:49:34.851|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|#  9|base.save(var,value)      - executing save(var,value)(body, {
    "origin":"${randomOrigin}",
    "gkdata":{
        "accountname": "${randomACname}",
        "groupcode": 18,
        "openingbal": "0.00"
    }
})
2023-09-01 08:49:35.494|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|#  9|base.save(var,value)      - PASS stored '{
    "origin":"createAccount2",
    "gkdata":{
        "accountname": "test198",
        "groupcode": 18,
        "openingbal": "0.00"
    }
}' as ${body}
2023-09-01 08:49:35.495|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:49:36.109|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 08:49:37.116|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:49:37.117|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:49:37.156|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 08:49:37.157|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:49:37.792|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:49:37.793|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 12|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\AccountsPost.txt)
2023-09-01 08:49:39.145|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:49:39.771|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:49:40.385|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:49:41.002|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1008 is less than or equal to 3000
2023-09-01 08:49:41.609|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:49:42.239|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:49:42.850|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:49:42.853|I|Thread-8|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Account\\AccountsPost.txt!=null)		=> MATCHED
2023-09-01 08:49:43.477|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:49:44.082|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:49:44.701|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:49:44.726|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 12|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:49:44.727|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:49:45.379|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:49:45.379|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 14|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:49:45.992|I|Thread-8|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:49:46.018|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation|# 14|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:49:46.019|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post|Positive-Organisation - ending activity
2023-09-01 08:49:46.234|I|Thread-8|[GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001|Post] saving test scenario
2023-09-01 08:49:46.336|I|Thread-8|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 54381 ms
» Test Steps:     51
» Error(s):       0



2023-09-01 08:49:46.700|I|Thread-8|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 56263 ms
» Iterations:     [1] total 1
» Test Steps:     51
» Passed:         50
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.003,Account.20230901_084850.001.xlsx



2023-09-01 08:49:46.701|I|Thread-8|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:49:46.959|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx] now completed
2023-09-01 08:49:46.960|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\AuditLogs.data.xlsx
2023-09-01 08:49:47.006|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 08:49:47.008|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx] new thread started
2023-09-01 08:49:47.011|I|Thread-11|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:49:47.011|I|Thread-11|On-Demand Inspection detection enabled
2023-09-01 08:49:47.012|I|Thread-11|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx with 1 iteration(s)
2023-09-01 08:49:47.012|I|Thread-11|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 08:49:47.013|I|Thread-11|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 08:49:47.141|I|Thread-11|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001.xlsx
2023-09-01 08:49:47.141|I|Thread-11|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\AuditLogs.data.xlsx
2023-09-01 08:49:47.196|I|Thread-11|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001.xlsx
2023-09-01 08:49:47.449|I|Thread-11|STARTS
2023-09-01 08:49:48.475|I|Thread-11|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:49:48.476|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx' from 'Test Plan' step 8
2023-09-01 08:49:48.477|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:49:48.477|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token - executing test scenario
2023-09-01 08:49:48.478|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token - executing activity
2023-09-01 08:49:48.479|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:49:49.828|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:49:50.442|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:49:51.045|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:49:51.676|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:49:52.281|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:49:52.893|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:49:53.898|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:49:53.900|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:49:53.938|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:49:54.546|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:49:55.172|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:49:55.186|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:49:55.186|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:49:55.838|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:49:55.839|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 08:49:56.450|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:49:56.453|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 08:49:56.454|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:49:57.768|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:49:58.406|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:49:59.009|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:49:59.629|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:50:00.235|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:50:00.849|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:50:01.459|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:50:02.072|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:50:03.089|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:50:03.091|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:50:03.111|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:50:03.725|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:50:04.345|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:50:04.354|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:50:04.354|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:50:05.003|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:50:05.004|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 08:50:05.618|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:50:05.620|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 08:50:05.621|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token|Login Token - ending activity
2023-09-01 08:50:06.031|I|Thread-11|[GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Token] saving test scenario
2023-09-01 08:50:06.140|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get - executing test scenario
2023-09-01 08:50:06.140|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log - executing activity
2023-09-01 08:50:06.141|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  5|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}log)
2023-09-01 08:50:06.763|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  5|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/log' as ${url}
2023-09-01 08:50:06.764|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:50:07.375|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log HTTP/1.1
2023-09-01 08:50:08.165|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:50:08.166|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:50:08.185|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log'
2023-09-01 08:50:08.186|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  7|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:50:08.827|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  7|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:50:08.828|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 08:50:10.140|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:50:10.765|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:50:11.372|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:50:11.996|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 792 is less than or equal to 3000
2023-09-01 08:50:12.600|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:50:13.224|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:50:13.829|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:50:13.830|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 08:50:14.451|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:50:15.055|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:50:15.673|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:50:15.685|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:50:15.686|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  9|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:50:16.322|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log|#  9|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:50:16.323|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /log - ending activity
2023-09-01 08:50:16.323|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log - executing activity
2023-09-01 08:50:16.324|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 10|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:50:16.948|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 10|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:50:16.948|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:50:17.558|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log HTTP/1.1
2023-09-01 08:50:18.348|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:50:18.349|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:50:18.361|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log'
2023-09-01 08:50:18.362|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 12|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:50:19.006|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 12|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:50:19.006|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 13|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\AuditLogs.txt)
2023-09-01 08:50:20.330|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:50:20.957|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:50:21.573|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:50:22.195|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 790 is less than or equal to 3000
2023-09-01 08:50:22.797|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:50:23.428|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:50:24.036|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:50:24.037|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\AuditLogs\\AuditLogs.txt!=null)		=> MATCHED
2023-09-01 08:50:24.664|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:50:25.279|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:50:25.904|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:50:25.925|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 13|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:50:25.926|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 14|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:50:26.556|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log|# 14|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:50:26.557|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive - /log - ending activity
2023-09-01 08:50:26.557|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate - executing activity
2023-09-01 08:50:26.558|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 15|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 08:50:27.163|I|Thread-11|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:50:27.165|I|Thread-11|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:50:27.175|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 15|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:50:27.176|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 16|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}log/dateRange?from=${fromDate}&to=${toDate})
2023-09-01 08:50:27.800|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 16|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30' as ${url}
2023-09-01 08:50:27.801|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:50:28.408|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1
2023-09-01 08:50:29.186|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:50:29.187|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:50:29.213|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30'
2023-09-01 08:50:29.214|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 18|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:50:29.853|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 18|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:50:29.854|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 19|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 08:50:31.176|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:50:31.794|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:50:32.407|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:50:33.037|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - PASS 779 is less than or equal to 3000
2023-09-01 08:50:33.646|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:50:34.279|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:50:34.885|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:50:34.887|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 08:50:35.523|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:50:36.134|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:50:36.752|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:50:36.773|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 19|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:50:36.774|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 20|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:50:37.405|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate|# 20|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:50:37.405|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Negative - /logs/rangedate - ending activity
2023-09-01 08:50:37.405|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate - executing activity
2023-09-01 08:50:37.407|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 21|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:50:38.035|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 21|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:50:38.035|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 22|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:50:38.653|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 22|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:50:38.654|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:50:39.265|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1
2023-09-01 08:50:40.044|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:50:40.045|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:50:40.066|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30'
2023-09-01 08:50:40.067|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:50:40.704|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 24|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:50:40.705|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 25|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DateRangePositiveResponse.txt)
2023-09-01 08:50:42.049|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:50:42.684|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:50:43.298|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:50:43.931|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - PASS 780 is less than or equal to 3000
2023-09-01 08:50:44.546|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:50:45.170|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:50:45.778|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:50:45.779|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\AuditLogs\\DateRangePositiveResponse.txt!=null)		=> MATCHED
2023-09-01 08:50:46.390|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:50:47.006|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:50:47.619|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:50:47.633|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 25|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:50:47.634|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:50:48.282|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 26|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:50:48.283|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 27|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 08:50:48.884|I|Thread-11|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:50:48.885|I|Thread-11|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:50:48.903|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate|# 27|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:50:48.904|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get|Positive -  /logs/rangedate - ending activity
2023-09-01 08:50:49.844|I|Thread-11|[GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Get] saving test scenario
2023-09-01 08:50:49.980|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post - executing test scenario
2023-09-01 08:50:49.980|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers - executing activity
2023-09-01 08:50:49.981|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:50:50.607|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:50:50.608|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}log)
2023-09-01 08:50:51.237|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/log' as ${url}
2023-09-01 08:50:51.238|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  7|base.save(var,value)      - executing save(var,value)(body, {
"activity": "3% Milk Fat product created"
})
2023-09-01 08:50:51.885|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  7|base.save(var,value)      - PASS stored '{
"activity": "3% Milk Fat product created"
}' as ${body}
2023-09-01 08:50:51.886|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  8|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:50:52.496|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  8|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/log HTTP/1.1
2023-09-01 08:50:53.530|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  8|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:50:53.531|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  8|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/log HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:50:53.560|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  8|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log'
2023-09-01 08:50:53.560|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:50:54.207|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|#  9|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:50:54.207|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\createlog.txt)
2023-09-01 08:50:55.554|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:50:56.178|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:50:56.788|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:50:57.410|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1036 is less than or equal to 3000
2023-09-01 08:50:58.016|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:50:58.632|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:50:59.238|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:50:59.239|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\AuditLogs\\createlog.txt!=null)		=> MATCHED
2023-09-01 08:50:59.854|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:51:00.464|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:51:01.078|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:51:01.097|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:51:01.097|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:51:01.740|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:51:01.741|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|# 12|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:51:02.349|I|Thread-11|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:51:02.360|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers|# 12|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:51:02.361|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post|Set headers - ending activity
2023-09-01 08:51:02.588|I|Thread-11|[GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001|Post] saving test scenario
2023-09-01 08:51:02.708|I|Thread-11|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 74231 ms
» Test Steps:     71
» Error(s):       0



2023-09-01 08:51:03.056|I|Thread-11|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 76045 ms
» Iterations:     [1] total 1
» Test Steps:     71
» Passed:         71
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_084947.001.xlsx



2023-09-01 08:51:03.056|I|Thread-11|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:51:03.688|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx] now completed
2023-09-01 08:51:03.688|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\CustomerandSupplier.data.xlsx
2023-09-01 08:51:03.746|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 08:51:03.747|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx] new thread started
2023-09-01 08:51:03.750|I|Thread-14|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:51:03.750|I|Thread-14|On-Demand Inspection detection enabled
2023-09-01 08:51:03.750|I|Thread-14|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx with 1 iteration(s)
2023-09-01 08:51:03.751|I|Thread-14|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 08:51:03.751|I|Thread-14|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 08:51:03.917|I|Thread-14|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001.xlsx
2023-09-01 08:51:03.918|I|Thread-14|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\CustomerandSupplier.data.xlsx
2023-09-01 08:51:03.991|I|Thread-14|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001.xlsx
2023-09-01 08:51:04.270|I|Thread-14|STARTS
2023-09-01 08:51:05.296|I|Thread-14|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:51:05.296|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx' from 'Test Plan' step 9
2023-09-01 08:51:05.297|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:51:05.298|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token - executing test scenario
2023-09-01 08:51:05.299|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token - executing activity
2023-09-01 08:51:05.299|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:51:06.644|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:51:07.267|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:51:07.874|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:51:08.487|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:51:09.097|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:51:09.703|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:51:10.741|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:51:10.743|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:51:10.767|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:51:11.374|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:51:12.009|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:51:12.024|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:51:12.025|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:51:12.664|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:51:12.665|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 08:51:13.269|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:51:13.271|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 08:51:13.272|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:51:14.622|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:51:15.252|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:51:15.864|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:51:16.485|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:51:17.101|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:51:17.715|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:51:18.319|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:51:18.932|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:51:19.948|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:51:19.949|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:51:19.977|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:51:20.584|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:51:21.217|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:51:21.248|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:51:21.249|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:51:21.890|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:51:21.891|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 08:51:22.495|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:51:22.497|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 08:51:22.498|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token|Login Token - ending activity
2023-09-01 08:51:22.850|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|Token] saving test scenario
2023-09-01 08:51:22.975|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST - executing test scenario
2023-09-01 08:51:22.975|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Set headers - executing activity
2023-09-01 08:51:22.975|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:51:23.611|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:51:23.612|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Set headers - ending activity
2023-09-01 08:51:23.612|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer - executing activity
2023-09-01 08:51:23.612|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  6|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:51:24.247|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  6|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:51:24.248|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  7|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(11, -1)
2023-09-01 08:51:24.857|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:51:24.858|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${csflag}))
2023-09-01 08:51:25.468|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - executing save(var,value)(cstflag, $(array|item|${csflag}|${counter}))
2023-09-01 08:51:26.082|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored '3' as ${cstflag}
2023-09-01 08:51:26.083|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - executing save(var,value)(randomCustname, test[NUMBER(${num})=>randomDigits(6)])
2023-09-01 08:51:26.686|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'test624331' as ${randomCustname}
2023-09-01 08:51:26.687|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer)
2023-09-01 08:51:27.296|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer' as ${url}
2023-09-01 08:51:27.297|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - executing save(var,value)(body, {
  "custname": "${randomCustname}",
  "custaddr": "string",
  "state": "${state}",
  "pincode": "string",
  "csflag": ${cstflag},
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
})
2023-09-01 08:51:27.907|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - [repeat-until] PASS stored '{
  "custname": "test624331",
  "custaddr": "string",
  "state": "Karnataka",
  "pincode": "string",
  "csflag": 3,
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
}' as ${body}
2023-09-01 08:51:27.908|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:51:28.514|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/customer HTTP/1.1
2023-09-01 08:51:29.573|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:51:29.574|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/customer HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:51:29.579|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer'
2023-09-01 08:51:29.580|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:51:30.188|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 03:21:28 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1061
body={"gkstatus": 0, "gkresult": {"custid": 746}}
2023-09-01 08:51:30.189|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 03:21:28 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1061
body={"gkstatus": 0, "gkresult": {"custid": 746}}
2023-09-01 08:51:30.190|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:51:30.808|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:51:30.809|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PostCustomer.customer.txt)
2023-09-01 08:51:32.133|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:51:32.735|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:51:33.345|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:51:33.948|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1061 is less than or equal to 3000
2023-09-01 08:51:34.551|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:51:35.164|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:51:35.765|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:51:35.767|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\PostCustomer.customer.txt!=null)		=> MATCHED
2023-09-01 08:51:36.387|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:51:36.993|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:51:37.597|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:51:37.598|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:51:37.599|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:51:38.215|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:51:38.215|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:51:38.831|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:51:38.832|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:51:38.833|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${csflag}))
2023-09-01 08:51:39.444|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - executing save(var,value)(cstflag, $(array|item|${csflag}|${counter}))
2023-09-01 08:51:40.046|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored '19' as ${cstflag}
2023-09-01 08:51:40.047|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - executing save(var,value)(randomCustname, test[NUMBER(${num})=>randomDigits(6)])
2023-09-01 08:51:40.650|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'test366316' as ${randomCustname}
2023-09-01 08:51:40.650|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer)
2023-09-01 08:51:41.257|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer' as ${url}
2023-09-01 08:51:41.259|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - executing save(var,value)(body, {
  "custname": "${randomCustname}",
  "custaddr": "string",
  "state": "${state}",
  "pincode": "string",
  "csflag": ${cstflag},
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
})
2023-09-01 08:51:41.861|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - [repeat-until] PASS stored '{
  "custname": "test366316",
  "custaddr": "string",
  "state": "Karnataka",
  "pincode": "string",
  "csflag": 19,
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
}' as ${body}
2023-09-01 08:51:41.864|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:51:42.470|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/customer HTTP/1.1
2023-09-01 08:51:43.534|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:51:43.535|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/customer HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:51:43.539|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer'
2023-09-01 08:51:43.540|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:51:44.142|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 03:21:42 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1066
body={"gkstatus": 0, "gkresult": {"custid": 747}}
2023-09-01 08:51:44.143|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 03:21:42 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1066
body={"gkstatus": 0, "gkresult": {"custid": 747}}
2023-09-01 08:51:44.145|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:51:44.748|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:51:44.749|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PostCustomer.customer.txt)
2023-09-01 08:51:46.056|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:51:46.663|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:51:47.271|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:51:47.877|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1066 is less than or equal to 3000
2023-09-01 08:51:48.489|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:51:49.092|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:51:49.696|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:51:49.698|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\PostCustomer.customer.txt!=null)		=> MATCHED
2023-09-01 08:51:50.308|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:51:50.923|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:51:51.527|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:51:51.528|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:51:51.529|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:51:52.139|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:51:52.140|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:51:52.742|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:51:52.743|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:51:52.744|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${csflag}))
2023-09-01 08:51:53.366|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer|#  7|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:51:53.368|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST|Create a new customer / supplier : POST- /customer - ending activity
2023-09-01 08:51:53.405|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|POST] saving test scenario
2023-09-01 08:51:53.532|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET - executing test scenario
2023-09-01 08:51:53.532|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Set headers - executing activity
2023-09-01 08:51:53.532|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:51:54.181|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:51:54.182|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Set headers - ending activity
2023-09-01 08:51:54.182|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer - executing activity
2023-09-01 08:51:54.184|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  6|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:51:54.820|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  6|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:51:54.821|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  7|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(11, -1)
2023-09-01 08:51:55.426|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:51:55.427|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${qty}))
2023-09-01 08:51:56.038|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - executing save(var,value)(csqty, $(array|item|${qty}|${counter}))
2023-09-01 08:51:56.644|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored 'custall' as ${csqty}
2023-09-01 08:51:56.645|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer?qty=${csqty})
2023-09-01 08:51:57.251|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer?qty=custall' as ${url}
2023-09-01 08:51:57.252|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:51:57.858|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer?qty=custall HTTP/1.1
2023-09-01 08:51:58.629|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:51:58.631|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer?qty=custall HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:51:58.636|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer?qty=custall'
2023-09-01 08:51:58.636|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:51:59.247|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=644, Date=Fri, 01 Sep 2023 03:21:57 GMT, Content-Type=application/json}
contentLength=644
elapsedTime=773
body={"gkstatus": 0, "gkresult": [{"custid": 583, "custname": "Cust32142"}, {"custid": 733, "custname": "Customer1"}, {"custid": 581, "custname": "Customer3214"}, {"custid": 574, "custname": "Retail Customer (Default)"}, {"custid": 586, "custname": "test225816"}, {"custid": 742, "custname": "test230236"}, {"custid": 584, "custname": "test410794"}, {"custid": 588, "custname": "test519863"}, {"custid": 580, "custname": "test532628"}, {"custid": 576, "custname": "test5628"}, {"custid": 746, "custname...
2023-09-01 08:51:59.248|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=644, Date=Fri, 01 Sep 2023 03:21:57 GMT, Content-Type=application/json}
contentLength=644
elapsedTime=773
body={"gkstatus": 0, "gkresult": [{"custid": 583, "custname": "Cust32142"}, {"custid": 733, "custname": "Customer1"}, {"custid": 581, "custname": "Customer3214"}, {"custid": 574, "custname": "Retail Customer (Default)"}, {"custid": 586, "custname": "test225816"}, {"custid": 742, "custname": "test230236"}, {"custid": 584, "custname": "test410794"}, {"custid": 588, "custname": "test519863"}, {"custid": 580, "custname": "test532628"}, {"custid": 576, "custname": "test5628"}, {"custid": 746, "custname...
2023-09-01 08:51:59.249|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:51:59.854|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:51:59.855|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - executing save(var,value)(custid, [JSON(${response}.body) => extract(gkresult[0].custid)])
2023-09-01 08:52:00.467|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - [repeat-until] PASS stored '583' as ${custid}
2023-09-01 08:52:00.468|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - executing save(var,value)(custname, [JSON(${response}.body) => extract(gkresult[0].custname)])
2023-09-01 08:52:01.081|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored 'Cust32142' as ${custname}
2023-09-01 08:52:01.082|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.customer.txt)
2023-09-01 08:52:02.420|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:52:03.023|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:52:03.627|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:52:04.234|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 773 is less than or equal to 3000
2023-09-01 08:52:04.835|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:52:05.439|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:52:06.052|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:52:06.053|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\Get.customer.txt!=null)		=> MATCHED
2023-09-01 08:52:06.661|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:52:07.275|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:52:07.879|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:52:07.887|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:52:07.888|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:52:08.504|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:52:08.505|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:52:09.108|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:52:09.109|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:52:09.110|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${qty}))
2023-09-01 08:52:09.726|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - executing save(var,value)(csqty, $(array|item|${qty}|${counter}))
2023-09-01 08:52:10.328|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored 'supall' as ${csqty}
2023-09-01 08:52:10.329|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer?qty=${csqty})
2023-09-01 08:52:10.931|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer?qty=supall' as ${url}
2023-09-01 08:52:10.933|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:52:11.545|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer?qty=supall HTTP/1.1
2023-09-01 08:52:12.329|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:52:12.330|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer?qty=supall HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:52:12.335|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer?qty=supall'
2023-09-01 08:52:12.336|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:52:12.956|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=471, Date=Fri, 01 Sep 2023 03:22:10 GMT, Content-Type=application/json}
contentLength=471
elapsedTime=786
body={"gkstatus": 0, "gkresult": [{"custid": 582, "custname": "Cust43242"}, {"custid": 573, "custname": "Retail Supplier (Default)"}, {"custid": 734, "custname": "Supplier"}, {"custid": 743, "custname": "test131898"}, {"custid": 745, "custname": "test229718"}, {"custid": 589, "custname": "test349080"}, {"custid": 747, "custname": "test366316"}, {"custid": 591, "custname": "test744388"}, {"custid": 587, "custname": "test784299"}, {"custid": 585, "custname": "test881814"}]}
2023-09-01 08:52:12.957|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=471, Date=Fri, 01 Sep 2023 03:22:10 GMT, Content-Type=application/json}
contentLength=471
elapsedTime=786
body={"gkstatus": 0, "gkresult": [{"custid": 582, "custname": "Cust43242"}, {"custid": 573, "custname": "Retail Supplier (Default)"}, {"custid": 734, "custname": "Supplier"}, {"custid": 743, "custname": "test131898"}, {"custid": 745, "custname": "test229718"}, {"custid": 589, "custname": "test349080"}, {"custid": 747, "custname": "test366316"}, {"custid": 591, "custname": "test744388"}, {"custid": 587, "custname": "test784299"}, {"custid": 585, "custname": "test881814"}]}
2023-09-01 08:52:12.958|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:52:13.560|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:52:13.561|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - executing save(var,value)(custid, [JSON(${response}.body) => extract(gkresult[0].custid)])
2023-09-01 08:52:14.177|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - [repeat-until] PASS stored '582' as ${custid}
2023-09-01 08:52:14.178|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - executing save(var,value)(custname, [JSON(${response}.body) => extract(gkresult[0].custname)])
2023-09-01 08:52:14.785|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored 'Cust43242' as ${custname}
2023-09-01 08:52:14.786|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.customer.txt)
2023-09-01 08:52:16.102|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:52:16.708|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:52:17.319|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:52:17.923|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 786 is less than or equal to 3000
2023-09-01 08:52:18.527|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:52:19.135|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:52:19.741|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:52:19.743|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\Get.customer.txt!=null)		=> MATCHED
2023-09-01 08:52:20.350|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:52:20.962|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:52:21.568|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:52:21.569|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:52:21.570|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:52:22.178|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:52:22.179|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:52:22.783|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:52:22.784|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:52:22.785|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${qty}))
2023-09-01 08:52:23.416|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer|#  7|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:52:23.417|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer - ending activity
2023-09-01 08:52:23.418|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts - executing activity
2023-09-01 08:52:23.418|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 08:52:24.041|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 19|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 08:52:24.042|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:52:24.654|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 08:52:26.029|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:52:26.877|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:52:26.889|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 08:52:26.890|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 21|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:52:27.497|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 21|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=54987, Date=Fri, 01 Sep 2023 03:22:24 GMT, Content-Type=application/json}
contentLength=54987
elapsedTime=2224
body={"gkstatus": 0, "gkresult": [{"srno": 1, "accountcode": 5217, "accountname": "Accumulated Depreciation", "openingbal": "0.00", "groupcode": 5107, "groupname": "Fixed Assets", "subgroupcode": "", "subgroupname": "", "sysaccount": 0, "defaultflag": ""}, {"srno": 2, "accountcode": 8174, "accountname": "BCA Purchase", "openingbal": "0.00", "groupcode": 1653, "groupname": "Direct Expense", "subgroupcode": 1654, "subgroupname": "Purchase", "sysaccount": 1, "defaultflag": ""}, {"srno": 3, "accountco...
2023-09-01 08:52:27.501|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 21|base.verbose(text)        - PASS 
2023-09-01 08:52:27.501|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 22|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:52:28.150|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 22|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:52:28.151|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 23|base.save(var,value)      - executing save(var,value)(accountcode, [JSON(${response}.body) => extract(gkresult[8].accountcode)])
2023-09-01 08:52:28.796|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 23|base.save(var,value)      - PASS stored '8208' as ${accountcode}
2023-09-01 08:52:28.796|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 24|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:52:29.414|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts|# 24|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:52:29.415|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get accountcode: GET- /accounts - ending activity
2023-09-01 08:52:29.415|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} - executing activity
2023-09-01 08:52:29.415|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 25|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/search/account/${accountcode})
2023-09-01 08:52:30.034|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 25|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/search/account/8208' as ${url}
2023-09-01 08:52:30.035|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:52:30.646|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer/search/account/8208 HTTP/1.1
2023-09-01 08:52:31.434|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:52:31.435|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer/search/account/8208 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:52:31.465|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/search/account/8208'
2023-09-01 08:52:31.467|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 27|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:52:32.072|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 27|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:22:29 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=789
body={"gkstatus": 3}
2023-09-01 08:52:32.076|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 27|base.verbose(text)        - PASS 
2023-09-01 08:52:32.076|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 28|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:52:32.712|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 28|base.save(var,value)      - PASS stored '3' as ${actualGkStatus}
2023-09-01 08:52:32.712|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 29|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetAccountcode.customer.txt)
2023-09-01 08:52:34.049|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:52:34.679|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:52:35.282|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:52:35.911|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 789 is less than or equal to 3000
2023-09-01 08:52:36.525|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:52:37.143|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:52:37.750|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:52:37.751|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\GetAccountcode.customer.txt!=null)		=> MATCHED
2023-09-01 08:52:38.382|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:52:38.985|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:52:39.605|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:52:39.620|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 29|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:52:39.620|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 30|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:52:40.236|I|Thread-14|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:52:40.254|E|Thread-14|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001.xlsx_GET_A30.log
2023-09-01 08:52:40.254|E|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 30|base.assertEqual(expected - FAIL 
expected=0
actual  =3
2023-09-01 08:52:40.255|E|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 30|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001.xlsx_GET_A30.log
2023-09-01 08:52:40.256|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} - ending activity
2023-09-01 08:52:40.256|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} - executing activity
2023-09-01 08:52:40.256|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 31|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/search/name/${custname})
2023-09-01 08:52:40.878|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 31|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/search/name/Cust43242' as ${url}
2023-09-01 08:52:40.879|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:52:41.483|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer/search/name/Cust43242 HTTP/1.1
2023-09-01 08:52:42.268|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:52:42.269|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer/search/name/Cust43242 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:52:42.288|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/search/name/Cust43242'
2023-09-01 08:52:42.288|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 33|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:52:42.898|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 33|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=486, Date=Fri, 01 Sep 2023 03:22:40 GMT, Content-Type=application/json}
contentLength=486
elapsedTime=787
body={"gkstatus": 0, "gkresult": {"custid": 582, "custname": "Cust43242", "custaddr": "string", "custphone": "string", "custemail": "string", "custfax": "string", "custpan": "string", "custtan": "string", "state": "Karnataka", "custdoc": null, "csflag": 19, "gstin": {"10": "10AABCU9603R1Z2"}, "pincode": "string", "bankdetails": {"ifsc": "string", "bankname": "string", "accountno": "string", "branchname": "string"}, "statelist": [{"10": "Bihar"}], "gst_reg_type": 0, "gst_party_type": 0}}
2023-09-01 08:52:42.900|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 33|base.verbose(text)        - PASS 
2023-09-01 08:52:42.901|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 34|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:52:43.545|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 34|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:52:43.545|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetCustname.customer.txt)
2023-09-01 08:52:44.877|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:52:45.509|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:52:46.115|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:52:46.737|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 787 is less than or equal to 3000
2023-09-01 08:52:47.352|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:52:47.979|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:52:48.583|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:52:48.585|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\GetCustname.customer.txt!=null)		=> MATCHED
2023-09-01 08:52:49.203|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:52:49.806|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:52:50.434|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:52:50.443|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 35|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:52:50.444|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:52:51.069|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 36|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:52:51.070|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} - ending activity
2023-09-01 08:52:51.070|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} - executing activity
2023-09-01 08:52:51.071|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 37|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/${custid})
2023-09-01 08:52:51.697|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 37|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/582' as ${url}
2023-09-01 08:52:51.698|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:52:52.313|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer/582 HTTP/1.1
2023-09-01 08:52:53.089|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:52:53.091|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer/582 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:52:53.110|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/582'
2023-09-01 08:52:53.111|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 39|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:52:53.722|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 39|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=507, Date=Fri, 01 Sep 2023 03:22:51 GMT, Content-Type=application/json}
contentLength=507
elapsedTime=778
body={"gkstatus": 0, "gkresult": {"custid": 582, "custname": "Cust43242", "custaddr": "string", "custphone": "string", "custemail": "string", "custfax": "string", "custpan": "string", "custtan": "string", "state": "Karnataka", "custdoc": null, "csflag": 19, "gstin": {"10": "10AABCU9603R1Z2"}, "pincode": "string", "bankdetails": {"ifsc": "string", "bankname": "string", "accountno": "string", "branchname": "string"}, "statelist": [{"29": "Karnataka"}, {"10": "Bihar"}], "gst_reg_type": 0, "gst_party_...
2023-09-01 08:52:53.724|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 39|base.verbose(text)        - PASS 
2023-09-01 08:52:53.725|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 40|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:52:54.357|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 40|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:52:54.358|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 41|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetCustId.customer.txt)
2023-09-01 08:52:55.677|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:52:56.301|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:52:56.903|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:52:57.529|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 778 is less than or equal to 3000
2023-09-01 08:52:58.136|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:52:58.757|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:52:59.372|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:52:59.373|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\GetCustId.customer.txt!=null)		=> MATCHED
2023-09-01 08:52:59.998|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:53:00.605|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:53:01.225|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:53:01.237|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 41|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:53:01.238|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 42|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:53:01.861|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 42|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:53:01.862|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} - ending activity
2023-09-01 08:53:02.576|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|GET] saving test scenario
2023-09-01 08:53:02.735|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT - executing test scenario
2023-09-01 08:53:02.736|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Set headers - executing activity
2023-09-01 08:53:02.736|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:53:03.360|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:53:03.361|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Set headers|#  6|base.save(var,value)      - executing save(var,value)(pincode, [NUMBER(${num})=>randomDigits(6)])
2023-09-01 08:53:03.998|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Set headers|#  6|base.save(var,value)      - PASS stored '566645' as ${pincode}
2023-09-01 08:53:03.998|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Set headers - ending activity
2023-09-01 08:53:03.999|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} - executing activity
2023-09-01 08:53:03.999|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  7|base.save(var,value)      - executing save(var,value)(body, {
  "custid": ${putcustid},
  "custdoc": {},
  "custname": "${putcustname}",
  "custaddr": "string",
  "state": "${state}",
  "pincode": "${pincode}",
  "csflag": $(array|item|${csflag}|0),
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
})
2023-09-01 08:53:04.638|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  7|base.save(var,value)      - PASS stored '{
  "custid": 30,
  "custdoc": {},
  "custname": "Cust54536",
  "custaddr": "string",
  "state": "Karnataka",
  "pincode": "566645",
  "csflag": 3,
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
}' as ${body}
2023-09-01 08:53:04.640|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  8|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/${putcustid})
2023-09-01 08:53:05.277|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  8|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/30' as ${url}
2023-09-01 08:53:05.277|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 08:53:05.894|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/customer/30 HTTP/1.1
2023-09-01 08:53:06.975|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 08:53:06.976|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/customer/30 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:53:06.997|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/30'
2023-09-01 08:53:06.998|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 10|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:53:07.606|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 10|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:23:05 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1083
body={"gkstatus": 0}
2023-09-01 08:53:07.608|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 10|base.verbose(text)        - PASS 
2023-09-01 08:53:07.609|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:53:08.239|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:53:08.240|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 12|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PutCustid.customer.txt)
2023-09-01 08:53:09.565|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:53:10.195|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:53:10.810|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:53:11.425|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1083 is less than or equal to 3000
2023-09-01 08:53:12.035|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:53:12.667|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:53:13.282|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:53:13.284|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\PutCustid.customer.txt!=null)		=> MATCHED
2023-09-01 08:53:13.896|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:53:14.498|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:53:15.119|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:53:15.129|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 12|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:53:15.130|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:53:15.760|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:53:15.761|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} - ending activity
2023-09-01 08:53:15.940|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|PUT] saving test scenario
2023-09-01 08:53:16.091|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE - executing test scenario
2023-09-01 08:53:16.091|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Set headers - executing activity
2023-09-01 08:53:16.091|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:53:16.717|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:53:16.718|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Set headers - ending activity
2023-09-01 08:53:16.719|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} - executing activity
2023-09-01 08:53:16.719|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/${deletecustid})
2023-09-01 08:53:17.345|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/33' as ${url}
2023-09-01 08:53:17.345|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, , response)
2023-09-01 08:53:17.952|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org/customer/33 HTTP/1.1
2023-09-01 08:53:18.723|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 08:53:18.724|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org/customer/33 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:53:18.738|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/33'
2023-09-01 08:53:18.738|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  8|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:53:19.342|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  8|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:23:17 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=773
body={"gkstatus": 0}
2023-09-01 08:53:19.344|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  8|base.verbose(text)        - PASS 
2023-09-01 08:53:19.344|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:53:19.990|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  9|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:53:19.991|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeleteCustid.customer.txt)
2023-09-01 08:53:21.281|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:53:21.911|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:53:22.520|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:53:23.157|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 773 is less than or equal to 3000
2023-09-01 08:53:23.765|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:53:24.402|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:53:25.017|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:53:25.019|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\DeleteCustid.customer.txt!=null)		=> MATCHED
2023-09-01 08:53:25.642|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:53:26.247|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:53:26.866|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:53:26.884|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:53:26.885|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:53:27.518|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:53:27.519|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} - ending activity
2023-09-01 08:53:27.700|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001|DELETE] saving test scenario
2023-09-01 08:53:27.826|I|Thread-14|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 142529 ms
» Test Steps:     150
» Error(s):       1



2023-09-01 08:53:28.204|I|Thread-14|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 144454 ms
» Iterations:     [1] total 1
» Test Steps:     150
» Passed:         149
» Error(s):       1
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_085103.001.xlsx



2023-09-01 08:53:28.205|I|Thread-14|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:53:28.934|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx] now completed
2023-09-01 08:53:28.934|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Invite.data.xlsx
2023-09-01 08:53:28.980|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 08:53:28.980|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx] new thread started
2023-09-01 08:53:28.985|I|Thread-17|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:53:28.986|I|Thread-17|On-Demand Inspection detection enabled
2023-09-01 08:53:28.987|I|Thread-17|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx with 1 iteration(s)
2023-09-01 08:53:28.987|I|Thread-17|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 08:53:28.988|I|Thread-17|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 08:53:29.135|I|Thread-17|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001.xlsx
2023-09-01 08:53:29.135|I|Thread-17|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Invite.data.xlsx
2023-09-01 08:53:29.202|I|Thread-17|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001.xlsx
2023-09-01 08:53:29.509|I|Thread-17|STARTS
2023-09-01 08:53:30.532|I|Thread-17|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:53:30.532|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx' from 'Test Plan' step 11
2023-09-01 08:53:30.533|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:53:30.534|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token - executing test scenario
2023-09-01 08:53:30.534|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token - executing activity
2023-09-01 08:53:30.535|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:53:31.862|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:53:32.480|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:53:33.090|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:53:33.700|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:53:34.307|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:53:34.911|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:53:35.964|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:53:35.965|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:53:35.981|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:53:36.588|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:53:37.214|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:53:37.232|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:53:37.234|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:53:37.878|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:53:37.879|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 08:53:38.487|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:53:38.489|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 08:53:38.489|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:53:39.791|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:53:40.424|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:53:41.034|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:53:41.660|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:53:42.266|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:53:42.888|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:53:43.494|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:53:44.098|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:53:45.144|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:53:45.145|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:53:45.170|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:53:45.774|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:53:46.403|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:53:46.419|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:53:46.420|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:53:47.065|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:53:47.066|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 08:53:47.674|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:53:47.676|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 08:53:47.677|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|# 11|base.save(var,value)      - executing save(var,value)(jSessionId, ${response}.cookies.JSESSIONID.value)
2023-09-01 08:53:48.313|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token|# 11|base.save(var,value)      - PASS stored '.value' as ${jSessionId}
2023-09-01 08:53:48.314|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token|Login Token - ending activity
2023-09-01 08:53:48.671|I|Thread-17|[GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Token] saving test scenario
2023-09-01 08:53:48.772|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post - executing test scenario
2023-09-01 08:53:48.772|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers - executing activity
2023-09-01 08:53:48.772|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 08:53:49.406|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 08:53:49.406|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 08:53:50.044|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 08:53:50.044|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:53:50.663|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  7|base.save(var,value)      - PASS stored 'test29587' as ${randomUsername}
2023-09-01 08:53:50.664|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  8|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:53:51.300|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  8|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:53:51.301|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  9|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(19, -1)
2023-09-01 08:53:51.902|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:53:51.903|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${userrolevalid}))
2023-09-01 08:53:52.515|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:53:53.120|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - [repeat-until] PASS stored 'test48429' as ${randomUsername}
2023-09-01 08:53:53.121|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:53:53.731|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:53:53.732|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:53:54.338|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - [repeat-until] PASS stored '{
    "username": "test48429",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:53:54.339|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:53:54.943|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:53:55.972|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:53:55.973|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:53:55.978|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:53:55.979|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:53:56.582|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:23:54 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1031
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3Q0ODQyOSIsInVzZXJpZCI6MTM3MX0.3UIX2JzV03dmwFxbc7udmhvN-INThqAldMKTGvUzSvk"}
2023-09-01 08:53:56.583|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:23:54 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1031
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3Q0ODQyOSIsInVzZXJpZCI6MTM3MX0.3UIX2JzV03dmwFxbc7udmhvN-INThqAldMKTGvUzSvk"}
2023-09-01 08:53:56.584|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:53:57.187|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:53:57.188|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:53:58.496|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:53:59.097|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:53:59.701|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:54:00.313|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1031 is less than or equal to 3000
2023-09-01 08:54:00.917|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:54:01.521|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:54:02.128|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:54:02.130|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:54:02.744|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:54:03.347|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:54:03.950|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:54:03.951|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:54:03.952|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:54:04.556|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:54:04.557|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:54:05.173|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - 
0
2023-09-01 08:54:05.174|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - [repeat-until] PASS 0
2023-09-01 08:54:05.175|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:54:05.777|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:54:05.778|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invite)
2023-09-01 08:54:06.386|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invite' as ${url}
2023-09-01 08:54:06.388|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - executing save(var,value)(validuserole, $(array|item|${userrolevalid}|${counter}))
2023-09-01 08:54:06.992|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - [repeat-until] PASS stored '-1' as ${validuserole}
2023-09-01 08:54:06.993|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - executing save(var,value)(body, {
  "username": "${randomUsername}",
  "userrole": ${validuserole},
  "golist": [
    ${userrole}
  ]
})
2023-09-01 08:54:07.595|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - [repeat-until] PASS stored '{
  "username": "test48429",
  "userrole": -1,
  "golist": [
    -1
  ]
}' as ${body}
2023-09-01 08:54:07.596|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:54:08.206|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invite HTTP/1.1
2023-09-01 08:54:09.241|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:54:09.242|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invite HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:54:09.247|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invite'
2023-09-01 08:54:09.248|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:54:09.861|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:54:09.862|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POSTinvite.txt)
2023-09-01 08:54:11.166|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:54:11.770|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:54:12.378|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:54:12.980|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1036 is less than or equal to 3000
2023-09-01 08:54:13.586|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:54:14.191|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:54:14.802|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:54:14.803|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\POSTinvite.txt!=null)		=> MATCHED
2023-09-01 08:54:15.418|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:54:16.035|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:54:16.637|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:54:16.638|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:54:16.639|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:54:17.241|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:54:17.242|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:54:17.846|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:54:17.847|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:54:17.848|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${userrolevalid}))
2023-09-01 08:54:18.458|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:54:19.074|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - [repeat-until] PASS stored 'test15594' as ${randomUsername}
2023-09-01 08:54:19.076|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:54:19.681|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:54:19.682|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:54:20.298|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - [repeat-until] PASS stored '{
    "username": "test15594",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:54:20.299|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:54:20.905|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:54:21.968|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:54:21.970|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:54:21.974|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:54:21.975|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:54:22.580|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:24:20 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1065
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3QxNTU5NCIsInVzZXJpZCI6MTM3Mn0.cBDJJIObDOCGtrHndf8JjEO8AvRhtbT3GuH52P-bMqU"}
2023-09-01 08:54:22.581|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:24:20 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1065
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3QxNTU5NCIsInVzZXJpZCI6MTM3Mn0.cBDJJIObDOCGtrHndf8JjEO8AvRhtbT3GuH52P-bMqU"}
2023-09-01 08:54:22.582|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:54:23.199|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:54:23.200|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:54:24.546|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:54:25.149|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:54:25.753|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:54:26.365|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1065 is less than or equal to 3000
2023-09-01 08:54:26.969|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:54:27.573|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:54:28.175|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:54:28.176|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:54:28.783|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:54:29.392|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:54:29.995|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:54:29.997|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:54:29.998|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:54:30.607|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:54:30.608|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:54:31.225|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - 
0
2023-09-01 08:54:31.226|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - [repeat-until] PASS 0
2023-09-01 08:54:31.226|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:54:31.829|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:54:31.830|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invite)
2023-09-01 08:54:32.444|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invite' as ${url}
2023-09-01 08:54:32.445|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - executing save(var,value)(validuserole, $(array|item|${userrolevalid}|${counter}))
2023-09-01 08:54:33.047|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - [repeat-until] PASS stored '0' as ${validuserole}
2023-09-01 08:54:33.048|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - executing save(var,value)(body, {
  "username": "${randomUsername}",
  "userrole": ${validuserole},
  "golist": [
    ${userrole}
  ]
})
2023-09-01 08:54:33.663|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - [repeat-until] PASS stored '{
  "username": "test15594",
  "userrole": 0,
  "golist": [
    -1
  ]
}' as ${body}
2023-09-01 08:54:33.665|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:54:34.282|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invite HTTP/1.1
2023-09-01 08:54:35.347|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:54:35.348|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invite HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:54:35.355|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invite'
2023-09-01 08:54:35.356|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:54:35.962|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:54:35.965|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POSTinvite.txt)
2023-09-01 08:54:37.266|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:54:37.871|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:54:38.475|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:54:39.076|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1067 is less than or equal to 3000
2023-09-01 08:54:39.681|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:54:40.293|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:54:40.896|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:54:40.898|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\POSTinvite.txt!=null)		=> MATCHED
2023-09-01 08:54:41.509|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:54:42.112|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:54:42.719|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:54:42.720|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:54:42.721|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:54:43.327|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:54:43.328|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:54:43.931|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:54:43.932|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:54:43.933|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${userrolevalid}))
2023-09-01 08:54:44.534|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:54:45.138|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - [repeat-until] PASS stored 'test97781' as ${randomUsername}
2023-09-01 08:54:45.139|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:54:45.741|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:54:45.742|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:54:46.348|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - [repeat-until] PASS stored '{
    "username": "test97781",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:54:46.349|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:54:46.966|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:54:48.029|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:54:48.030|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:54:48.034|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:54:48.035|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:54:48.640|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:24:46 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1064
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3Q5Nzc4MSIsInVzZXJpZCI6MTM3M30.SR-g6Mg7hPWOHIc4F1zIyDUapCJhm-GTQ-xrTfbT0Vc"}
2023-09-01 08:54:48.641|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:24:46 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1064
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3Q5Nzc4MSIsInVzZXJpZCI6MTM3M30.SR-g6Mg7hPWOHIc4F1zIyDUapCJhm-GTQ-xrTfbT0Vc"}
2023-09-01 08:54:48.642|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:54:49.247|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:54:49.248|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:54:50.595|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:54:51.198|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:54:51.808|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:54:52.419|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1064 is less than or equal to 3000
2023-09-01 08:54:53.023|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:54:53.626|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:54:54.229|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:54:54.230|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:54:54.847|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:54:55.454|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:54:56.056|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:54:56.057|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:54:56.058|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:54:56.674|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:54:56.675|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:54:57.277|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - 
0
2023-09-01 08:54:57.278|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - [repeat-until] PASS 0
2023-09-01 08:54:57.278|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:54:57.884|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:54:57.886|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invite)
2023-09-01 08:54:58.487|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invite' as ${url}
2023-09-01 08:54:58.488|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - executing save(var,value)(validuserole, $(array|item|${userrolevalid}|${counter}))
2023-09-01 08:54:59.093|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - [repeat-until] PASS stored '1' as ${validuserole}
2023-09-01 08:54:59.094|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - executing save(var,value)(body, {
  "username": "${randomUsername}",
  "userrole": ${validuserole},
  "golist": [
    ${userrole}
  ]
})
2023-09-01 08:54:59.702|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - [repeat-until] PASS stored '{
  "username": "test97781",
  "userrole": 1,
  "golist": [
    -1
  ]
}' as ${body}
2023-09-01 08:54:59.702|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:55:00.309|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invite HTTP/1.1
2023-09-01 08:55:01.359|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:55:01.360|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invite HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:55:01.362|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invite'
2023-09-01 08:55:01.362|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:55:01.977|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:55:01.978|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POSTinvite.txt)
2023-09-01 08:55:03.309|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:55:03.916|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:55:04.522|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:55:05.126|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1049 is less than or equal to 3000
2023-09-01 08:55:05.738|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:55:06.343|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:55:06.947|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:55:06.949|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\POSTinvite.txt!=null)		=> MATCHED
2023-09-01 08:55:07.556|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:55:08.158|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:55:08.764|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:55:08.766|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:55:08.766|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:55:09.368|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:55:09.368|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:55:09.971|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2023-09-01 08:55:09.973|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - 
<[repeat-until] entering loop #4---------------------------------------------->
2023-09-01 08:55:09.974|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${userrolevalid}))
2023-09-01 08:55:10.578|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:55:11.194|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - [repeat-until] PASS stored 'test90245' as ${randomUsername}
2023-09-01 08:55:11.196|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:55:11.809|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:55:11.810|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:55:12.415|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - [repeat-until] PASS stored '{
    "username": "test90245",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:55:12.416|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:55:13.022|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:55:14.042|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:55:14.043|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:55:14.048|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:55:14.048|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:55:14.659|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:25:12 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1021
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3Q5MDI0NSIsInVzZXJpZCI6MTM3NH0.WNF21iOj8Nlf281rXnIK-IXlBScezrt-qya9FhP31Yc"}
2023-09-01 08:55:14.660|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:25:12 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1021
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3Q5MDI0NSIsInVzZXJpZCI6MTM3NH0.WNF21iOj8Nlf281rXnIK-IXlBScezrt-qya9FhP31Yc"}
2023-09-01 08:55:14.661|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:55:15.263|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:55:15.264|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:55:16.567|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:55:17.173|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:55:17.776|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:55:18.379|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1021 is less than or equal to 3000
2023-09-01 08:55:18.984|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:55:19.594|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:55:20.198|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:55:20.200|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:55:20.813|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:55:21.422|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:55:22.032|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:55:22.032|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:55:22.032|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:55:22.643|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:55:22.644|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:55:23.251|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - 
0
2023-09-01 08:55:23.251|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - [repeat-until] PASS 0
2023-09-01 08:55:23.252|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:55:23.862|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:55:23.863|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invite)
2023-09-01 08:55:24.479|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invite' as ${url}
2023-09-01 08:55:24.480|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - executing save(var,value)(validuserole, $(array|item|${userrolevalid}|${counter}))
2023-09-01 08:55:25.096|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - [repeat-until] PASS stored '2' as ${validuserole}
2023-09-01 08:55:25.097|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - executing save(var,value)(body, {
  "username": "${randomUsername}",
  "userrole": ${validuserole},
  "golist": [
    ${userrole}
  ]
})
2023-09-01 08:55:25.709|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - [repeat-until] PASS stored '{
  "username": "test90245",
  "userrole": 2,
  "golist": [
    -1
  ]
}' as ${body}
2023-09-01 08:55:25.710|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:55:26.314|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invite HTTP/1.1
2023-09-01 08:55:27.352|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:55:27.353|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invite HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:55:27.358|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invite'
2023-09-01 08:55:27.359|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:55:27.972|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:55:27.973|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POSTinvite.txt)
2023-09-01 08:55:29.292|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:55:29.897|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:55:30.509|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:55:31.112|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1039 is less than or equal to 3000
2023-09-01 08:55:31.716|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:55:32.320|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:55:32.928|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:55:32.929|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\POSTinvite.txt!=null)		=> MATCHED
2023-09-01 08:55:33.534|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:55:34.150|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:55:34.759|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:55:34.761|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:55:34.762|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:55:35.363|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:55:35.364|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:55:35.967|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2023-09-01 08:55:35.969|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - 
<[repeat-until] entering loop #5---------------------------------------------->
2023-09-01 08:55:35.969|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${userrolevalid}))
2023-09-01 08:55:36.579|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:55:37.183|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 11|base.save(var,value)      - [repeat-until] PASS stored 'test17126' as ${randomUsername}
2023-09-01 08:55:37.184|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:55:37.793|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 12|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:55:37.794|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:55:38.402|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 13|base.save(var,value)      - [repeat-until] PASS stored '{
    "username": "test17126",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:55:38.402|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:55:39.006|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:55:40.054|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:55:40.055|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:55:40.061|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 14|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:55:40.062|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:55:40.668|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:25:38 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1050
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3QxNzEyNiIsInVzZXJpZCI6MTM3NX0.wAmrTWg1uhw4OAUc5eH5Z_OfKBnbm3RvavFjj5CkyiY"}
2023-09-01 08:55:40.669|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 15|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=160, Date=Fri, 01 Sep 2023 03:25:38 GMT, Content-Type=application/json}
contentLength=160
elapsedTime=1050
body={"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3QxNzEyNiIsInVzZXJpZCI6MTM3NX0.wAmrTWg1uhw4OAUc5eH5Z_OfKBnbm3RvavFjj5CkyiY"}
2023-09-01 08:55:40.670|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:55:41.286|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 16|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:55:41.287|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:55:42.596|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:55:43.199|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:55:43.803|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:55:44.407|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1050 is less than or equal to 3000
2023-09-01 08:55:45.010|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:55:45.618|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:55:46.221|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:55:46.222|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:55:46.827|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:55:47.440|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:55:48.047|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:55:48.048|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 17|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:55:48.049|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:55:48.659|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 18|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:55:48.660|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:55:49.262|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - 
0
2023-09-01 08:55:49.263|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 19|base.verbose(text)        - [repeat-until] PASS 0
2023-09-01 08:55:49.264|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:55:49.868|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 20|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:55:49.869|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invite)
2023-09-01 08:55:50.474|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 21|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invite' as ${url}
2023-09-01 08:55:50.475|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - executing save(var,value)(validuserole, $(array|item|${userrolevalid}|${counter}))
2023-09-01 08:55:51.077|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 22|base.save(var,value)      - [repeat-until] PASS stored '3' as ${validuserole}
2023-09-01 08:55:51.078|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - executing save(var,value)(body, {
  "username": "${randomUsername}",
  "userrole": ${validuserole},
  "golist": [
    ${userrole}
  ]
})
2023-09-01 08:55:51.683|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 23|base.save(var,value)      - [repeat-until] PASS stored '{
  "username": "test17126",
  "userrole": 3,
  "golist": [
    -1
  ]
}' as ${body}
2023-09-01 08:55:51.684|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:55:52.288|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invite HTTP/1.1
2023-09-01 08:55:53.329|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:55:53.330|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invite HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:55:53.334|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 24|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invite'
2023-09-01 08:55:53.335|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:55:53.952|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 25|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:55:53.952|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POSTinvite.txt)
2023-09-01 08:55:55.287|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:55:55.892|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:55:56.502|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:55:57.106|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1042 is less than or equal to 3000
2023-09-01 08:55:57.708|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:55:58.315|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:55:58.924|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:55:58.925|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\POSTinvite.txt!=null)		=> MATCHED
2023-09-01 08:55:59.532|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:56:00.137|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:56:00.739|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:56:00.739|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:56:00.741|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:56:01.344|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 27|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:56:01.345|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:56:01.947|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 28|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 5
2023-09-01 08:56:01.948|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - 
<[repeat-until] entering loop #6---------------------------------------------->
2023-09-01 08:56:01.949|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${userrolevalid}))
2023-09-01 08:56:02.582|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers|#  9|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:56:02.584|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post|Set headers - ending activity
2023-09-01 08:56:02.647|I|Thread-17|[GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Post] saving test scenario
2023-09-01 08:56:02.736|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete - executing test scenario
2023-09-01 08:56:02.736|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Set headers - executing activity
2023-09-01 08:56:02.736|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 08:56:03.361|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 08:56:03.362|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 08:56:03.992|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 08:56:03.993|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:56:04.632|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Set headers|#  7|base.save(var,value)      - PASS stored 'test61695' as ${randomUsername}
2023-09-01 08:56:04.632|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Set headers - ending activity
2023-09-01 08:56:04.633|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers - executing activity
2023-09-01 08:56:04.633|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|#  8|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:56:05.260|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|#  8|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:56:05.261|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|#  9|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}organisation/gkusers)
2023-09-01 08:56:05.892|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|#  9|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/organisation/gkusers' as ${url}
2023-09-01 08:56:05.893|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 10|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:56:06.496|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 10|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/organisation/gkusers HTTP/1.1
2023-09-01 08:56:07.247|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 10|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:56:07.248|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 10|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/organisation/gkusers HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:56:07.260|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 10|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/organisation/gkusers'
2023-09-01 08:56:07.260|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 11|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:56:07.872|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 11|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=1222, Date=Fri, 01 Sep 2023 03:26:05 GMT, Content-Type=application/json}
contentLength=1222
elapsedTime=752
body={"gkstatus": 0, "gkresult": [{"userid": 1257, "username": "test34356", "userrole": -1, "userrolename": "Admin", "invitestatus": false}, {"userid": 1258, "username": "test89944", "userrole": -1, "userrolename": "Admin", "invitestatus": false}, {"userid": 1255, "username": "test61828", "userrole": -1, "userrolename": "Admin", "invitestatus": false}, {"userid": 1256, "username": "test56045", "userrole": -1, "userrolename": "Admin", "invitestatus": false}, {"userid": 1259, "username": "test70325"...
2023-09-01 08:56:07.874|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 11|base.verbose(text)        - PASS 
2023-09-01 08:56:07.875|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 12|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:56:08.502|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 12|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:56:08.503|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 13|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 08:56:09.130|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 13|base.save(var,value)      - PASS stored '[{"invitestatus":false,"userrole":-1,"userrolename":"Admin","userid":1257,"username":"test34356"},{"invitestatus":false,"userrole":-1,"userrolename":"Admin","userid":1258,"username":"test89944"},{"invitestatus":false,"userrole":-1,"userrolename":"Admin","userid":1255,"username":"test61828"},{"invitestatus":false,"userrole":-1,"userrolename":"Admin","userid":1256,"username":"test56045"},{"invitestatus":false,"userrole":-1,"userrolename":"Admin","userid":1259,"username":"test70325"},{"invitestatus":true,"userrole":-1,"userrolename":"Admin","userid":2,"username":"Accion"},{"invitestatus":false,"userrole":-1,"userrolename":"Admin","userid":1371,"username":"test48429"},{"invitestatus":false,"userrole":0,"userrolename":"Manager","userid":1372,"username":"test15594"},{"invitestatus":false,"userrole":1,"userrolename":"Operator","userid":1373,"username":"test97781"},{"invitestatus":false,"userrole":2,"userrolename":"Internal Auditor","userid":1374,"username":"test90245"},{"invitestatus":false,"userrole":3,"userrolename":"Godown In Charge","userid":1375,"username":"test17126"}]' as ${actualgkresult}
2023-09-01 08:56:09.132|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 14|base.save(var,value)      - executing save(var,value)(len, $(array|length|${actualgkresult}))
2023-09-01 08:56:09.772|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 14|base.save(var,value)      - PASS stored '5' as ${len}
2023-09-01 08:56:09.772|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 15|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:56:10.405|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 15|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:56:10.406|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 16|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(4, -1)
2023-09-01 08:56:11.015|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:56:11.016|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${len})
2023-09-01 08:56:11.631|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - executing save(var,value)(invitestatus, [JSON(${response}.body) => extract(gkresult[${counter}].invitestatus)])
2023-09-01 08:56:12.240|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${invitestatus}
2023-09-01 08:56:12.241|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:56:12.242|I|Thread-17|evaluating flow control:	ProceedIf(false=false)		=> MATCHED
2023-09-01 08:56:12.847|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - [repeat-until] PASS stored '1257' as ${userid}
2023-09-01 08:56:12.848|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:56:13.458|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:56:13.458|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:56:13.459|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${len})
2023-09-01 08:56:14.064|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - executing save(var,value)(invitestatus, [JSON(${response}.body) => extract(gkresult[${counter}].invitestatus)])
2023-09-01 08:56:14.667|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${invitestatus}
2023-09-01 08:56:14.667|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:56:14.669|I|Thread-17|evaluating flow control:	ProceedIf(false=false)		=> MATCHED
2023-09-01 08:56:15.274|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - [repeat-until] PASS stored '1258' as ${userid}
2023-09-01 08:56:15.275|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:56:15.878|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:56:15.879|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:56:15.880|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${len})
2023-09-01 08:56:16.490|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - executing save(var,value)(invitestatus, [JSON(${response}.body) => extract(gkresult[${counter}].invitestatus)])
2023-09-01 08:56:17.096|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${invitestatus}
2023-09-01 08:56:17.097|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:56:17.097|I|Thread-17|evaluating flow control:	ProceedIf(false=false)		=> MATCHED
2023-09-01 08:56:17.714|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - [repeat-until] PASS stored '1255' as ${userid}
2023-09-01 08:56:17.715|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:56:18.318|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2023-09-01 08:56:18.319|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #4---------------------------------------------->
2023-09-01 08:56:18.319|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${len})
2023-09-01 08:56:18.926|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - executing save(var,value)(invitestatus, [JSON(${response}.body) => extract(gkresult[${counter}].invitestatus)])
2023-09-01 08:56:19.530|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${invitestatus}
2023-09-01 08:56:19.531|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:56:19.532|I|Thread-17|evaluating flow control:	ProceedIf(false=false)		=> MATCHED
2023-09-01 08:56:20.147|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - [repeat-until] PASS stored '1256' as ${userid}
2023-09-01 08:56:20.148|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:56:20.761|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2023-09-01 08:56:20.762|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #5---------------------------------------------->
2023-09-01 08:56:20.762|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${len})
2023-09-01 08:56:21.375|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - executing save(var,value)(invitestatus, [JSON(${response}.body) => extract(gkresult[${counter}].invitestatus)])
2023-09-01 08:56:21.980|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 18|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${invitestatus}
2023-09-01 08:56:21.994|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:56:22.017|I|Thread-17|evaluating flow control:	ProceedIf(false=false)		=> MATCHED
2023-09-01 08:56:22.633|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 19|base.save(var,value)      - [repeat-until] PASS stored '1259' as ${userid}
2023-09-01 08:56:22.633|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:56:23.237|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 20|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 5
2023-09-01 08:56:23.237|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - 
<[repeat-until] entering loop #6---------------------------------------------->
2023-09-01 08:56:23.237|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${len})
2023-09-01 08:56:23.871|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers|# 16|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:56:23.873|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /organisation/gkusers - ending activity
2023-09-01 08:56:23.873|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /invite - executing activity
2023-09-01 08:56:23.873|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /invite|# 21|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:56:24.507|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /invite|# 21|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:56:24.507|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Positive - /invite - ending activity
2023-09-01 08:56:24.507|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite - executing activity
2023-09-01 08:56:24.507|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 22|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/invite)
2023-09-01 08:56:25.132|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 22|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//invite' as ${url}
2023-09-01 08:56:25.133|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 23|base.save(var,value)      - executing save(var,value)(body, {
  "userid": ${userid}
})
2023-09-01 08:56:25.786|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 23|base.save(var,value)      - PASS stored '{
  "userid": 1259
}' as ${body}
2023-09-01 08:56:25.787|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 24|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, ${body}, response)
2023-09-01 08:56:26.397|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 24|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org//invite HTTP/1.1
2023-09-01 08:56:27.460|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 24|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 08:56:27.461|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 24|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org//invite HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:56:27.485|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 24|ws.delete(url,body,var)   - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//invite'
2023-09-01 08:56:27.486|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 25|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:56:28.126|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 25|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:56:28.126|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POSTinvite.txt)
2023-09-01 08:56:29.439|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:56:30.066|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:56:30.680|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:56:31.306|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1065 is less than or equal to 3000
2023-09-01 08:56:31.911|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:56:32.548|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:56:33.157|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:56:33.159|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invite\POSTinvite.txt!=null)		=> MATCHED
2023-09-01 08:56:33.769|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:56:34.376|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:56:34.994|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:56:35.005|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 26|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:56:35.006|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:56:35.636|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 27|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:56:35.637|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 28|base.assertArrayNotContai - executing assertArrayNotContain(array,unexpected)(${response}, ${userid})
2023-09-01 08:56:36.248|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite|# 28|base.assertArrayNotContai - PASS empty array found
2023-09-01 08:56:36.248|I|Thread-17|GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete|Invite Module - Delete - /invite - ending activity
2023-09-01 08:56:36.584|I|Thread-17|[GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001|Delete] saving test scenario
2023-09-01 08:56:36.719|I|Thread-17|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 186184 ms
» Test Steps:     211
» Error(s):       0



2023-09-01 08:56:37.110|I|Thread-17|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 188125 ms
» Iterations:     [1] total 1
» Test Steps:     211
» Passed:         211
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.007,Invite.20230901_085328.001.xlsx



2023-09-01 08:56:37.110|I|Thread-17|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:56:37.560|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx] now completed
2023-09-01 08:56:37.561|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Invoice.data.xlsx
2023-09-01 08:56:37.616|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 08:56:37.616|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx] new thread started
2023-09-01 08:56:37.621|I|Thread-20|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:56:37.622|I|Thread-20|On-Demand Inspection detection enabled
2023-09-01 08:56:37.623|I|Thread-20|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx with 1 iteration(s)
2023-09-01 08:56:37.623|I|Thread-20|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 08:56:37.623|I|Thread-20|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 08:56:37.758|I|Thread-20|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx
2023-09-01 08:56:37.759|I|Thread-20|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Invoice.data.xlsx
2023-09-01 08:56:37.815|I|Thread-20|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx
2023-09-01 08:56:38.076|I|Thread-20|STARTS
2023-09-01 08:56:39.101|I|Thread-20|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:56:39.101|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx' from 'Test Plan' step 12
2023-09-01 08:56:39.102|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:56:39.102|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token - executing test scenario
2023-09-01 08:56:39.103|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token - executing activity
2023-09-01 08:56:39.104|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:56:40.437|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:56:41.053|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:56:41.656|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:56:42.275|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:56:42.889|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:56:43.494|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:56:44.526|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:56:44.528|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:56:44.552|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:56:45.167|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:56:45.796|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:56:45.804|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:56:45.805|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:56:46.444|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:56:46.444|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 08:56:47.052|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:56:47.054|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 08:56:47.054|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:56:48.393|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:56:49.021|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:56:49.627|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:56:50.239|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:56:50.855|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:56:51.469|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:56:52.083|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:56:52.689|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:56:53.693|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:56:53.694|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:56:53.709|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:56:54.314|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:56:54.943|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:56:54.951|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:56:54.952|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:56:55.584|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:56:55.584|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 08:56:56.192|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:56:56.194|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 08:56:56.195|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token|Login Token - ending activity
2023-09-01 08:56:56.568|I|Thread-20|[GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|Token] saving test scenario
2023-09-01 08:56:56.686|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET - executing test scenario
2023-09-01 08:56:56.686|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|Set headers - executing activity
2023-09-01 08:56:56.686|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 08:56:57.317|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 08:56:57.317|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 08:56:57.956|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 08:56:57.957|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:56:58.605|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|Set headers|#  7|base.save(var,value)      - PASS stored 'test80962' as ${randomUsername}
2023-09-01 08:56:58.605|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|Set headers - ending activity
2023-09-01 08:56:58.606|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|GET - /invoice - executing activity
2023-09-01 08:56:58.606|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|GET - /invoice|#  8|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:56:59.244|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|GET - /invoice|#  8|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:56:59.245|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|GET - /invoice - ending activity
2023-09-01 08:56:59.246|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice - executing activity
2023-09-01 08:56:59.247|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|#  9|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:56:59.884|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|#  9|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:56:59.885|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 10|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(10, -1)
2023-09-01 08:57:00.492|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:57:00.493|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${inv.valid}))
2023-09-01 08:57:01.099|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 12|base.save(var,value)      - executing save(var,value)(invstring, $(array|item|${inv.valid}|${counter}))
2023-09-01 08:57:01.702|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 12|base.save(var,value)      - [repeat-until] PASS stored 'all' as ${invstring}
2023-09-01 08:57:01.703|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 13|base.save(var,value)      - executing save(var,value)(typestring, $(array|item|${type.valid}|${counter}))
2023-09-01 08:57:02.305|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 13|base.save(var,value)      - [repeat-until] PASS stored 'sale' as ${typestring}
2023-09-01 08:57:02.306|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice?inv=${invstring}&type=${typestring})
2023-09-01 08:57:02.913|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 14|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice?inv=all&type=sale' as ${url}
2023-09-01 08:57:02.914|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:57:03.531|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/invoice?inv=all&type=sale HTTP/1.1
2023-09-01 08:57:04.290|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:57:04.291|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/invoice?inv=all&type=sale HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:57:04.295|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice?inv=all&type=sale'
2023-09-01 08:57:04.296|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 16|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:57:04.905|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 16|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=199, Date=Fri, 01 Sep 2023 03:27:02 GMT, Content-Type=application/json}
contentLength=199
elapsedTime=761
body={"gkstatus": 0, "gkresult": [{"invoiceno": "1/SL-24", "invid": 257, "custname": "Retail Customer (Default)", "csflag": 3, "invoicedate": "24-04-2024", "invoicetotal": "47.00", "attachmentcount": 0}]}
2023-09-01 08:57:04.906|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 16|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=199, Date=Fri, 01 Sep 2023 03:27:02 GMT, Content-Type=application/json}
contentLength=199
elapsedTime=761
body={"gkstatus": 0, "gkresult": [{"invoiceno": "1/SL-24", "invid": 257, "custname": "Retail Customer (Default)", "csflag": 3, "invoicedate": "24-04-2024", "invoicetotal": "47.00", "attachmentcount": 0}]}
2023-09-01 08:57:04.907|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 17|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:57:05.516|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 17|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:57:05.517|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 18|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.invoice.txt)
2023-09-01 08:57:06.839|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:57:07.444|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:57:08.049|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:57:08.659|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 12|number.assertLesserOrEqua - PASS 761 is less than or equal to 3000
2023-09-01 08:57:09.263|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:57:09.867|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:57:10.477|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:57:10.477|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Get.invoice.txt!=null)		=> MATCHED
2023-09-01 08:57:11.090|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:57:11.700|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:57:12.303|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:57:12.304|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 18|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:57:12.305|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 19|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:57:12.914|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 19|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:57:12.915|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 20|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:57:13.519|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 20|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:57:13.520|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:57:13.521|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${inv.valid}))
2023-09-01 08:57:14.123|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 12|base.save(var,value)      - executing save(var,value)(invstring, $(array|item|${inv.valid}|${counter}))
2023-09-01 08:57:14.731|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 12|base.save(var,value)      - [repeat-until] PASS stored 'alldeleted' as ${invstring}
2023-09-01 08:57:14.733|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 13|base.save(var,value)      - executing save(var,value)(typestring, $(array|item|${type.valid}|${counter}))
2023-09-01 08:57:15.348|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 13|base.save(var,value)      - [repeat-until] PASS stored 'purchase' as ${typestring}
2023-09-01 08:57:15.349|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice?inv=${invstring}&type=${typestring})
2023-09-01 08:57:15.953|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 14|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice?inv=alldeleted&type=purchase' as ${url}
2023-09-01 08:57:15.961|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:57:16.567|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/invoice?inv=alldeleted&type=purchase HTTP/1.1
2023-09-01 08:57:17.341|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:57:17.342|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/invoice?inv=alldeleted&type=purchase HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:57:17.347|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 15|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice?inv=alldeleted&type=purchase'
2023-09-01 08:57:17.347|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 16|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:57:17.962|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 16|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=340, Date=Fri, 01 Sep 2023 03:27:15 GMT, Content-Type=application/json}
contentLength=340
elapsedTime=775
body={"gkstatus": 0, "gkresult": [{"invoiceno": "1/PU-24", "invid": 28, "custname": "Cust43242", "csflag": 19, "invoicedate": "24-04-2024", "invoicetotal": "48960.00", "attachmentcount": 0}, {"invoiceno": "2/PU-24", "invid": 29, "custname": "test410794", "csflag": 3, "invoicedate": "24-04-2024", "invoicetotal": "28.00", "attachmentcount": 0}]}
2023-09-01 08:57:17.963|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 16|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=340, Date=Fri, 01 Sep 2023 03:27:15 GMT, Content-Type=application/json}
contentLength=340
elapsedTime=775
body={"gkstatus": 0, "gkresult": [{"invoiceno": "1/PU-24", "invid": 28, "custname": "Cust43242", "csflag": 19, "invoicedate": "24-04-2024", "invoicetotal": "48960.00", "attachmentcount": 0}, {"invoiceno": "2/PU-24", "invid": 29, "custname": "test410794", "csflag": 3, "invoicedate": "24-04-2024", "invoicetotal": "28.00", "attachmentcount": 0}]}
2023-09-01 08:57:17.964|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 17|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:57:18.568|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 17|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:57:18.569|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 18|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.invoice.txt)
2023-09-01 08:57:19.884|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:57:20.488|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:57:21.104|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:57:21.716|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 12|number.assertLesserOrEqua - PASS 775 is less than or equal to 3000
2023-09-01 08:57:22.320|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:57:22.926|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:57:23.533|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:57:23.534|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Get.invoice.txt!=null)		=> MATCHED
2023-09-01 08:57:24.147|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:57:24.755|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:57:25.359|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:57:25.360|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 18|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:57:25.360|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 19|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:57:25.972|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 19|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:57:25.973|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 20|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:57:26.575|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 20|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:57:26.576|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:57:26.578|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${inv.valid}))
2023-09-01 08:57:27.208|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 10|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:57:27.208|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 21|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 08:57:27.822|I|Thread-20|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:57:27.824|I|Thread-20|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:57:27.835|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice|# 21|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:57:27.836|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET|/invoice - ending activity
2023-09-01 08:57:27.878|I|Thread-20|[GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|GET] saving test scenario
2023-09-01 08:57:27.991|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST - executing test scenario
2023-09-01 08:57:27.992|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers - executing activity
2023-09-01 08:57:27.992|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 08:57:28.623|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 08:57:28.624|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 08:57:29.265|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 08:57:29.266|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:57:29.899|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers|#  7|base.save(var,value)      - PASS stored 'test28023' as ${randomUsername}
2023-09-01 08:57:29.899|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers|#  8|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:57:30.527|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers|#  8|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:57:30.527|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|Set headers - ending activity
2023-09-01 08:57:30.528|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal - executing activity
2023-09-01 08:57:30.528|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|#  9|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:57:31.145|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|#  9|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:57:31.146|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 10|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(34, -1)
2023-09-01 08:57:31.751|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:57:31.752|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 08:57:32.357|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 08:57:32.960|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 12|base.save(var,value)      - [repeat-until] PASS stored '4' as ${gsflag}
2023-09-01 08:57:32.961|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 13|base.save(var,value)      - executing save(var,value)(df.discount flag, $(array|item|${discount flag}|${counter}))
2023-09-01 08:57:33.571|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 13|base.save(var,value)      - [repeat-until] PASS stored '1' as ${df.discount flag}
2023-09-01 08:57:33.572|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 14|base.save(var,value)      - executing save(var,value)(io.flag, $(array|item|${io.flag.valid}|${counter}))
2023-09-01 08:57:34.188|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 14|base.save(var,value)      - [repeat-until] PASS stored '9' as ${io.flag}
2023-09-01 08:57:34.188|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 15|base.save(var,value)      - executing save(var,value)(interger.taxflag, $(array|item|${interger.taxflag.valid}|${counter}))
2023-09-01 08:57:34.792|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 15|base.save(var,value)      - [repeat-until] PASS stored '7' as ${interger.taxflag}
2023-09-01 08:57:34.792|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 16|base.save(var,value)      - executing save(var,value)(valid.inout, $(array|item|${valid.inout.valid}|${counter}))
2023-09-01 08:57:35.400|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 16|base.save(var,value)      - [repeat-until] PASS stored '9' as ${valid.inout}
2023-09-01 08:57:35.401|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 17|base.save(var,value)      - executing save(var,value)(interger.roundoffflag, $(array|item|${interger.roundoffflag.valid}|${counter}))
2023-09-01 08:57:36.008|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 17|base.save(var,value)      - [repeat-until] PASS stored '0' as ${interger.roundoffflag}
2023-09-01 08:57:36.010|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 18|base.save(var,value)      - executing save(var,value)(valid.pay.mode, $(array|item|${pay.mode}|${counter}))
2023-09-01 08:57:36.616|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 18|base.save(var,value)      - [repeat-until] PASS stored '2' as ${valid.pay.mode}
2023-09-01 08:57:36.617|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 08:57:37.232|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 19|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 08:57:37.234|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 20|base.save(var,value)      - executing save(var,value)(randomno, [NUMBER(${num})=>randomDigits(1)])
2023-09-01 08:57:37.845|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 20|base.save(var,value)      - [repeat-until] PASS stored '1' as ${randomno}
2023-09-01 08:57:37.846|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 21|base.save(var,value)      - executing save(var,value)(body, {
    "delchaldata": {
        "custid": ${custid.valid},
        "dcno": "${randomno}/DOUT-24",
        "dcdate": "${date}",
        "dcflag": ${gsflag},
        "taxstate": "${state}",
        "orgstategstin": "",
        "discflag": ${df.discount flag},
        "dcnarration": "${valid.narration}",
        "roundoffflag": ${interger.roundoffflag},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "issuername": "${issue.name}",
        "designation": "${role}",
        "vehicleno": ${veh.no},
        "modeoftransport": "${mode.transport}",
        "noofpackages": "${packages}",
        "sourcestate": "${state}",
        "inoutflag": ${io.flag},
        "taxflag": ${interger.taxflag},
        "delchaltotal": "${del.total}",
        "totalinword": "${total.word}",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "${date}"
    },
    "stockdata": {
        "inout": ${valid.inout},
        "goid": ${valid.goid}
    }
})
2023-09-01 08:57:38.464|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 21|base.save(var,value)      - [repeat-until] PASS stored '{
    "delchaldata": {
        "custid": 1557,
        "dcno": "1/DOUT-24",
        "dcdate": "2024-03-31",
        "dcflag": 4,
        "taxstate": "Karnataka",
        "orgstategstin": "",
        "discflag": 1,
        "dcnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "roundoffflag": 0,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "issuername": "WM_admin",
        "designation": "Admin",
        "vehicleno": null,
        "modeoftransport": "Road",
        "noofpackages": "1",
        "sourcestate": "Karnataka",
        "inoutflag": 9,
        "taxflag": 7,
        "delchaltotal": "11550.00",
        "totalinword": "Ten Thousand Five Hundred Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "2024-03-31"
    },
    "stockdata": {
        "inout": 9,
        "goid": 724
    }
}' as ${body}
2023-09-01 08:57:38.466|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:57:39.069|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:57:40.062|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:57:40.063|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:57:40.068|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:57:40.068|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 23|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:57:40.683|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 23|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:27:38 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=994
body={"gkstatus": 1}
2023-09-01 08:57:40.684|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 23|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:27:38 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=994
body={"gkstatus": 1}
2023-09-01 08:57:40.685|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:57:41.290|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - [repeat-until] PASS stored '1' as ${actualGkStatus}
2023-09-01 08:57:41.291|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 25|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 08:57:41.897|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 25|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkresult}
2023-09-01 08:57:41.898|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.delchal.txt)
2023-09-01 08:57:43.191|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:57:43.794|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:57:44.397|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:57:44.998|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 994 is less than or equal to 3000
2023-09-01 08:57:45.606|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:57:46.211|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:57:46.818|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:57:46.820|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.delchal.txt!=null)		=> MATCHED
2023-09-01 08:57:47.431|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 08:57:47.432|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:57:48.034|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:57:48.639|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:57:48.640|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:57:48.641|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:57:49.249|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 27|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =1; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 08:57:49.250|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 28|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:57:49.851|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 28|base.verbose(text)        - 
1
2023-09-01 08:57:49.852|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 28|base.verbose(text)        - [repeat-until] PASS 1
2023-09-01 08:57:49.852|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 29|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:57:50.456|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 29|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:57:50.457|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 30|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice)
2023-09-01 08:57:51.064|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 30|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice' as ${url}
2023-09-01 08:57:51.065|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 31|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 08:57:51.684|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 31|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "1/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 0,
        "taxflag": 7,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 9,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 9,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 2,
        "transportationmode": "Road",
        "reversecharge": 0,
        "discflag": 1,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 9,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 9
    }
}' as ${body}
2023-09-01 08:57:51.687|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:57:52.303|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invoice HTTP/1.1
2023-09-01 08:57:53.325|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:57:53.326|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invoice HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:57:53.330|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice'
2023-09-01 08:57:53.331|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:57:53.942|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 33|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 08:57:53.943|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 34|base.save(var,value)      - executing save(var,value)(actualgkinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 08:57:54.548|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 34|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkinvid}
2023-09-01 08:57:54.549|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.invoice.txt)
2023-09-01 08:57:55.881|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:57:56.486|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:57:57.100|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:57:57.712|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1024 is less than or equal to 3000
2023-09-01 08:57:58.314|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:57:58.920|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:57:59.525|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:57:59.527|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.invoice.txt!=null)		=> MATCHED
2023-09-01 08:58:00.141|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.vchData: is missing but it is required
2023-09-01 08:58:00.143|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:58:00.751|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:58:01.355|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:58:01.356|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 35|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:58:01.357|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:58:01.965|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 36|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 08:58:01.966|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:58:02.581|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 37|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:58:02.582|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkinvid})
2023-09-01 08:58:03.185|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/' as ${url}
2023-09-01 08:58:03.186|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:58:03.796|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/invoice/ HTTP/1.1
2023-09-01 08:58:04.570|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:58:04.580|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/invoice/ HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 08:58:04.583|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/'
2023-09-01 08:58:04.584|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 40|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:58:05.186|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 40|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:28:03 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=786
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:05.188|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 40|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:28:03 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=786
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:05.188|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 41|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:58:05.811|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:58:05.812|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:05.817|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 41|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A41_001.log
2023-09-01 08:58:05.819|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 41|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 08:58:05.819|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 42|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GET.invoice.invid.txt)
2023-09-01 08:58:07.138|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:58:07.745|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 08:58:07.746|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A42.A11_001.log
2023-09-01 08:58:07.748|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:58:08.360|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:58:08.962|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 786 is less than or equal to 3000
2023-09-01 08:58:09.566|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:58:10.174|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 08:58:10.175|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A42.A13_001.log
2023-09-01 08:58:10.176|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:58:10.777|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:58:10.778|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\GET.invoice.invid.txt!=null)		=> MATCHED
2023-09-01 08:58:11.393|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $: integer found, object expected
2023-09-01 08:58:11.394|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:58:11.999|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:58:12.604|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:58:12.605|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 42|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:58:12.606|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:58:13.211|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:58:13.212|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:13.215|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A43_001.log
2023-09-01 08:58:13.216|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:58:13.218|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:13.222|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A43_0011.log
2023-09-01 08:58:13.223|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 08:58:13.224|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 44|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:58:13.833|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 44|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:58:13.834|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:58:13.835|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 08:58:14.437|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 08:58:15.053|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 12|base.save(var,value)      - [repeat-until] PASS stored '16' as ${gsflag}
2023-09-01 08:58:15.054|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 13|base.save(var,value)      - executing save(var,value)(df.discount flag, $(array|item|${discount flag}|${counter}))
2023-09-01 08:58:15.667|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 13|base.save(var,value)      - [repeat-until] PASS stored '16' as ${df.discount flag}
2023-09-01 08:58:15.668|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 14|base.save(var,value)      - executing save(var,value)(io.flag, $(array|item|${io.flag.valid}|${counter}))
2023-09-01 08:58:16.275|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 14|base.save(var,value)      - [repeat-until] PASS stored '15' as ${io.flag}
2023-09-01 08:58:16.276|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 15|base.save(var,value)      - executing save(var,value)(interger.taxflag, $(array|item|${interger.taxflag.valid}|${counter}))
2023-09-01 08:58:16.881|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 15|base.save(var,value)      - [repeat-until] PASS stored '22' as ${interger.taxflag}
2023-09-01 08:58:16.882|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 16|base.save(var,value)      - executing save(var,value)(valid.inout, $(array|item|${valid.inout.valid}|${counter}))
2023-09-01 08:58:17.485|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 16|base.save(var,value)      - [repeat-until] PASS stored '15' as ${valid.inout}
2023-09-01 08:58:17.486|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 17|base.save(var,value)      - executing save(var,value)(interger.roundoffflag, $(array|item|${interger.roundoffflag.valid}|${counter}))
2023-09-01 08:58:18.095|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 17|base.save(var,value)      - [repeat-until] PASS stored '1' as ${interger.roundoffflag}
2023-09-01 08:58:18.096|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 18|base.save(var,value)      - executing save(var,value)(valid.pay.mode, $(array|item|${pay.mode}|${counter}))
2023-09-01 08:58:18.698|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 18|base.save(var,value)      - [repeat-until] PASS stored '3' as ${valid.pay.mode}
2023-09-01 08:58:18.700|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 08:58:19.316|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 19|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 08:58:19.317|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 20|base.save(var,value)      - executing save(var,value)(randomno, [NUMBER(${num})=>randomDigits(1)])
2023-09-01 08:58:19.923|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 20|base.save(var,value)      - [repeat-until] PASS stored '7' as ${randomno}
2023-09-01 08:58:19.924|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 21|base.save(var,value)      - executing save(var,value)(body, {
    "delchaldata": {
        "custid": ${custid.valid},
        "dcno": "${randomno}/DOUT-24",
        "dcdate": "${date}",
        "dcflag": ${gsflag},
        "taxstate": "${state}",
        "orgstategstin": "",
        "discflag": ${df.discount flag},
        "dcnarration": "${valid.narration}",
        "roundoffflag": ${interger.roundoffflag},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "issuername": "${issue.name}",
        "designation": "${role}",
        "vehicleno": ${veh.no},
        "modeoftransport": "${mode.transport}",
        "noofpackages": "${packages}",
        "sourcestate": "${state}",
        "inoutflag": ${io.flag},
        "taxflag": ${interger.taxflag},
        "delchaltotal": "${del.total}",
        "totalinword": "${total.word}",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "${date}"
    },
    "stockdata": {
        "inout": ${valid.inout},
        "goid": ${valid.goid}
    }
})
2023-09-01 08:58:20.541|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 21|base.save(var,value)      - [repeat-until] PASS stored '{
    "delchaldata": {
        "custid": 1557,
        "dcno": "7/DOUT-24",
        "dcdate": "2024-03-31",
        "dcflag": 16,
        "taxstate": "Karnataka",
        "orgstategstin": "",
        "discflag": 16,
        "dcnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "roundoffflag": 1,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "issuername": "WM_admin",
        "designation": "Admin",
        "vehicleno": null,
        "modeoftransport": "Road",
        "noofpackages": "1",
        "sourcestate": "Karnataka",
        "inoutflag": 15,
        "taxflag": 22,
        "delchaltotal": "11550.00",
        "totalinword": "Ten Thousand Five Hundred Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "2024-03-31"
    },
    "stockdata": {
        "inout": 15,
        "goid": 724
    }
}' as ${body}
2023-09-01 08:58:20.544|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:58:21.160|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:58:22.222|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:58:22.223|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:58:22.228|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:58:22.229|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 23|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:58:22.843|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 23|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:28:20 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1065
body={"gkstatus": 1}
2023-09-01 08:58:22.845|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 23|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:28:20 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1065
body={"gkstatus": 1}
2023-09-01 08:58:22.846|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:58:23.450|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:58:23.451|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:23.455|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A24_002.log
2023-09-01 08:58:23.457|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:58:23.458|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:23.460|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A24_0021.log
2023-09-01 08:58:23.462|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - [repeat-until] PASS stored '1' as ${actualGkStatus}
2023-09-01 08:58:23.462|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 25|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 08:58:24.068|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 25|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkresult}
2023-09-01 08:58:24.069|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.delchal.txt)
2023-09-01 08:58:25.402|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:58:26.009|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:58:26.623|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:58:27.227|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1065 is less than or equal to 3000
2023-09-01 08:58:27.841|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:58:28.444|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:58:29.057|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:58:29.058|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.delchal.txt!=null)		=> MATCHED
2023-09-01 08:58:29.680|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 08:58:29.681|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:58:30.294|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:58:30.912|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:58:30.916|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:58:30.930|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:58:31.547|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 27|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =1; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 08:58:31.548|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 28|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:58:32.160|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 28|base.verbose(text)        - 
1
2023-09-01 08:58:32.161|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 28|base.verbose(text)        - [repeat-until] PASS 1
2023-09-01 08:58:32.162|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 29|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:58:32.768|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 29|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:58:32.769|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 30|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice)
2023-09-01 08:58:33.370|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 30|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice' as ${url}
2023-09-01 08:58:33.372|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 31|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 08:58:33.987|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 31|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "7/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 1,
        "taxflag": 22,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 15,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 15,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 3,
        "transportationmode": "Road",
        "reversecharge": 1,
        "discflag": 16,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 15,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 15
    }
}' as ${body}
2023-09-01 08:58:33.991|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:58:34.608|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invoice HTTP/1.1
2023-09-01 08:58:35.651|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:58:35.653|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invoice HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:58:35.658|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice'
2023-09-01 08:58:35.658|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:58:36.261|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 33|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 08:58:36.262|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 34|base.save(var,value)      - executing save(var,value)(actualgkinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 08:58:36.865|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 34|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkinvid}
2023-09-01 08:58:36.866|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.invoice.txt)
2023-09-01 08:58:38.176|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:58:38.787|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:58:39.392|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:58:40.002|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1044 is less than or equal to 3000
2023-09-01 08:58:40.606|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:58:41.210|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:58:41.820|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:58:41.821|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.invoice.txt!=null)		=> MATCHED
2023-09-01 08:58:42.431|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.vchData: is missing but it is required
2023-09-01 08:58:42.433|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:58:43.044|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:58:43.655|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:58:43.655|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 35|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:58:43.655|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:58:44.270|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 36|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 08:58:44.272|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:58:44.879|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 37|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:58:44.880|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkinvid})
2023-09-01 08:58:45.496|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/' as ${url}
2023-09-01 08:58:45.497|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:58:46.110|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/invoice/ HTTP/1.1
2023-09-01 08:58:46.885|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:58:46.887|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/invoice/ HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 08:58:46.892|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/'
2023-09-01 08:58:46.893|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 40|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:58:47.494|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 40|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:28:45 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=776
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:47.496|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 40|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:28:45 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=776
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:47.497|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 41|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:58:48.101|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:58:48.102|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:48.107|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 41|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A41_002.log
2023-09-01 08:58:48.108|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 41|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 08:58:48.109|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 42|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GET.invoice.invid.txt)
2023-09-01 08:58:49.405|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:58:50.021|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 08:58:50.022|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A42.A11_002.log
2023-09-01 08:58:50.024|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:58:50.638|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:58:51.241|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 776 is less than or equal to 3000
2023-09-01 08:58:51.850|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:58:52.469|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 08:58:52.470|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A42.A13_002.log
2023-09-01 08:58:52.471|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:58:53.087|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:58:53.088|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\GET.invoice.invid.txt!=null)		=> MATCHED
2023-09-01 08:58:53.695|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $: integer found, object expected
2023-09-01 08:58:53.696|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:58:54.309|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:58:54.922|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:58:54.923|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 42|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:58:54.924|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:58:55.526|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:58:55.527|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:55.531|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A43_002.log
2023-09-01 08:58:55.533|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:58:55.534|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:58:55.537|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A43_0021.log
2023-09-01 08:58:55.538|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 08:58:55.538|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 44|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:58:56.142|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 44|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:58:56.144|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:58:56.145|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 08:58:56.753|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 08:58:57.358|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 12|base.save(var,value)      - [repeat-until] PASS stored '' as ${gsflag}
2023-09-01 08:58:57.359|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 13|base.save(var,value)      - executing save(var,value)(df.discount flag, $(array|item|${discount flag}|${counter}))
2023-09-01 08:58:57.976|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 13|base.save(var,value)      - [repeat-until] PASS stored '' as ${df.discount flag}
2023-09-01 08:58:57.977|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 14|base.save(var,value)      - executing save(var,value)(io.flag, $(array|item|${io.flag.valid}|${counter}))
2023-09-01 08:58:58.594|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 14|base.save(var,value)      - [repeat-until] PASS stored '' as ${io.flag}
2023-09-01 08:58:58.595|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 15|base.save(var,value)      - executing save(var,value)(interger.taxflag, $(array|item|${interger.taxflag.valid}|${counter}))
2023-09-01 08:58:59.207|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 15|base.save(var,value)      - [repeat-until] PASS stored '' as ${interger.taxflag}
2023-09-01 08:58:59.207|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 16|base.save(var,value)      - executing save(var,value)(valid.inout, $(array|item|${valid.inout.valid}|${counter}))
2023-09-01 08:58:59.811|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 16|base.save(var,value)      - [repeat-until] PASS stored '' as ${valid.inout}
2023-09-01 08:58:59.811|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 17|base.save(var,value)      - executing save(var,value)(interger.roundoffflag, $(array|item|${interger.roundoffflag.valid}|${counter}))
2023-09-01 08:59:00.417|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 17|base.save(var,value)      - [repeat-until] PASS stored '' as ${interger.roundoffflag}
2023-09-01 08:59:00.417|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 18|base.save(var,value)      - executing save(var,value)(valid.pay.mode, $(array|item|${pay.mode}|${counter}))
2023-09-01 08:59:01.020|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 18|base.save(var,value)      - [repeat-until] PASS stored '15' as ${valid.pay.mode}
2023-09-01 08:59:01.022|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 08:59:01.625|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 19|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 08:59:01.626|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 20|base.save(var,value)      - executing save(var,value)(randomno, [NUMBER(${num})=>randomDigits(1)])
2023-09-01 08:59:02.230|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 20|base.save(var,value)      - [repeat-until] PASS stored '6' as ${randomno}
2023-09-01 08:59:02.231|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 21|base.save(var,value)      - executing save(var,value)(body, {
    "delchaldata": {
        "custid": ${custid.valid},
        "dcno": "${randomno}/DOUT-24",
        "dcdate": "${date}",
        "dcflag": ${gsflag},
        "taxstate": "${state}",
        "orgstategstin": "",
        "discflag": ${df.discount flag},
        "dcnarration": "${valid.narration}",
        "roundoffflag": ${interger.roundoffflag},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "issuername": "${issue.name}",
        "designation": "${role}",
        "vehicleno": ${veh.no},
        "modeoftransport": "${mode.transport}",
        "noofpackages": "${packages}",
        "sourcestate": "${state}",
        "inoutflag": ${io.flag},
        "taxflag": ${interger.taxflag},
        "delchaltotal": "${del.total}",
        "totalinword": "${total.word}",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "${date}"
    },
    "stockdata": {
        "inout": ${valid.inout},
        "goid": ${valid.goid}
    }
})
2023-09-01 08:59:02.837|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 21|base.save(var,value)      - [repeat-until] PASS stored '{
    "delchaldata": {
        "custid": 1557,
        "dcno": "6/DOUT-24",
        "dcdate": "2024-03-31",
        "dcflag": ,
        "taxstate": "Karnataka",
        "orgstategstin": "",
        "discflag": ,
        "dcnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "roundoffflag": ,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "issuername": "WM_admin",
        "designation": "Admin",
        "vehicleno": null,
        "modeoftransport": "Road",
        "noofpackages": "1",
        "sourcestate": "Karnataka",
        "inoutflag": ,
        "taxflag": ,
        "delchaltotal": "11550.00",
        "totalinword": "Ten Thousand Five Hundred Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "2024-03-31"
    },
    "stockdata": {
        "inout": ,
        "goid": 724
    }
}' as ${body}
2023-09-01 08:59:02.840|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:59:03.444|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:59:04.439|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:59:04.440|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:59:04.444|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 22|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:59:04.445|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 23|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:59:05.052|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 23|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:29:02 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=997
body={"gkstatus": 3}
2023-09-01 08:59:05.053|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 23|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:29:02 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=997
body={"gkstatus": 3}
2023-09-01 08:59:05.054|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:59:05.659|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:59:05.660|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:59:05.664|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A24_003.log
2023-09-01 08:59:05.665|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:59:05.666|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:59:05.669|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A24_0031.log
2023-09-01 08:59:05.670|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 24|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 08:59:05.671|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 25|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 08:59:06.276|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 25|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkresult}
2023-09-01 08:59:06.277|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.delchal.txt)
2023-09-01 08:59:07.596|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:59:08.203|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:59:08.816|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:59:09.422|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 997 is less than or equal to 3000
2023-09-01 08:59:10.025|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:59:10.628|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:59:11.233|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:59:11.235|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.delchal.txt!=null)		=> MATCHED
2023-09-01 08:59:11.849|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 08:59:11.850|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:59:12.462|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:59:13.064|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:59:13.065|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:59:13.066|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:59:13.680|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 27|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 08:59:13.681|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 28|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:59:14.286|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 28|base.verbose(text)        - 
3
2023-09-01 08:59:14.287|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 28|base.verbose(text)        - [repeat-until] PASS 3
2023-09-01 08:59:14.288|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 29|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:59:14.894|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 29|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:59:14.895|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 30|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice)
2023-09-01 08:59:15.500|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 30|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice' as ${url}
2023-09-01 08:59:15.501|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 31|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 08:59:16.120|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 31|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "6/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": ,
        "taxflag": ,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": ,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": ,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 15,
        "transportationmode": "Road",
        "reversecharge": ,
        "discflag": ,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": ,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 
    }
}' as ${body}
2023-09-01 08:59:16.124|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:59:16.729|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invoice HTTP/1.1
2023-09-01 08:59:17.750|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:59:17.751|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invoice HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:59:17.757|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 32|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice'
2023-09-01 08:59:17.758|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:59:18.368|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 33|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 08:59:18.368|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 34|base.save(var,value)      - executing save(var,value)(actualgkinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 08:59:18.982|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 34|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkinvid}
2023-09-01 08:59:18.983|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.invoice.txt)
2023-09-01 08:59:20.285|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:59:20.891|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:59:21.495|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:59:22.104|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1023 is less than or equal to 3000
2023-09-01 08:59:22.708|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:59:23.315|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:59:23.921|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:59:23.923|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.invoice.txt!=null)		=> MATCHED
2023-09-01 08:59:24.530|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.vchData: is missing but it is required
2023-09-01 08:59:24.532|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:59:25.132|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:59:25.739|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:59:25.740|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 35|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:59:25.740|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:59:26.342|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 36|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 08:59:26.344|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:59:26.951|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 37|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:59:26.952|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkinvid})
2023-09-01 08:59:27.555|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/' as ${url}
2023-09-01 08:59:27.555|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:59:28.158|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/invoice/ HTTP/1.1
2023-09-01 08:59:28.900|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:59:28.901|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/invoice/ HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 08:59:28.906|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 39|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/'
2023-09-01 08:59:28.907|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 40|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:59:29.520|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 40|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:29:27 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=743
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:59:29.521|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 40|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:29:27 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=743
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:59:29.522|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 41|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:59:30.132|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:59:30.133|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:59:30.145|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 41|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A41_003.log
2023-09-01 08:59:30.147|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 41|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 08:59:30.148|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 42|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GET.invoice.invid.txt)
2023-09-01 08:59:31.439|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:59:32.046|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 08:59:32.047|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A42.A11_003.log
2023-09-01 08:59:32.048|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:59:32.662|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:59:33.273|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 743 is less than or equal to 3000
2023-09-01 08:59:33.876|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:59:34.482|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 08:59:34.483|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A42.A13_003.log
2023-09-01 08:59:34.484|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:59:35.092|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:59:35.094|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\GET.invoice.invid.txt!=null)		=> MATCHED
2023-09-01 08:59:35.700|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $: integer found, object expected
2023-09-01 08:59:35.701|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:59:36.308|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:59:36.924|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:59:36.924|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 42|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:59:36.925|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:59:37.529|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:59:37.530|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:59:37.534|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A43_003.log
2023-09-01 08:59:37.537|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:59:37.537|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:59:37.540|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_POST_A43_0031.log
2023-09-01 08:59:37.542|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 43|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 08:59:37.543|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 44|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:59:38.147|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 44|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2023-09-01 08:59:38.148|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #4---------------------------------------------->
2023-09-01 08:59:38.148|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 08:59:38.779|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 10|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:59:38.780|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 45|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 08:59:39.385|I|Thread-20|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 08:59:39.386|I|Thread-20|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:59:39.394|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal|# 45|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:59:39.396|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST|POST-/delchal - ending activity
2023-09-01 08:59:39.506|I|Thread-20|[GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|POST] saving test scenario
2023-09-01 08:59:39.640|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT - executing test scenario
2023-09-01 08:59:39.641|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers - executing activity
2023-09-01 08:59:39.641|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 08:59:40.276|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 08:59:40.277|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 08:59:40.914|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 08:59:40.915|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:59:41.545|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers|#  7|base.save(var,value)      - PASS stored 'test32836' as ${randomUsername}
2023-09-01 08:59:41.546|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers|#  8|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:59:42.174|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers|#  8|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:59:42.175|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|Set headers - ending activity
2023-09-01 08:59:42.175|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal - executing activity
2023-09-01 08:59:42.175|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|#  9|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:59:42.810|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|#  9|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:59:42.810|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 10|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(43, -1)
2023-09-01 08:59:43.425|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:59:43.426|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 08:59:44.032|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 08:59:44.637|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 12|base.save(var,value)      - [repeat-until] PASS stored '4' as ${gsflag}
2023-09-01 08:59:44.637|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 13|base.save(var,value)      - executing save(var,value)(df.discount flag, $(array|item|${discount flag}|${counter}))
2023-09-01 08:59:45.253|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 13|base.save(var,value)      - [repeat-until] PASS stored '1' as ${df.discount flag}
2023-09-01 08:59:45.254|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 14|base.save(var,value)      - executing save(var,value)(io.flag, $(array|item|${io.flag.valid}|${counter}))
2023-09-01 08:59:45.856|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 14|base.save(var,value)      - [repeat-until] PASS stored '9' as ${io.flag}
2023-09-01 08:59:45.857|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 15|base.save(var,value)      - executing save(var,value)(interger.taxflag, $(array|item|${interger.taxflag.valid}|${counter}))
2023-09-01 08:59:46.459|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 15|base.save(var,value)      - [repeat-until] PASS stored '7' as ${interger.taxflag}
2023-09-01 08:59:46.460|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 16|base.save(var,value)      - executing save(var,value)(valid.inout, $(array|item|${valid.inout.valid}|${counter}))
2023-09-01 08:59:47.062|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 16|base.save(var,value)      - [repeat-until] PASS stored '9' as ${valid.inout}
2023-09-01 08:59:47.063|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 17|base.save(var,value)      - executing save(var,value)(interger.roundoffflag, $(array|item|${interger.roundoffflag.valid}|${counter}))
2023-09-01 08:59:47.679|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 17|base.save(var,value)      - [repeat-until] PASS stored '0' as ${interger.roundoffflag}
2023-09-01 08:59:47.680|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 18|base.save(var,value)      - executing save(var,value)(valid.pay.mode, $(array|item|${pay.mode}|${counter}))
2023-09-01 08:59:48.285|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 18|base.save(var,value)      - [repeat-until] PASS stored '2' as ${valid.pay.mode}
2023-09-01 08:59:48.287|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 08:59:48.892|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 08:59:48.893|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 20|base.save(var,value)      - executing save(var,value)(randomno, [NUMBER(${num})=>randomDigits(1)])
2023-09-01 08:59:49.497|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 20|base.save(var,value)      - [repeat-until] PASS stored '0' as ${randomno}
2023-09-01 08:59:49.498|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 21|base.save(var,value)      - executing save(var,value)(body, {
    "delchaldata": {
        "custid": ${custid.valid},
        "dcno": "${randomno}/DOUT-24",
        "dcdate": "${date}",
        "dcflag": ${gsflag},
        "taxstate": "${state}",
        "orgstategstin": "",
        "discflag": ${df.discount flag},
        "dcnarration": "${valid.narration}",
        "roundoffflag": ${interger.roundoffflag},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "issuername": "${issue.name}",
        "designation": "${role}",
        "vehicleno": ${veh.no},
        "modeoftransport": "${mode.transport}",
        "noofpackages": "${packages}",
        "sourcestate": "${state}",
        "inoutflag": ${io.flag},
        "taxflag": ${interger.taxflag},
        "delchaltotal": "${del.total}",
        "totalinword": "${total.word}",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "${date}"
    },
    "stockdata": {
        "inout": ${valid.inout},
        "goid": ${valid.goid}
    }
})
2023-09-01 08:59:50.105|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 21|base.save(var,value)      - [repeat-until] PASS stored '{
    "delchaldata": {
        "custid": 1557,
        "dcno": "0/DOUT-24",
        "dcdate": "2024-03-31",
        "dcflag": 4,
        "taxstate": "Karnataka",
        "orgstategstin": "",
        "discflag": 1,
        "dcnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "roundoffflag": 0,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "issuername": "WM_admin",
        "designation": "Admin",
        "vehicleno": null,
        "modeoftransport": "Road",
        "noofpackages": "1",
        "sourcestate": "Karnataka",
        "inoutflag": 9,
        "taxflag": 7,
        "delchaltotal": "11550.00",
        "totalinword": "Ten Thousand Five Hundred Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "2024-03-31"
    },
    "stockdata": {
        "inout": 9,
        "goid": 724
    }
}' as ${body}
2023-09-01 08:59:50.107|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:59:50.724|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:59:51.810|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:59:51.811|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:59:51.815|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:59:51.816|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 23|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:59:52.429|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 23|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:29:50 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1089
body={"gkstatus": 1}
2023-09-01 08:59:52.430|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 23|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:29:50 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1089
body={"gkstatus": 1}
2023-09-01 08:59:52.431|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:59:53.040|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:59:53.041|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:59:53.044|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A24_001.log
2023-09-01 08:59:53.046|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 08:59:53.047|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 08:59:53.050|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A24_0011.log
2023-09-01 08:59:53.051|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - [repeat-until] PASS stored '1' as ${actualGkStatus}
2023-09-01 08:59:53.051|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 25|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 08:59:53.658|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 25|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkresult}
2023-09-01 08:59:53.658|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.delchal.txt)
2023-09-01 08:59:54.979|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:59:55.584|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:59:56.190|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:59:56.799|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1089 is less than or equal to 3000
2023-09-01 08:59:57.402|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:59:58.005|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:59:58.608|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:59:58.609|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.delchal.txt!=null)		=> MATCHED
2023-09-01 08:59:59.228|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 08:59:59.229|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:59:59.842|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:00:00.451|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:00:00.452|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:00:00.453|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:00:01.055|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 27|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =1; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:00:01.055|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 28|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 09:00:01.660|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 28|base.verbose(text)        - 
1
2023-09-01 09:00:01.661|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 28|base.verbose(text)        - [repeat-until] PASS 1
2023-09-01 09:00:01.662|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 29|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:00:02.265|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 29|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:00:02.266|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 30|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice)
2023-09-01 09:00:02.871|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 30|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice' as ${url}
2023-09-01 09:00:02.872|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 31|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:00:03.490|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 31|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "0/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 0,
        "taxflag": 7,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 9,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 9,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 2,
        "transportationmode": "Road",
        "reversecharge": 0,
        "discflag": 1,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 9,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 9
    }
}' as ${body}
2023-09-01 09:00:03.493|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:00:04.097|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invoice HTTP/1.1
2023-09-01 09:00:05.111|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:00:05.112|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invoice HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:00:05.118|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice'
2023-09-01 09:00:05.118|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:00:05.730|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 33|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 09:00:05.731|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 34|base.save(var,value)      - executing save(var,value)(actualgkinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:00:06.334|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 34|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkinvid}
2023-09-01 09:00:06.335|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.invoice.txt)
2023-09-01 09:00:07.637|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:00:08.241|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:00:08.856|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:00:09.461|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1016 is less than or equal to 3000
2023-09-01 09:00:10.074|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:00:10.679|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:00:11.295|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:00:11.296|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.invoice.txt!=null)		=> MATCHED
2023-09-01 09:00:11.911|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.vchData: is missing but it is required
2023-09-01 09:00:11.913|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:00:12.513|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:00:13.116|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:00:13.117|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 35|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:00:13.118|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:00:13.720|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 36|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:00:13.721|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:00:14.327|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 37|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:00:14.329|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkinvid})
2023-09-01 09:00:14.933|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/' as ${url}
2023-09-01 09:00:14.935|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 39|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:00:15.555|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 39|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "0/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 0,
        "taxflag": 7,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 9,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 9,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 2,
        "transportationmode": "Road",
        "reversecharge": 0,
        "discflag": 1,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 9,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 9
    }
}' as ${body}
2023-09-01 09:00:15.558|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 09:00:16.175|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/invoice/ HTTP/1.1
2023-09-01 09:00:17.199|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 09:00:17.200|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/invoice/ HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 09:00:17.205|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/'
2023-09-01 09:00:17.206|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 41|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:00:17.819|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 41|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:30:15 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1026
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:17.820|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 41|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:30:15 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1026
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:17.822|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 42|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:00:18.434|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:18.436|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:18.440|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 42|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A42_001.log
2023-09-01 09:00:18.441|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 42|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 09:00:18.442|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - executing save(var,value)(actualgkvalidinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:00:19.046|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:19.048|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:19.051|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A43_001.log
2023-09-01 09:00:19.052|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]' as ${actualgkvalidinvid}
2023-09-01 09:00:19.053|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 44|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:00:20.365|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:00:20.976|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 09:00:20.978|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A44.A11_001.log
2023-09-01 09:00:20.978|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:00:21.590|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:00:22.196|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1026 is less than or equal to 3000
2023-09-01 09:00:22.799|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:00:23.423|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 09:00:23.424|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A44.A13_001.log
2023-09-01 09:00:23.425|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:00:24.030|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:00:24.032|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:00:24.639|I|Thread-20|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:00:24.640|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:00:24.641|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:00:25.256|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:00:25.860|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:00:25.860|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 44|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:00:25.861|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:00:26.466|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:26.467|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:26.470|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A45_001.log
2023-09-01 09:00:26.472|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:26.473|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:26.477|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A45_0011.log
2023-09-01 09:00:26.478|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:00:26.478|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 46|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:00:27.087|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 46|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:00:27.088|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkvalidinvid})
2023-09-01 09:00:27.691|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:27.692|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:27.695|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_001.log
2023-09-01 09:00:27.697|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:27.699|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:27.701|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_0011.log
2023-09-01 09:00:27.703|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:27.704|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:27.708|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_0011.log
2023-09-01 09:00:27.709|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:27.709|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:27.712|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_0011.log
2023-09-01 09:00:27.712|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]' as ${url}
2023-09-01 09:00:27.713|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:00:28.326|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:28.328|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:28.331|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A48_001.log
2023-09-01 09:00:28.333|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:28.334|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:28.337|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A48_0011.log
2023-09-01 09:00:28.341|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/invoice/%5BJSON(404%20Not%20Found%0A%0AThe%20resource%20could%20not%20be%20found.%0A%0A%0A/invoice/%0A%0A)%20=%3E%20extract(gkresult)%5D HTTP/1.1
2023-09-01 09:00:29.094|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:00:29.094|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/invoice/%5BJSON(404%20Not%20Found%0A%0AThe%20resource%20could%20not%20be%20found.%0A%0A%0A/invoice/%0A%0A)%20=%3E%20extract(gkresult)%5D HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 09:00:29.101|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]'
2023-09-01 09:00:29.102|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:00:29.713|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:29.714|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:29.717|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A49_001.log
2023-09-01 09:00:29.720|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:29.721|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:29.728|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A49_0011.log
2023-09-01 09:00:29.729|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=151, Date=Fri, 01 Sep 2023 03:30:27 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=151
elapsedTime=755
body=404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]


2023-09-01 09:00:29.730|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=151, Date=Fri, 01 Sep 2023 03:30:27 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=151
elapsedTime=755
body=404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]


2023-09-01 09:00:29.731|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:00:30.336|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:30.337|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:30.345|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_001.log
2023-09-01 09:00:30.348|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:30.349|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:30.353|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_0011.log
2023-09-01 09:00:30.354|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:30.355|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:30.358|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_0011.log
2023-09-01 09:00:30.359|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:30.360|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:30.362|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_0011.log
2023-09-01 09:00:30.363|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 09:00:30.363|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 51|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GET.invoice.invid.txt)
2023-09-01 09:00:30.974|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:30.975|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:30.978|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 51|base.macroFlex(macro,inpu - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A51_001.log
2023-09-01 09:00:31.702|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:00:32.309|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 09:00:32.310|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A51.A11_001.log
2023-09-01 09:00:32.311|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:00:32.915|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:00:33.517|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 755 is less than or equal to 3000
2023-09-01 09:00:34.120|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:00:34.728|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 09:00:34.729|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A51.A13_001.log
2023-09-01 09:00:34.730|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:00:35.343|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:00:35.345|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\GET.invoice.invid.txt!=null)		=> MATCHED
2023-09-01 09:00:35.955|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $: integer found, object expected
2023-09-01 09:00:35.956|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:00:36.568|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:00:37.173|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:00:37.174|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 51|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:00:37.175|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:00:37.780|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:37.781|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:37.784|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A52_001.log
2023-09-01 09:00:37.785|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:37.786|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:37.791|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A52_0011.log
2023-09-01 09:00:37.793|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:00:37.793|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 53|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:00:38.398|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 53|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:00:38.400|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:00:38.400|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 09:00:39.006|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:00:39.612|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 12|base.save(var,value)      - [repeat-until] PASS stored '16' as ${gsflag}
2023-09-01 09:00:39.613|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 13|base.save(var,value)      - executing save(var,value)(df.discount flag, $(array|item|${discount flag}|${counter}))
2023-09-01 09:00:40.219|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 13|base.save(var,value)      - [repeat-until] PASS stored '16' as ${df.discount flag}
2023-09-01 09:00:40.220|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 14|base.save(var,value)      - executing save(var,value)(io.flag, $(array|item|${io.flag.valid}|${counter}))
2023-09-01 09:00:40.822|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 14|base.save(var,value)      - [repeat-until] PASS stored '15' as ${io.flag}
2023-09-01 09:00:40.823|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 15|base.save(var,value)      - executing save(var,value)(interger.taxflag, $(array|item|${interger.taxflag.valid}|${counter}))
2023-09-01 09:00:41.439|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 15|base.save(var,value)      - [repeat-until] PASS stored '22' as ${interger.taxflag}
2023-09-01 09:00:41.440|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 16|base.save(var,value)      - executing save(var,value)(valid.inout, $(array|item|${valid.inout.valid}|${counter}))
2023-09-01 09:00:42.050|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 16|base.save(var,value)      - [repeat-until] PASS stored '15' as ${valid.inout}
2023-09-01 09:00:42.051|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 17|base.save(var,value)      - executing save(var,value)(interger.roundoffflag, $(array|item|${interger.roundoffflag.valid}|${counter}))
2023-09-01 09:00:42.655|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 17|base.save(var,value)      - [repeat-until] PASS stored '1' as ${interger.roundoffflag}
2023-09-01 09:00:42.656|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 18|base.save(var,value)      - executing save(var,value)(valid.pay.mode, $(array|item|${pay.mode}|${counter}))
2023-09-01 09:00:43.263|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 18|base.save(var,value)      - [repeat-until] PASS stored '3' as ${valid.pay.mode}
2023-09-01 09:00:43.264|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 09:00:43.869|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:43.870|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:43.874|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A19_002.log
2023-09-01 09:00:43.876|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:43.877|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:43.880|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A19_0021.log
2023-09-01 09:00:43.880|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 09:00:43.880|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 20|base.save(var,value)      - executing save(var,value)(randomno, [NUMBER(${num})=>randomDigits(1)])
2023-09-01 09:00:44.488|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 20|base.save(var,value)      - [repeat-until] PASS stored '2' as ${randomno}
2023-09-01 09:00:44.489|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 21|base.save(var,value)      - executing save(var,value)(body, {
    "delchaldata": {
        "custid": ${custid.valid},
        "dcno": "${randomno}/DOUT-24",
        "dcdate": "${date}",
        "dcflag": ${gsflag},
        "taxstate": "${state}",
        "orgstategstin": "",
        "discflag": ${df.discount flag},
        "dcnarration": "${valid.narration}",
        "roundoffflag": ${interger.roundoffflag},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "issuername": "${issue.name}",
        "designation": "${role}",
        "vehicleno": ${veh.no},
        "modeoftransport": "${mode.transport}",
        "noofpackages": "${packages}",
        "sourcestate": "${state}",
        "inoutflag": ${io.flag},
        "taxflag": ${interger.taxflag},
        "delchaltotal": "${del.total}",
        "totalinword": "${total.word}",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "${date}"
    },
    "stockdata": {
        "inout": ${valid.inout},
        "goid": ${valid.goid}
    }
})
2023-09-01 09:00:45.099|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 21|base.save(var,value)      - [repeat-until] PASS stored '{
    "delchaldata": {
        "custid": 1557,
        "dcno": "2/DOUT-24",
        "dcdate": "2024-03-31",
        "dcflag": 16,
        "taxstate": "Karnataka",
        "orgstategstin": "",
        "discflag": 16,
        "dcnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "roundoffflag": 1,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "issuername": "WM_admin",
        "designation": "Admin",
        "vehicleno": null,
        "modeoftransport": "Road",
        "noofpackages": "1",
        "sourcestate": "Karnataka",
        "inoutflag": 15,
        "taxflag": 22,
        "delchaltotal": "11550.00",
        "totalinword": "Ten Thousand Five Hundred Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "2024-03-31"
    },
    "stockdata": {
        "inout": 15,
        "goid": 724
    }
}' as ${body}
2023-09-01 09:00:45.102|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:00:45.706|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 09:00:46.764|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:00:46.765|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:00:46.769|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 09:00:46.769|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 23|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:00:47.379|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 23|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:30:45 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1060
body={"gkstatus": 1}
2023-09-01 09:00:47.380|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 23|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:30:45 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1060
body={"gkstatus": 1}
2023-09-01 09:00:47.381|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:00:47.998|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:47.999|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:48.002|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A24_002.log
2023-09-01 09:00:48.004|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:00:48.005|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:00:48.007|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A24_0021.log
2023-09-01 09:00:48.008|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - [repeat-until] PASS stored '1' as ${actualGkStatus}
2023-09-01 09:00:48.009|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 25|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:00:48.618|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 25|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkresult}
2023-09-01 09:00:48.618|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.delchal.txt)
2023-09-01 09:00:49.950|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:00:50.554|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:00:51.159|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:00:51.766|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1060 is less than or equal to 3000
2023-09-01 09:00:52.373|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:00:52.977|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:00:53.579|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:00:53.580|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.delchal.txt!=null)		=> MATCHED
2023-09-01 09:00:54.196|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 09:00:54.197|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:00:54.812|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:00:55.414|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:00:55.415|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:00:55.416|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:00:56.024|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 27|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =1; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:00:56.025|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 28|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 09:00:56.627|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 28|base.verbose(text)        - 
1
2023-09-01 09:00:56.628|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 28|base.verbose(text)        - [repeat-until] PASS 1
2023-09-01 09:00:56.629|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 29|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:00:57.231|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 29|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:00:57.232|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 30|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice)
2023-09-01 09:00:57.835|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 30|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice' as ${url}
2023-09-01 09:00:57.837|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 31|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:00:58.448|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 31|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "2/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 1,
        "taxflag": 22,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 15,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 15,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 3,
        "transportationmode": "Road",
        "reversecharge": 1,
        "discflag": 16,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 15,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 15
    }
}' as ${body}
2023-09-01 09:00:58.452|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:00:59.060|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invoice HTTP/1.1
2023-09-01 09:01:00.133|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:01:00.134|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invoice HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:01:00.139|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice'
2023-09-01 09:01:00.140|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:01:00.748|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 33|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 09:01:00.749|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 34|base.save(var,value)      - executing save(var,value)(actualgkinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:01:01.356|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 34|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkinvid}
2023-09-01 09:01:01.357|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.invoice.txt)
2023-09-01 09:01:02.726|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:01:03.332|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:01:03.939|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:01:04.542|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1074 is less than or equal to 3000
2023-09-01 09:01:05.145|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:01:05.751|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:01:06.366|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:01:06.367|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.invoice.txt!=null)		=> MATCHED
2023-09-01 09:01:06.979|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.vchData: is missing but it is required
2023-09-01 09:01:06.980|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:01:07.595|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:01:08.207|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:01:08.208|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 35|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:01:08.209|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:01:08.810|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 36|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:01:08.812|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:01:09.418|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 37|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:01:09.419|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkinvid})
2023-09-01 09:01:10.026|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/' as ${url}
2023-09-01 09:01:10.028|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 39|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:01:10.647|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 39|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "2/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 1,
        "taxflag": 22,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 15,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 15,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 3,
        "transportationmode": "Road",
        "reversecharge": 1,
        "discflag": 16,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 15,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 15
    }
}' as ${body}
2023-09-01 09:01:10.650|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 09:01:11.267|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/invoice/ HTTP/1.1
2023-09-01 09:01:12.265|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 09:01:12.266|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/invoice/ HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 09:01:12.271|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/'
2023-09-01 09:01:12.271|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 41|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:01:12.878|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 41|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:31:10 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1000
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:12.880|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 41|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:31:10 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1000
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:12.881|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 42|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:01:13.484|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:13.485|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:13.488|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 42|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A42_002.log
2023-09-01 09:01:13.489|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 42|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 09:01:13.490|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - executing save(var,value)(actualgkvalidinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:01:14.093|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:14.094|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:14.098|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A43_002.log
2023-09-01 09:01:14.100|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:14.100|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:14.102|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A43_0021.log
2023-09-01 09:01:14.104|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:14.104|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:14.106|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A43_0021.log
2023-09-01 09:01:14.107|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]' as ${actualgkvalidinvid}
2023-09-01 09:01:14.108|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 44|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:01:15.428|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:01:16.035|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 09:01:16.036|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A44.A11_002.log
2023-09-01 09:01:16.037|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:01:16.652|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:01:17.257|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1000 is less than or equal to 3000
2023-09-01 09:01:17.860|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:01:18.474|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 09:01:18.474|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A44.A13_002.log
2023-09-01 09:01:18.476|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:01:19.091|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:01:19.092|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:01:19.698|I|Thread-20|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:01:19.698|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:01:19.699|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:01:20.302|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:01:20.905|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:01:20.906|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 44|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:01:20.907|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:01:21.510|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:21.510|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:21.515|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A45_002.log
2023-09-01 09:01:21.516|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:21.517|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:21.520|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A45_0021.log
2023-09-01 09:01:21.522|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:01:21.523|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 46|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:01:22.127|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 46|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:01:22.129|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkvalidinvid})
2023-09-01 09:01:22.732|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:22.733|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:22.735|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_002.log
2023-09-01 09:01:22.738|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:22.739|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:22.742|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_0021.log
2023-09-01 09:01:22.744|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:22.744|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:22.747|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_0021.log
2023-09-01 09:01:22.748|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:22.749|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:22.751|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_0021.log
2023-09-01 09:01:22.752|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]' as ${url}
2023-09-01 09:01:22.752|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:01:23.355|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:23.356|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:23.366|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A48_002_1.log
2023-09-01 09:01:23.369|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:23.370|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:23.374|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A48_002_11.log
2023-09-01 09:01:23.377|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/invoice/%5BJSON(404%20Not%20Found%0A%0AThe%20resource%20could%20not%20be%20found.%0A%0A%0A/invoice/%0A%0A)%20=%3E%20extract(gkresult)%5D HTTP/1.1
2023-09-01 09:01:24.154|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:01:24.155|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/invoice/%5BJSON(404%20Not%20Found%0A%0AThe%20resource%20could%20not%20be%20found.%0A%0A%0A/invoice/%0A%0A)%20=%3E%20extract(gkresult)%5D HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 09:01:24.160|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]'
2023-09-01 09:01:24.160|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:01:24.765|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:24.766|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:24.770|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A49_002.log
2023-09-01 09:01:24.772|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:24.773|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:24.776|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A49_0021.log
2023-09-01 09:01:24.777|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=151, Date=Fri, 01 Sep 2023 03:31:22 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=151
elapsedTime=778
body=404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]


2023-09-01 09:01:24.778|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=151, Date=Fri, 01 Sep 2023 03:31:22 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=151
elapsedTime=778
body=404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]


2023-09-01 09:01:24.779|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:01:25.391|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:25.393|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:25.404|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_002.log
2023-09-01 09:01:25.406|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:25.407|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:25.410|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_0021.log
2023-09-01 09:01:25.411|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:25.412|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:25.415|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_0021.log
2023-09-01 09:01:25.417|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:25.418|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:25.422|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_0021.log
2023-09-01 09:01:25.422|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 09:01:25.423|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 51|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GET.invoice.invid.txt)
2023-09-01 09:01:26.041|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:26.042|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:26.054|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 51|base.macroFlex(macro,inpu - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A51_002.log
2023-09-01 09:01:26.772|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:01:27.395|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 09:01:27.396|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A51.A11_002.log
2023-09-01 09:01:27.397|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:01:28.012|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:01:28.617|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 778 is less than or equal to 3000
2023-09-01 09:01:29.225|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:01:29.835|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 09:01:29.836|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A51.A13_002.log
2023-09-01 09:01:29.837|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:01:30.441|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:01:30.442|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\GET.invoice.invid.txt!=null)		=> MATCHED
2023-09-01 09:01:31.048|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $: integer found, object expected
2023-09-01 09:01:31.050|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:01:31.650|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:01:32.261|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:01:32.262|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 51|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:01:32.263|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:01:32.868|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:32.870|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:32.873|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A52_002.log
2023-09-01 09:01:32.875|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:32.876|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:32.879|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A52_0021.log
2023-09-01 09:01:32.880|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:01:32.881|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 53|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:01:33.485|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 53|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:01:33.486|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:01:33.487|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 09:01:34.097|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:01:34.700|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 12|base.save(var,value)      - [repeat-until] PASS stored '' as ${gsflag}
2023-09-01 09:01:34.701|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 13|base.save(var,value)      - executing save(var,value)(df.discount flag, $(array|item|${discount flag}|${counter}))
2023-09-01 09:01:35.304|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 13|base.save(var,value)      - [repeat-until] PASS stored '' as ${df.discount flag}
2023-09-01 09:01:35.305|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 14|base.save(var,value)      - executing save(var,value)(io.flag, $(array|item|${io.flag.valid}|${counter}))
2023-09-01 09:01:35.910|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 14|base.save(var,value)      - [repeat-until] PASS stored '' as ${io.flag}
2023-09-01 09:01:35.911|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 15|base.save(var,value)      - executing save(var,value)(interger.taxflag, $(array|item|${interger.taxflag.valid}|${counter}))
2023-09-01 09:01:36.517|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 15|base.save(var,value)      - [repeat-until] PASS stored '' as ${interger.taxflag}
2023-09-01 09:01:36.518|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 16|base.save(var,value)      - executing save(var,value)(valid.inout, $(array|item|${valid.inout.valid}|${counter}))
2023-09-01 09:01:37.120|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 16|base.save(var,value)      - [repeat-until] PASS stored '' as ${valid.inout}
2023-09-01 09:01:37.122|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 17|base.save(var,value)      - executing save(var,value)(interger.roundoffflag, $(array|item|${interger.roundoffflag.valid}|${counter}))
2023-09-01 09:01:37.727|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 17|base.save(var,value)      - [repeat-until] PASS stored '' as ${interger.roundoffflag}
2023-09-01 09:01:37.727|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 18|base.save(var,value)      - executing save(var,value)(valid.pay.mode, $(array|item|${pay.mode}|${counter}))
2023-09-01 09:01:38.342|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 18|base.save(var,value)      - [repeat-until] PASS stored '15' as ${valid.pay.mode}
2023-09-01 09:01:38.343|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 09:01:38.950|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:38.951|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:38.955|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A19_003.log
2023-09-01 09:01:38.957|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:38.958|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:38.964|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A19_0031.log
2023-09-01 09:01:38.966|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 19|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 09:01:38.967|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 20|base.save(var,value)      - executing save(var,value)(randomno, [NUMBER(${num})=>randomDigits(1)])
2023-09-01 09:01:39.576|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 20|base.save(var,value)      - [repeat-until] PASS stored '3' as ${randomno}
2023-09-01 09:01:39.577|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 21|base.save(var,value)      - executing save(var,value)(body, {
    "delchaldata": {
        "custid": ${custid.valid},
        "dcno": "${randomno}/DOUT-24",
        "dcdate": "${date}",
        "dcflag": ${gsflag},
        "taxstate": "${state}",
        "orgstategstin": "",
        "discflag": ${df.discount flag},
        "dcnarration": "${valid.narration}",
        "roundoffflag": ${interger.roundoffflag},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "issuername": "${issue.name}",
        "designation": "${role}",
        "vehicleno": ${veh.no},
        "modeoftransport": "${mode.transport}",
        "noofpackages": "${packages}",
        "sourcestate": "${state}",
        "inoutflag": ${io.flag},
        "taxflag": ${interger.taxflag},
        "delchaltotal": "${del.total}",
        "totalinword": "${total.word}",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "${date}"
    },
    "stockdata": {
        "inout": ${valid.inout},
        "goid": ${valid.goid}
    }
})
2023-09-01 09:01:40.196|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 21|base.save(var,value)      - [repeat-until] PASS stored '{
    "delchaldata": {
        "custid": 1557,
        "dcno": "3/DOUT-24",
        "dcdate": "2024-03-31",
        "dcflag": ,
        "taxstate": "Karnataka",
        "orgstategstin": "",
        "discflag": ,
        "dcnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "roundoffflag": ,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "issuername": "WM_admin",
        "designation": "Admin",
        "vehicleno": null,
        "modeoftransport": "Road",
        "noofpackages": "1",
        "sourcestate": "Karnataka",
        "inoutflag": ,
        "taxflag": ,
        "delchaltotal": "11550.00",
        "totalinword": "Ten Thousand Five Hundred Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "2024-03-31"
    },
    "stockdata": {
        "inout": ,
        "goid": 724
    }
}' as ${body}
2023-09-01 09:01:40.198|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:01:40.803|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 09:01:41.848|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:01:41.849|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:01:41.854|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 22|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 09:01:41.854|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 23|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:01:42.457|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 23|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:31:40 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1047
body={"gkstatus": 3}
2023-09-01 09:01:42.458|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 23|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:31:40 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1047
body={"gkstatus": 3}
2023-09-01 09:01:42.459|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:01:43.065|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:43.066|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:43.069|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A24_003.log
2023-09-01 09:01:43.071|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:01:43.072|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:01:43.079|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A24_0031.log
2023-09-01 09:01:43.080|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 24|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 09:01:43.081|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 25|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:01:43.682|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 25|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkresult}
2023-09-01 09:01:43.684|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.delchal.txt)
2023-09-01 09:01:45.012|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:01:45.615|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:01:46.219|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:01:46.824|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1047 is less than or equal to 3000
2023-09-01 09:01:47.432|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:01:48.039|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:01:48.642|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:01:48.644|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.delchal.txt!=null)		=> MATCHED
2023-09-01 09:01:49.255|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 09:01:49.257|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:01:49.868|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:01:50.472|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:01:50.473|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:01:50.474|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:01:51.081|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 27|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:01:51.083|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 28|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 09:01:51.685|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 28|base.verbose(text)        - 
3
2023-09-01 09:01:51.685|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 28|base.verbose(text)        - [repeat-until] PASS 3
2023-09-01 09:01:51.686|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 29|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:01:52.289|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 29|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:01:52.290|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 30|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice)
2023-09-01 09:01:52.892|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 30|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice' as ${url}
2023-09-01 09:01:52.893|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 31|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:01:53.505|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 31|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "3/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": ,
        "taxflag": ,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": ,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": ,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 15,
        "transportationmode": "Road",
        "reversecharge": ,
        "discflag": ,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": ,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 
    }
}' as ${body}
2023-09-01 09:01:53.508|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:01:54.123|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invoice HTTP/1.1
2023-09-01 09:01:55.390|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:01:55.391|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invoice HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:01:55.395|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 32|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice'
2023-09-01 09:01:55.396|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:01:56.003|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 33|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 09:01:56.004|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 34|base.save(var,value)      - executing save(var,value)(actualgkinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:01:56.613|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 34|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkinvid}
2023-09-01 09:01:56.614|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.invoice.txt)
2023-09-01 09:01:57.916|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:01:58.522|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:01:59.128|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:01:59.732|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1269 is less than or equal to 3000
2023-09-01 09:02:00.342|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:02:00.944|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:02:01.550|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:02:01.551|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.invoice.txt!=null)		=> MATCHED
2023-09-01 09:02:02.165|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.vchData: is missing but it is required
2023-09-01 09:02:02.166|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:02:02.781|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:02:03.391|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:02:03.392|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 35|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:02:03.393|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:02:04.009|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 36|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:02:04.010|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:02:04.614|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 37|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:02:04.615|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkinvid})
2023-09-01 09:02:05.224|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/' as ${url}
2023-09-01 09:02:05.225|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 39|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:02:05.844|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 39|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "3/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": ,
        "taxflag": ,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": ,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": ,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 15,
        "transportationmode": "Road",
        "reversecharge": ,
        "discflag": ,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": ,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 
    }
}' as ${body}
2023-09-01 09:02:05.848|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 09:02:06.465|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/invoice/ HTTP/1.1
2023-09-01 09:02:07.463|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 09:02:07.464|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/invoice/ HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 09:02:07.468|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 40|ws.put(url,body,var)      - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/'
2023-09-01 09:02:07.469|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 41|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:02:08.081|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 41|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:32:06 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1000
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:08.082|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 41|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:32:06 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1000
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:08.083|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 42|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:02:08.698|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:08.699|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:08.703|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 42|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A42_003.log
2023-09-01 09:02:08.704|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 42|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 09:02:08.705|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - executing save(var,value)(actualgkvalidinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:02:09.322|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:09.323|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:09.326|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A43_003.log
2023-09-01 09:02:09.328|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:09.330|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:09.333|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A43_0031.log
2023-09-01 09:02:09.334|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:09.336|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:09.337|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A43_0031.log
2023-09-01 09:02:09.338|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 43|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]' as ${actualgkvalidinvid}
2023-09-01 09:02:09.339|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 44|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:02:10.668|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:02:11.274|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 09:02:11.275|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A44.A11_003.log
2023-09-01 09:02:11.276|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:02:11.891|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:02:12.498|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1000 is less than or equal to 3000
2023-09-01 09:02:13.102|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:02:13.715|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 09:02:13.716|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A44.A13_003.log
2023-09-01 09:02:13.717|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:02:14.329|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:02:14.330|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:02:14.938|I|Thread-20|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:02:14.938|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:02:14.939|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:02:15.541|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:02:16.148|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:02:16.148|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 44|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:02:16.150|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:02:16.753|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:16.755|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:16.757|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A45_003.log
2023-09-01 09:02:16.759|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:16.760|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:16.763|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A45_0031.log
2023-09-01 09:02:16.764|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 45|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:02:16.765|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 46|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:02:17.371|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 46|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:02:17.372|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkvalidinvid})
2023-09-01 09:02:17.975|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:17.976|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:17.978|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_003.log
2023-09-01 09:02:17.980|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:17.981|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:17.984|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_0031.log
2023-09-01 09:02:17.986|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:17.987|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:17.990|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_0031.log
2023-09-01 09:02:17.992|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:17.992|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:17.995|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A47_0031.log
2023-09-01 09:02:17.996|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 47|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]' as ${url}
2023-09-01 09:02:17.997|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:02:18.609|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:18.610|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:18.614|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A48_003_2.log
2023-09-01 09:02:18.616|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:18.616|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:18.620|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A48_003_21.log
2023-09-01 09:02:18.623|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/invoice/%5BJSON(404%20Not%20Found%0A%0AThe%20resource%20could%20not%20be%20found.%0A%0A%0A/invoice/%0A%0A)%20=%3E%20extract(gkresult)%5D HTTP/1.1
2023-09-01 09:02:19.392|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:02:19.395|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/invoice/%5BJSON(404%20Not%20Found%0A%0AThe%20resource%20could%20not%20be%20found.%0A%0A%0A/invoice/%0A%0A)%20=%3E%20extract(gkresult)%5D HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 09:02:19.399|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 48|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]'
2023-09-01 09:02:19.401|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:02:20.009|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:20.010|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:20.015|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A49_003.log
2023-09-01 09:02:20.017|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:20.018|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:20.021|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A49_0031.log
2023-09-01 09:02:20.022|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=151, Date=Fri, 01 Sep 2023 03:32:17 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=151
elapsedTime=772
body=404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]


2023-09-01 09:02:20.023|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 49|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=151, Date=Fri, 01 Sep 2023 03:32:17 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=151
elapsedTime=772
body=404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]


2023-09-01 09:02:20.024|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:02:20.630|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:20.631|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:20.635|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_003.log
2023-09-01 09:02:20.636|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:20.637|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:20.648|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_0031.log
2023-09-01 09:02:20.650|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:20.650|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:20.654|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_0031.log
2023-09-01 09:02:20.655|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:20.656|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:20.658|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A50_0031.log
2023-09-01 09:02:20.659|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 50|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 09:02:20.659|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 51|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GET.invoice.invid.txt)
2023-09-01 09:02:21.272|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:21.274|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:21.285|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 51|base.macroFlex(macro,inpu - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A51_003.log
2023-09-01 09:02:21.970|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:02:22.582|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 09:02:22.583|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A51.A11_003.log
2023-09-01 09:02:22.584|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:02:23.197|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:02:23.804|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 772 is less than or equal to 3000
2023-09-01 09:02:24.412|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:02:25.027|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 09:02:25.028|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A51.A13_003.log
2023-09-01 09:02:25.029|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:02:25.636|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:02:25.637|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\GET.invoice.invid.txt!=null)		=> MATCHED
2023-09-01 09:02:26.255|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $: integer found, object expected
2023-09-01 09:02:26.256|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:02:26.868|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:02:27.480|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:02:27.481|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 51|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:02:27.482|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:02:28.098|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:28.099|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:28.102|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A52_003.log
2023-09-01 09:02:28.103|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:28.104|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:28.106|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_PUT_A52_0031.log
2023-09-01 09:02:28.107|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 52|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkresult)]

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:02:28.107|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 53|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:02:28.715|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 53|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2023-09-01 09:02:28.718|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #4---------------------------------------------->
2023-09-01 09:02:28.718|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 09:02:29.349|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 10|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:02:29.350|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 54|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:02:29.960|I|Thread-20|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:02:29.961|I|Thread-20|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:02:29.970|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal|# 54|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:02:29.973|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT|POST-/delchal - ending activity
2023-09-01 09:02:30.153|I|Thread-20|[GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|PUT] saving test scenario
2023-09-01 09:02:30.327|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE - executing test scenario
2023-09-01 09:02:30.327|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers - executing activity
2023-09-01 09:02:30.328|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 09:02:30.954|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 09:02:30.955|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 09:02:31.575|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 09:02:31.576|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:02:32.195|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers|#  7|base.save(var,value)      - PASS stored 'test74513' as ${randomUsername}
2023-09-01 09:02:32.196|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers|#  8|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:02:32.824|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers|#  8|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:02:32.825|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|Set headers - ending activity
2023-09-01 09:02:32.826|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal - executing activity
2023-09-01 09:02:32.826|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|#  9|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:02:33.450|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|#  9|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:02:33.451|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 10|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(36, -1)
2023-09-01 09:02:34.057|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:02:34.058|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 09:02:34.665|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:02:35.271|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 12|base.save(var,value)      - [repeat-until] PASS stored '4' as ${gsflag}
2023-09-01 09:02:35.271|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 13|base.save(var,value)      - executing save(var,value)(df.discount flag, $(array|item|${discount flag}|${counter}))
2023-09-01 09:02:35.874|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 13|base.save(var,value)      - [repeat-until] PASS stored '1' as ${df.discount flag}
2023-09-01 09:02:35.875|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 14|base.save(var,value)      - executing save(var,value)(io.flag, $(array|item|${io.flag.valid}|${counter}))
2023-09-01 09:02:36.484|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 14|base.save(var,value)      - [repeat-until] PASS stored '9' as ${io.flag}
2023-09-01 09:02:36.485|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 15|base.save(var,value)      - executing save(var,value)(interger.taxflag, $(array|item|${interger.taxflag.valid}|${counter}))
2023-09-01 09:02:37.086|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 15|base.save(var,value)      - [repeat-until] PASS stored '7' as ${interger.taxflag}
2023-09-01 09:02:37.086|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 16|base.save(var,value)      - executing save(var,value)(valid.inout, $(array|item|${valid.inout.valid}|${counter}))
2023-09-01 09:02:37.692|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 16|base.save(var,value)      - [repeat-until] PASS stored '9' as ${valid.inout}
2023-09-01 09:02:37.693|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 17|base.save(var,value)      - executing save(var,value)(interger.roundoffflag, $(array|item|${interger.roundoffflag.valid}|${counter}))
2023-09-01 09:02:38.302|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 17|base.save(var,value)      - [repeat-until] PASS stored '0' as ${interger.roundoffflag}
2023-09-01 09:02:38.303|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 18|base.save(var,value)      - executing save(var,value)(valid.pay.mode, $(array|item|${pay.mode}|${counter}))
2023-09-01 09:02:38.905|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 18|base.save(var,value)      - [repeat-until] PASS stored '2' as ${valid.pay.mode}
2023-09-01 09:02:38.906|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 09:02:39.511|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:39.513|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:39.515|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 19|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A19_001.log
2023-09-01 09:02:39.517|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:39.518|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:39.529|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 19|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A19_0011.log
2023-09-01 09:02:39.530|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 19|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 09:02:39.531|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 20|base.save(var,value)      - executing save(var,value)(randomno, [NUMBER(${num})=>randomDigits(1)])
2023-09-01 09:02:40.136|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 20|base.save(var,value)      - [repeat-until] PASS stored '7' as ${randomno}
2023-09-01 09:02:40.136|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 21|base.save(var,value)      - executing save(var,value)(body, {
    "delchaldata": {
        "custid": ${custid.valid},
        "dcno": "${randomno}/DOUT-24",
        "dcdate": "${date}",
        "dcflag": ${gsflag},
        "taxstate": "${state}",
        "orgstategstin": "",
        "discflag": ${df.discount flag},
        "dcnarration": "${valid.narration}",
        "roundoffflag": ${interger.roundoffflag},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "issuername": "${issue.name}",
        "designation": "${role}",
        "vehicleno": ${veh.no},
        "modeoftransport": "${mode.transport}",
        "noofpackages": "${packages}",
        "sourcestate": "${state}",
        "inoutflag": ${io.flag},
        "taxflag": ${interger.taxflag},
        "delchaltotal": "${del.total}",
        "totalinword": "${total.word}",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "${date}"
    },
    "stockdata": {
        "inout": ${valid.inout},
        "goid": ${valid.goid}
    }
})
2023-09-01 09:02:40.743|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 21|base.save(var,value)      - [repeat-until] PASS stored '{
    "delchaldata": {
        "custid": 1557,
        "dcno": "7/DOUT-24",
        "dcdate": "2024-03-31",
        "dcflag": 4,
        "taxstate": "Karnataka",
        "orgstategstin": "",
        "discflag": 1,
        "dcnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "roundoffflag": 0,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "issuername": "WM_admin",
        "designation": "Admin",
        "vehicleno": null,
        "modeoftransport": "Road",
        "noofpackages": "1",
        "sourcestate": "Karnataka",
        "inoutflag": 9,
        "taxflag": 7,
        "delchaltotal": "11550.00",
        "totalinword": "Ten Thousand Five Hundred Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "2024-03-31"
    },
    "stockdata": {
        "inout": 9,
        "goid": 724
    }
}' as ${body}
2023-09-01 09:02:40.745|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:02:41.354|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 09:02:42.409|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:02:42.410|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:02:42.415|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 09:02:42.416|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 23|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:02:43.021|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 23|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:32:40 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1057
body={"gkstatus": 1}
2023-09-01 09:02:43.022|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 23|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:32:40 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1057
body={"gkstatus": 1}
2023-09-01 09:02:43.023|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:02:43.639|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:43.640|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:43.643|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A24_001.log
2023-09-01 09:02:43.645|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:02:43.646|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:02:43.649|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A24_0011.log
2023-09-01 09:02:43.650|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - [repeat-until] PASS stored '1' as ${actualGkStatus}
2023-09-01 09:02:43.651|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 25|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:02:44.256|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 25|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkresult}
2023-09-01 09:02:44.257|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.delchal.txt)
2023-09-01 09:02:45.576|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:02:46.179|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:02:46.782|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:02:47.388|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1057 is less than or equal to 3000
2023-09-01 09:02:47.990|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:02:48.602|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:02:49.218|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:02:49.219|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.delchal.txt!=null)		=> MATCHED
2023-09-01 09:02:49.828|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 09:02:49.830|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:02:50.432|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:02:51.033|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:02:51.034|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:02:51.035|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:02:51.652|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 27|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =1; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:02:51.653|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 28|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 09:02:52.262|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 28|base.verbose(text)        - 
1
2023-09-01 09:02:52.262|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 28|base.verbose(text)        - [repeat-until] PASS 1
2023-09-01 09:02:52.264|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 29|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:02:52.869|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 29|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:02:52.870|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 30|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice)
2023-09-01 09:02:53.472|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 30|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice' as ${url}
2023-09-01 09:02:53.473|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 31|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:02:54.094|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 31|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "7/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 0,
        "taxflag": 7,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 9,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 9,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 2,
        "transportationmode": "Road",
        "reversecharge": 0,
        "discflag": 1,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 9,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 9
    }
}' as ${body}
2023-09-01 09:02:54.097|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:02:54.704|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invoice HTTP/1.1
2023-09-01 09:02:55.682|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:02:55.683|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invoice HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:02:55.689|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice'
2023-09-01 09:02:55.689|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:02:56.304|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 33|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 09:02:56.304|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 34|base.save(var,value)      - executing save(var,value)(actualgkinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:02:56.920|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 34|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkinvid}
2023-09-01 09:02:56.921|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.invoice.txt)
2023-09-01 09:02:58.243|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:02:58.846|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:02:59.448|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:03:00.052|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 979 is less than or equal to 3000
2023-09-01 09:03:00.660|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:03:01.272|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:03:01.878|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:03:01.879|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.invoice.txt!=null)		=> MATCHED
2023-09-01 09:03:02.496|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.vchData: is missing but it is required
2023-09-01 09:03:02.497|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:03.108|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:03:03.711|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:03:03.712|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 35|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:03:03.713|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:03:04.320|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 36|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:03:04.321|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:03:04.923|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 37|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:03:04.932|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkinvid})
2023-09-01 09:03:05.541|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/' as ${url}
2023-09-01 09:03:05.542|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 39|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:03:06.150|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 39|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "7/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 0,
        "taxflag": 7,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 9,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 9,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 2,
        "transportationmode": "Road",
        "reversecharge": 0,
        "discflag": 1,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 9,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 9
    }
}' as ${body}
2023-09-01 09:03:06.154|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, ${body}, response)
2023-09-01 09:03:06.759|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org/invoice/ HTTP/1.1
2023-09-01 09:03:07.828|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 09:03:07.829|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org/invoice/ HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 09:03:07.833|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/'
2023-09-01 09:03:07.834|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 41|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:03:08.449|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 41|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:33:06 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1071
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:08.451|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 41|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:33:06 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1071
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:08.452|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 42|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:03:09.069|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:03:09.071|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:09.074|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 42|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A42_001.log
2023-09-01 09:03:09.074|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 42|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 09:03:09.075|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 43|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:03:10.417|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:03:11.023|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 09:03:11.024|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A43.A11_001.log
2023-09-01 09:03:11.026|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:11.638|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:03:12.241|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1071 is less than or equal to 3000
2023-09-01 09:03:12.845|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:03:13.464|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 09:03:13.466|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A43.A13_001.log
2023-09-01 09:03:13.467|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:14.071|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:03:14.073|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:03:14.691|I|Thread-20|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:03:14.692|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:03:14.693|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:15.300|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:03:15.905|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:03:15.906|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 43|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:03:15.907|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:03:16.511|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:03:16.512|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:16.515|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A44_001.log
2023-09-01 09:03:16.518|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:03:16.518|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:16.530|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A44_0011.log
2023-09-01 09:03:16.532|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:03:16.532|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 45|base.assertArrayNotContai - executing assertArrayNotContain(array,unexpected)(${response}, ${actualgkinvid})
2023-09-01 09:03:17.144|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 45|base.assertArrayNotContai - [repeat-until] FAIL Both 'array' and 'unexpected' are NULL; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:03:17.146|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:17.146|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 46|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:03:17.753|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 46|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:03:17.754|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:03:17.755|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 09:03:18.364|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:03:18.968|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 12|base.save(var,value)      - [repeat-until] PASS stored '16' as ${gsflag}
2023-09-01 09:03:18.969|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 13|base.save(var,value)      - executing save(var,value)(df.discount flag, $(array|item|${discount flag}|${counter}))
2023-09-01 09:03:19.575|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 13|base.save(var,value)      - [repeat-until] PASS stored '16' as ${df.discount flag}
2023-09-01 09:03:19.576|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 14|base.save(var,value)      - executing save(var,value)(io.flag, $(array|item|${io.flag.valid}|${counter}))
2023-09-01 09:03:20.181|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 14|base.save(var,value)      - [repeat-until] PASS stored '15' as ${io.flag}
2023-09-01 09:03:20.182|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 15|base.save(var,value)      - executing save(var,value)(interger.taxflag, $(array|item|${interger.taxflag.valid}|${counter}))
2023-09-01 09:03:20.785|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 15|base.save(var,value)      - [repeat-until] PASS stored '22' as ${interger.taxflag}
2023-09-01 09:03:20.787|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 16|base.save(var,value)      - executing save(var,value)(valid.inout, $(array|item|${valid.inout.valid}|${counter}))
2023-09-01 09:03:21.398|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 16|base.save(var,value)      - [repeat-until] PASS stored '15' as ${valid.inout}
2023-09-01 09:03:21.400|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 17|base.save(var,value)      - executing save(var,value)(interger.roundoffflag, $(array|item|${interger.roundoffflag.valid}|${counter}))
2023-09-01 09:03:22.001|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 17|base.save(var,value)      - [repeat-until] PASS stored '1' as ${interger.roundoffflag}
2023-09-01 09:03:22.001|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 18|base.save(var,value)      - executing save(var,value)(valid.pay.mode, $(array|item|${pay.mode}|${counter}))
2023-09-01 09:03:22.607|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 18|base.save(var,value)      - [repeat-until] PASS stored '3' as ${valid.pay.mode}
2023-09-01 09:03:22.608|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 09:03:23.218|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 19|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 09:03:23.219|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 20|base.save(var,value)      - executing save(var,value)(randomno, [NUMBER(${num})=>randomDigits(1)])
2023-09-01 09:03:23.821|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 20|base.save(var,value)      - [repeat-until] PASS stored '6' as ${randomno}
2023-09-01 09:03:23.822|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 21|base.save(var,value)      - executing save(var,value)(body, {
    "delchaldata": {
        "custid": ${custid.valid},
        "dcno": "${randomno}/DOUT-24",
        "dcdate": "${date}",
        "dcflag": ${gsflag},
        "taxstate": "${state}",
        "orgstategstin": "",
        "discflag": ${df.discount flag},
        "dcnarration": "${valid.narration}",
        "roundoffflag": ${interger.roundoffflag},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "issuername": "${issue.name}",
        "designation": "${role}",
        "vehicleno": ${veh.no},
        "modeoftransport": "${mode.transport}",
        "noofpackages": "${packages}",
        "sourcestate": "${state}",
        "inoutflag": ${io.flag},
        "taxflag": ${interger.taxflag},
        "delchaltotal": "${del.total}",
        "totalinword": "${total.word}",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "${date}"
    },
    "stockdata": {
        "inout": ${valid.inout},
        "goid": ${valid.goid}
    }
})
2023-09-01 09:03:24.435|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 21|base.save(var,value)      - [repeat-until] PASS stored '{
    "delchaldata": {
        "custid": 1557,
        "dcno": "6/DOUT-24",
        "dcdate": "2024-03-31",
        "dcflag": 16,
        "taxstate": "Karnataka",
        "orgstategstin": "",
        "discflag": 16,
        "dcnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "roundoffflag": 1,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "issuername": "WM_admin",
        "designation": "Admin",
        "vehicleno": null,
        "modeoftransport": "Road",
        "noofpackages": "1",
        "sourcestate": "Karnataka",
        "inoutflag": 15,
        "taxflag": 22,
        "delchaltotal": "11550.00",
        "totalinword": "Ten Thousand Five Hundred Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "2024-03-31"
    },
    "stockdata": {
        "inout": 15,
        "goid": 724
    }
}' as ${body}
2023-09-01 09:03:24.436|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:03:25.053|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 09:03:26.106|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:03:26.108|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:03:26.112|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 09:03:26.113|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 23|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:03:26.714|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 23|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:33:24 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1056
body={"gkstatus": 1}
2023-09-01 09:03:26.715|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 23|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:33:24 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1056
body={"gkstatus": 1}
2023-09-01 09:03:26.716|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:03:27.326|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:03:27.328|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:27.330|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A24_002.log
2023-09-01 09:03:27.332|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:03:27.334|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:27.337|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A24_0021.log
2023-09-01 09:03:27.338|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - [repeat-until] PASS stored '1' as ${actualGkStatus}
2023-09-01 09:03:27.338|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 25|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:03:27.944|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 25|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkresult}
2023-09-01 09:03:27.946|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.delchal.txt)
2023-09-01 09:03:29.265|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:03:29.871|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:03:30.482|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:03:31.087|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1056 is less than or equal to 3000
2023-09-01 09:03:31.699|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:03:32.304|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:03:32.911|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:03:32.912|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.delchal.txt!=null)		=> MATCHED
2023-09-01 09:03:33.517|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 09:03:33.518|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:34.119|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:03:34.727|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:03:34.728|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:03:34.729|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:03:35.338|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 27|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =1; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:03:35.339|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 28|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 09:03:35.946|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 28|base.verbose(text)        - 
1
2023-09-01 09:03:35.946|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 28|base.verbose(text)        - [repeat-until] PASS 1
2023-09-01 09:03:35.947|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 29|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:03:36.554|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 29|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:03:36.556|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 30|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice)
2023-09-01 09:03:37.160|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 30|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice' as ${url}
2023-09-01 09:03:37.161|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 31|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:03:37.768|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 31|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "6/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 1,
        "taxflag": 22,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 15,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 15,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 3,
        "transportationmode": "Road",
        "reversecharge": 1,
        "discflag": 16,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 15,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 15
    }
}' as ${body}
2023-09-01 09:03:37.772|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:03:38.380|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invoice HTTP/1.1
2023-09-01 09:03:39.391|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:03:39.393|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invoice HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:03:39.398|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice'
2023-09-01 09:03:39.399|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:03:40.015|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 33|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 09:03:40.017|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 34|base.save(var,value)      - executing save(var,value)(actualgkinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:03:40.620|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 34|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkinvid}
2023-09-01 09:03:40.621|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.invoice.txt)
2023-09-01 09:03:41.946|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:03:42.558|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:03:43.162|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:03:43.773|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1013 is less than or equal to 3000
2023-09-01 09:03:44.375|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:03:44.979|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:03:45.590|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:03:45.590|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.invoice.txt!=null)		=> MATCHED
2023-09-01 09:03:46.202|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.vchData: is missing but it is required
2023-09-01 09:03:46.203|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:46.804|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:03:47.412|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:03:47.413|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 35|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:03:47.413|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:03:48.020|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 36|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:03:48.021|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:03:48.625|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 37|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:03:48.626|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkinvid})
2023-09-01 09:03:49.229|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/' as ${url}
2023-09-01 09:03:49.229|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 39|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:03:49.878|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 39|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "6/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": 1,
        "taxflag": 22,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": 15,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": 15,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 3,
        "transportationmode": "Road",
        "reversecharge": 1,
        "discflag": 16,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": 15,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 15
    }
}' as ${body}
2023-09-01 09:03:49.916|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, ${body}, response)
2023-09-01 09:03:50.529|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org/invoice/ HTTP/1.1
2023-09-01 09:03:51.566|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 09:03:51.567|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org/invoice/ HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 09:03:51.571|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/'
2023-09-01 09:03:51.572|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 41|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:03:52.182|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 41|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:33:50 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1038
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:52.183|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 41|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:33:50 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1038
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:52.183|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 42|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:03:52.786|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:03:52.787|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:03:52.790|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 42|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A42_002.log
2023-09-01 09:03:52.791|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 42|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 09:03:52.792|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 43|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:03:54.170|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:03:54.792|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 09:03:54.793|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A43.A11_002.log
2023-09-01 09:03:54.793|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:55.405|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:03:56.012|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1038 is less than or equal to 3000
2023-09-01 09:03:56.619|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:03:57.227|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 09:03:57.227|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A43.A13_002.log
2023-09-01 09:03:57.227|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:57.830|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:03:57.831|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:03:58.446|I|Thread-20|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:03:58.447|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:03:58.448|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:03:59.062|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:03:59.676|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:03:59.676|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 43|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:03:59.676|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:04:00.286|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:04:00.286|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:04:00.290|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A44_002.log
2023-09-01 09:04:00.292|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:04:00.292|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:04:00.295|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A44_0021.log
2023-09-01 09:04:00.296|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:04:00.297|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 45|base.assertArrayNotContai - executing assertArrayNotContain(array,unexpected)(${response}, ${actualgkinvid})
2023-09-01 09:04:00.904|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 45|base.assertArrayNotContai - [repeat-until] FAIL Both 'array' and 'unexpected' are NULL; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:04:00.905|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:04:00.905|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 46|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:04:01.506|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 46|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:04:01.507|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:04:01.509|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 09:04:02.112|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:04:02.722|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 12|base.save(var,value)      - [repeat-until] PASS stored '' as ${gsflag}
2023-09-01 09:04:02.723|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 13|base.save(var,value)      - executing save(var,value)(df.discount flag, $(array|item|${discount flag}|${counter}))
2023-09-01 09:04:03.324|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 13|base.save(var,value)      - [repeat-until] PASS stored '' as ${df.discount flag}
2023-09-01 09:04:03.326|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 14|base.save(var,value)      - executing save(var,value)(io.flag, $(array|item|${io.flag.valid}|${counter}))
2023-09-01 09:04:03.927|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 14|base.save(var,value)      - [repeat-until] PASS stored '' as ${io.flag}
2023-09-01 09:04:03.929|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 15|base.save(var,value)      - executing save(var,value)(interger.taxflag, $(array|item|${interger.taxflag.valid}|${counter}))
2023-09-01 09:04:04.533|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 15|base.save(var,value)      - [repeat-until] PASS stored '' as ${interger.taxflag}
2023-09-01 09:04:04.534|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 16|base.save(var,value)      - executing save(var,value)(valid.inout, $(array|item|${valid.inout.valid}|${counter}))
2023-09-01 09:04:05.140|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 16|base.save(var,value)      - [repeat-until] PASS stored '' as ${valid.inout}
2023-09-01 09:04:05.141|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 17|base.save(var,value)      - executing save(var,value)(interger.roundoffflag, $(array|item|${interger.roundoffflag.valid}|${counter}))
2023-09-01 09:04:05.744|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 17|base.save(var,value)      - [repeat-until] PASS stored '' as ${interger.roundoffflag}
2023-09-01 09:04:05.745|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 18|base.save(var,value)      - executing save(var,value)(valid.pay.mode, $(array|item|${pay.mode}|${counter}))
2023-09-01 09:04:06.347|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 18|base.save(var,value)      - [repeat-until] PASS stored '15' as ${valid.pay.mode}
2023-09-01 09:04:06.348|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 09:04:06.954|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 19|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 09:04:06.955|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 20|base.save(var,value)      - executing save(var,value)(randomno, [NUMBER(${num})=>randomDigits(1)])
2023-09-01 09:04:07.557|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 20|base.save(var,value)      - [repeat-until] PASS stored '5' as ${randomno}
2023-09-01 09:04:07.558|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 21|base.save(var,value)      - executing save(var,value)(body, {
    "delchaldata": {
        "custid": ${custid.valid},
        "dcno": "${randomno}/DOUT-24",
        "dcdate": "${date}",
        "dcflag": ${gsflag},
        "taxstate": "${state}",
        "orgstategstin": "",
        "discflag": ${df.discount flag},
        "dcnarration": "${valid.narration}",
        "roundoffflag": ${interger.roundoffflag},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "issuername": "${issue.name}",
        "designation": "${role}",
        "vehicleno": ${veh.no},
        "modeoftransport": "${mode.transport}",
        "noofpackages": "${packages}",
        "sourcestate": "${state}",
        "inoutflag": ${io.flag},
        "taxflag": ${interger.taxflag},
        "delchaltotal": "${del.total}",
        "totalinword": "${total.word}",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "${date}"
    },
    "stockdata": {
        "inout": ${valid.inout},
        "goid": ${valid.goid}
    }
})
2023-09-01 09:04:08.164|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 21|base.save(var,value)      - [repeat-until] PASS stored '{
    "delchaldata": {
        "custid": 1557,
        "dcno": "5/DOUT-24",
        "dcdate": "2024-03-31",
        "dcflag": ,
        "taxstate": "Karnataka",
        "orgstategstin": "",
        "discflag": ,
        "dcnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "roundoffflag": ,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "issuername": "WM_admin",
        "designation": "Admin",
        "vehicleno": null,
        "modeoftransport": "Road",
        "noofpackages": "1",
        "sourcestate": "Karnataka",
        "inoutflag": ,
        "taxflag": ,
        "delchaltotal": "11550.00",
        "totalinword": "Ten Thousand Five Hundred Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "dateofsupply": "2024-03-31"
    },
    "stockdata": {
        "inout": ,
        "goid": 724
    }
}' as ${body}
2023-09-01 09:04:08.167|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:04:08.783|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 09:04:09.777|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:04:09.778|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:04:09.782|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 22|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 09:04:09.783|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 23|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:04:10.391|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 23|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:34:08 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=996
body={"gkstatus": 3}
2023-09-01 09:04:10.392|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 23|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:34:08 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=996
body={"gkstatus": 3}
2023-09-01 09:04:10.393|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:04:10.997|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:04:10.998|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:04:11.002|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A24_003.log
2023-09-01 09:04:11.004|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:04:11.005|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:04:11.017|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A24_0031.log
2023-09-01 09:04:11.017|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 24|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 09:04:11.018|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 25|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:04:11.631|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 25|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkresult}
2023-09-01 09:04:11.632|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.delchal.txt)
2023-09-01 09:04:12.973|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:04:13.581|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:04:14.185|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:04:14.797|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 996 is less than or equal to 3000
2023-09-01 09:04:15.403|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:04:16.010|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:04:16.612|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:04:16.612|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.delchal.txt!=null)		=> MATCHED
2023-09-01 09:04:17.218|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 09:04:17.219|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:04:17.831|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:04:18.436|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:04:18.437|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 26|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:04:18.438|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:04:19.040|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 27|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:04:19.042|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 28|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 09:04:19.656|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 28|base.verbose(text)        - 
3
2023-09-01 09:04:19.657|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 28|base.verbose(text)        - [repeat-until] PASS 3
2023-09-01 09:04:19.658|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 29|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:04:20.261|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 29|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:04:20.262|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 30|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice)
2023-09-01 09:04:20.871|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 30|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice' as ${url}
2023-09-01 09:04:20.872|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 31|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:04:21.486|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 31|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "5/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": ,
        "taxflag": ,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": ,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": ,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 15,
        "transportationmode": "Road",
        "reversecharge": ,
        "discflag": ,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": ,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 
    }
}' as ${body}
2023-09-01 09:04:21.490|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:04:22.107|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/invoice HTTP/1.1
2023-09-01 09:04:23.151|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:04:23.153|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/invoice HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:04:23.157|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 32|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice'
2023-09-01 09:04:23.158|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:04:23.765|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 33|base.save(var,value)      - [repeat-until] PASS stored '3' as ${actualGkStatus}
2023-09-01 09:04:23.766|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 34|base.save(var,value)      - executing save(var,value)(actualgkinvid, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:04:24.382|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 34|base.save(var,value)      - [repeat-until] PASS stored 'null' as ${actualgkinvid}
2023-09-01 09:04:24.383|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\POST.invoice.txt)
2023-09-01 09:04:25.702|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:04:26.305|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:04:26.908|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:04:27.519|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1046 is less than or equal to 3000
2023-09-01 09:04:28.124|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:04:28.740|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:04:29.347|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:04:29.349|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\POST.invoice.txt!=null)		=> MATCHED
2023-09-01 09:04:29.970|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.vchData: is missing but it is required
2023-09-01 09:04:29.971|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:04:30.573|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:04:31.177|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:04:31.178|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 35|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:04:31.178|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:04:31.792|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 36|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =3; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:04:31.793|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:04:32.399|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 37|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:04:32.400|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}invoice/${actualgkinvid})
2023-09-01 09:04:33.003|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/invoice/' as ${url}
2023-09-01 09:04:33.004|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 39|base.save(var,value)      - executing save(var,value)(body, {
    "invoice": {
        "invoiceno": "${randomno}/SL-24",
        "ewaybillno": ${veh.no},
        "invoicedate": "${date}",
        "sourcestate": "${state}",
        "orgstategstin": ${veh.no},
        "issuername": "${issue.name}",
        "designation": "${role}",
        "address": "${address.valid}",
        "pincode": "",
        "custid": ${custid.valid},
        "consignee": {
            "consigneename": "${cn.consigneename}",
            "tinconsignee": "",
            "gstinconsignee": "${gs.consignee}",
            "consigneeaddress": "${cs.address}",
            "consigneestate": "${cs.state}",
            "consigneestatecode": "${cs.statecode}",
            "consigneepincode": "${cs.pincode}"
        },
        "roundoffflag": ${interger.roundoffflag},
        "taxflag": ${interger.taxflag},
        "taxstate": "${state}",
        "pricedetails": [
            {
                "custid": ${custid.valid},
                "productcode": ${pro.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.price}"
            },
            {
                "custid": ${custid.valid},
                "productcode": ${pro.second.code},
                "inoutflag": ${valid.inout},
                "lastprice": "${final.second.price}"
            }
        ],
        "paymentmode": ${valid.pay.mode},
        "transportationmode": "${mode.transport}",
        "reversecharge": ${interger.roundoffflag},
        "discflag": ${df.discount flag},
        "invnarration": "${valid.narration}",
        "dcid": ${actualgkresult},
        "inoutflag": ${valid.inout},
        "invoicetotal": "${del.total}",
        "invoicetotalword": "${invoice.word}",
        "contents": {
            "909": {
                "10000.00": "${content.valid}"
            },
            "910": {
                "2000.00": "${content.valid}"
            }
        },
        "tax": {
            "909": "${content.tax.value}",
            "910": "${content.tax.value}"
        },
        "cess": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "av": {
            "product": {
                "Laptop": "${final.price}",
                "Mobile": "${valid.value}"
            },
            "prodData": {
                "909": "${final.price}",
                "910": "${valid.value}"
            },
            "taxpayment": "${valid.cess}",
            "totaltaxable": "${valid.total.tax}",
            "avtax": {
                "GSTName": "${valid.gst}",
                "CESSName": "${valid.ces}"
            }
        },
        "freeqty": {
            "909": "${valid.cess}",
            "910": "${valid.cess}"
        },
        "discount": {
            "909": "${valid.cess}",
            "910": "${valid.value}"
        },
        "vehicleno": ${veh.no},
        "dateofsupply": "${date}"
    },
    "stock": {
        "items": {
            "909": "${content.valid}",
            "910": "${content.valid}"
        },
        "inout": ${valid.inout}
    }
})
2023-09-01 09:04:33.617|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 39|base.save(var,value)      - [repeat-until] PASS stored '{
    "invoice": {
        "invoiceno": "5/SL-24",
        "ewaybillno": null,
        "invoicedate": "2024-03-31",
        "sourcestate": "Karnataka",
        "orgstategstin": null,
        "issuername": "WM_admin",
        "designation": "Admin",
        "address": "Bangalore",
        "pincode": "",
        "custid": 1557,
        "consignee": {
            "consigneename": "ACCION LABS INDIA PRIVATE LIMITED",
            "tinconsignee": "",
            "gstinconsignee": "36AALCA1638A1Z2",
            "consigneeaddress": "Survey 11, 2nd Floor, Jyothi Pinnacle, Kondapur, Rangareddy, Rangareddy, Telangana, 500084",
            "consigneestate": "Telangana",
            "consigneestatecode": "36",
            "consigneepincode": "500084"
        },
        "roundoffflag": ,
        "taxflag": ,
        "taxstate": "Karnataka",
        "pricedetails": [
            {
                "custid": 1557,
                "productcode": 909,
                "inoutflag": ,
                "lastprice": "10000.00"
            },
            {
                "custid": 1557,
                "productcode": 910,
                "inoutflag": ,
                "lastprice": "2000.00"
            }
        ],
        "paymentmode": 15,
        "transportationmode": "Road",
        "reversecharge": ,
        "discflag": ,
        "invnarration": "Sold goods worth Rupees 11550 to ACCION LABS INDIA PRIVATE LIMITED by cash, ref invoice no. 1/SL-24",
        "dcid": ,
        "inoutflag": ,
        "invoicetotal": "11550.00",
        "invoicetotalword": "Eleven Thousand Five Hundred Fifty Rupees",
        "contents": {
            "909": {
                "10000.00": "1.00"
            },
            "910": {
                "2000.00": "1.00"
            }
        },
        "tax": {
            "909": "5.00",
            "910": "5.00"
        },
        "cess": {
            "909": "0.00",
            "910": "0.00"
        },
        "av": {
            "product": {
                "Laptop": "10000.00",
                "Mobile": "1000.00"
            },
            "prodData": {
                "909": "10000.00",
                "910": "1000.00"
            },
            "taxpayment": "0.00",
            "totaltaxable": "11000.00",
            "avtax": {
                "GSTName": "CGST",
                "CESSName": "CESS"
            }
        },
        "freeqty": {
            "909": "0.00",
            "910": "0.00"
        },
        "discount": {
            "909": "0.00",
            "910": "1000.00"
        },
        "vehicleno": null,
        "dateofsupply": "2024-03-31"
    },
    "stock": {
        "items": {
            "909": "1.00",
            "910": "1.00"
        },
        "inout": 
    }
}' as ${body}
2023-09-01 09:04:33.622|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, ${body}, response)
2023-09-01 09:04:34.236|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org/invoice/ HTTP/1.1
2023-09-01 09:04:35.257|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 09:04:35.258|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org/invoice/ HTTP/1.1: HTTP/1.1 404 Not Found
2023-09-01 09:04:35.262|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 40|ws.delete(url,body,var)   - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/invoice/'
2023-09-01 09:04:35.263|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 41|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:04:35.879|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 41|base.verbose(text)        - 
returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:34:33 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1022
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:04:35.880|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 41|base.verbose(text)        - [repeat-until] PASS returnCode=404
statusText=Not Found
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=61, Date=Fri, 01 Sep 2023 03:34:33 GMT, Content-Type=text/plain; charset=UTF-8}
contentLength=61
elapsedTime=1022
body=404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:04:35.881|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 42|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:04:36.485|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:04:36.487|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:04:36.490|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 42|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A42_003.log
2023-09-01 09:04:36.491|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 42|base.save(var,value)      - [repeat-until] PASS stored '[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]' as ${actualGkStatus}
2023-09-01 09:04:36.492|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 43|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:04:37.888|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:04:38.503|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - FAIL 
expected=200
actual  =404
2023-09-01 09:04:38.504|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A43.A11_003.log
2023-09-01 09:04:38.504|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:04:39.117|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:04:39.729|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1022 is less than or equal to 3000
2023-09-01 09:04:40.332|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:04:40.951|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - FAIL 
expected=application/json
actual  =text/plain; charset=UTF-8
2023-09-01 09:04:40.952|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 13|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A43.A13_003.log
2023-09-01 09:04:40.953|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:04:41.567|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:04:41.568|I|Thread-20|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:04:42.176|I|Thread-20|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:04:42.176|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Invoice\Put.post.productcode.txt"; line: 1, column: 2]
2023-09-01 09:04:42.177|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:04:42.778|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:04:43.393|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:04:43.395|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 43|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:04:43.395|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:04:44.003|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:04:44.004|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:04:44.017|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A44_003.log
2023-09-01 09:04:44.018|E|Thread-20|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:04:44.019|E|Thread-20|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:04:44.023|E|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx_DELETE_A44_0031.log
2023-09-01 09:04:44.024|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 44|base.assertEqual(expected - [repeat-until] FAIL 
expected=0
actual  =[JSON(404 Not Found

The resource could not be found.


/invoice/

) => extract(gkstatus)]; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:04:44.026|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 45|base.assertArrayNotContai - executing assertArrayNotContain(array,unexpected)(${response}, ${actualgkinvid})
2023-09-01 09:04:44.632|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 45|base.assertArrayNotContai - [repeat-until] FAIL Both 'array' and 'unexpected' are NULL; nexial.failFast=false; nexial.lastOutcome=false
2023-09-01 09:04:44.633|I|Thread-20|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:04:44.633|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 46|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:04:45.236|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 46|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2023-09-01 09:04:45.237|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #4---------------------------------------------->
2023-09-01 09:04:45.237|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${pay.mode}))
2023-09-01 09:04:45.881|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 10|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:04:45.882|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 47|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:04:46.493|I|Thread-20|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:04:46.494|I|Thread-20|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:04:46.515|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal|# 47|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:04:46.524|I|Thread-20|GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE|POST-/delchal - ending activity
2023-09-01 09:04:46.706|I|Thread-20|[GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001|DELETE] saving test scenario
2023-09-01 09:04:46.975|I|Thread-20|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 487872 ms
» Test Steps:     559
» Error(s):       84



2023-09-01 09:04:47.635|I|Thread-20|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 489997 ms
» Iterations:     [1] total 1
» Test Steps:     559
» Passed:         475
» Error(s):       84
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.008,Invoice.20230901_085637.001.xlsx



2023-09-01 09:04:47.635|I|Thread-20|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 09:04:47.842|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx] now completed
2023-09-01 09:04:47.843|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Product.data.xlsx
2023-09-01 09:04:47.906|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 09:04:47.907|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx] new thread started
2023-09-01 09:04:47.912|I|Thread-23|missing REQUIRED configuration; sms DISABLED!
2023-09-01 09:04:47.913|I|Thread-23|On-Demand Inspection detection enabled
2023-09-01 09:04:47.914|I|Thread-23|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx with 1 iteration(s)
2023-09-01 09:04:47.914|I|Thread-23|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 09:04:47.915|I|Thread-23|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 09:04:48.116|I|Thread-23|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001.xlsx
2023-09-01 09:04:48.116|I|Thread-23|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Product.data.xlsx
2023-09-01 09:04:48.209|I|Thread-23|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001.xlsx
2023-09-01 09:04:48.650|I|Thread-23|STARTS
2023-09-01 09:04:48.656|I|Thread-23|skipping test step in ROW 24 since it's disabled
2023-09-01 09:04:49.687|I|Thread-23|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 09:04:49.687|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx' from 'Test Plan' step 13
2023-09-01 09:04:49.688|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 09:04:49.689|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token - executing test scenario
2023-09-01 09:04:49.689|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token - executing activity
2023-09-01 09:04:49.690|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 09:04:51.034|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 09:04:51.655|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 09:04:52.262|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 09:04:52.883|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 09:04:53.491|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:04:54.098|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 09:04:55.146|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:04:55.147|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:04:55.163|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 09:04:55.766|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 09:04:56.407|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 09:04:56.433|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:04:56.433|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 09:04:57.110|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 09:04:57.110|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 09:04:57.724|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:04:57.726|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 09:04:57.727|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 09:04:59.031|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:04:59.662|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:05:00.271|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 09:05:00.896|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 09:05:01.506|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 09:05:02.120|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 09:05:02.726|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:05:03.339|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 09:05:04.394|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:05:04.395|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:05:04.428|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 09:05:05.041|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 09:05:05.676|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 09:05:05.699|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:05:05.700|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 09:05:06.353|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 09:05:06.354|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 09:05:06.967|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:05:06.968|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 09:05:06.969|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token|Login Token - ending activity
2023-09-01 09:05:07.541|I|Thread-23|[GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|Token] saving test scenario
2023-09-01 09:05:07.671|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET - executing test scenario
2023-09-01 09:05:07.672|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|Set headers - executing activity
2023-09-01 09:05:07.672|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 09:05:08.314|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 09:05:08.314|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 09:05:08.959|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 09:05:08.960|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:05:09.597|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|Set headers|#  7|base.save(var,value)      - PASS stored 'test68112' as ${randomUsername}
2023-09-01 09:05:09.597|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|Set headers - ending activity
2023-09-01 09:05:09.597|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product - executing activity
2023-09-01 09:05:09.598|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|#  8|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:05:10.249|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|#  8|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:05:10.250|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|#  9|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:05:10.887|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|#  9|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:05:10.888|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 10|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:05:11.504|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 10|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:05:12.408|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 10|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:05:12.409|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 10|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:05:12.436|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 10|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:05:12.436|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 11|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:05:13.050|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 11|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=12073, Date=Fri, 01 Sep 2023 03:35:10 GMT, Content-Type=application/json}
contentLength=12073
elapsedTime=906
body={"gkstatus": 0, "gkresult": [{"srno": 1, "unitname": "PCS", "categoryname": "", "productcode": 391, "productdesc": "ProductTest123", "categorycode": null, "productquantity": "0.00", "gsflag": 7}, {"srno": 2, "unitname": "BAG", "categoryname": "", "productcode": 380, "productdesc": "ProductTest7723524417", "categorycode": null, "productquantity": "0.00", "gsflag": 7}, {"srno": 3, "unitname": "KME", "categoryname": "", "productcode": 340, "productdesc": "Test", "categorycode": null, "productqua...
2023-09-01 09:05:13.054|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 11|base.verbose(text)        - PASS 
2023-09-01 09:05:13.054|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 12|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:05:13.663|E|Thread-23|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:05:13.664|E|Thread-23|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:05:13.667|E|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 12|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001.xlsx_GET_A12.log
2023-09-01 09:05:13.669|E|Thread-23|Unable to parse as JSON - 404 Not Found

The resource could not be found.


/invoice/: JsonSyntaxException: JSON document was not fully consumed.
2023-09-01 09:05:13.670|E|Thread-23|Unable to construct JSON: TypeConversionException: Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


2023-09-01 09:05:13.673|E|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 12|base.save(var,value)      - Unable to process expression due to Error when converting as 'JSON' on data '404 Not Found

The resource could not be found.


/invoice/

': Cannot convert to JSON: 404 Not Found

The resource could not be found.


/invoice/


Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001.xlsx_GET_A121.log
2023-09-01 09:05:13.720|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 12|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:05:13.721|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 13|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.product.txt)
2023-09-01 09:05:15.049|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:05:15.679|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:05:16.289|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:05:16.919|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 906 is less than or equal to 3000
2023-09-01 09:05:17.528|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:05:18.154|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:05:18.761|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:05:18.762|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Get.product.txt!=null)		=> MATCHED
2023-09-01 09:05:19.400|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:05:20.010|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:05:20.629|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:05:20.638|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 13|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:05:20.639|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 14|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:05:21.293|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 14|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:05:21.294|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 15|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:05:21.904|I|Thread-23|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:05:21.905|I|Thread-23|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:05:21.929|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product|# 15|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:05:21.930|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product - ending activity
2023-09-01 09:05:21.930|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} - executing activity
2023-09-01 09:05:21.930|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 16|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:05:22.585|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 16|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:05:22.586|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 17|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${valid.productcode})
2023-09-01 09:05:23.220|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 17|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/product/350' as ${url}
2023-09-01 09:05:23.221|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 18|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:05:23.834|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 18|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/product/350 HTTP/1.1
2023-09-01 09:05:24.624|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 18|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:05:24.624|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 18|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/product/350 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:05:24.649|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 18|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/350'
2023-09-01 09:05:24.650|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 19|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:05:25.265|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 19|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=389, Date=Fri, 01 Sep 2023 03:35:23 GMT, Content-Type=application/json}
contentLength=389
elapsedTime=791
body={"gkstatus": 0, "gkresult": {"discountpercent": "8.33", "discountamount": "10.00", "productcode": 350, "productdesc": "TestProduct", "gsflag": 7, "gscode": "{\"hsn_code\":80,\"hsn_desc\":\"Tin and articles thereof\"}", "prodsp": "120.00", "prodmrp": "0.00", "deletable": 0, "specs": {}, "categorycode": null, "uomid": 30, "unitname": "PCS", "openingstock": "2.00"}, "numberofgodowns": "1"}
2023-09-01 09:05:25.268|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 19|base.verbose(text)        - PASS 
2023-09-01 09:05:25.268|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:05:25.920|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 20|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:05:25.921|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 21|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:05:26.573|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 21|base.save(var,value)      - PASS stored '{"productcode":350,"categorycode":null,"deletable":0,"discountpercent":"8.33","uomid":30,"prodsp":"120.00","specs":{},"openingstock":"2.00","discountamount":"10.00","unitname":"PCS","prodmrp":"0.00","productdesc":"TestProduct","gsflag":7,"gscode":"{\"hsn_code\":80,\"hsn_desc\":\"Tin and articles thereof\"}"}' as ${actualgkresult}
2023-09-01 09:05:26.574|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 22|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult.productcode)])
2023-09-01 09:05:27.213|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 22|base.save(var,value)      - PASS stored '350' as ${productcode}
2023-09-01 09:05:27.213|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 23|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.productcode.txt)
2023-09-01 09:05:28.585|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:05:29.211|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:05:29.826|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:05:30.441|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 791 is less than or equal to 3000
2023-09-01 09:05:31.048|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:05:31.677|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:05:32.290|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:05:32.292|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Get.productcode.txt!=null)		=> MATCHED
2023-09-01 09:05:32.922|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:05:33.528|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:05:34.145|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:05:34.167|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 23|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:05:34.167|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 24|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:05:34.819|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 24|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:05:34.820|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 25|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:05:35.435|I|Thread-23|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:05:35.436|I|Thread-23|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:05:35.458|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 25|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:05:35.459|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 26|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:05:36.113|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode}|# 26|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:05:36.114|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|GET - /product/{productcode} - ending activity
2023-09-01 09:05:36.114|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product - executing activity
2023-09-01 09:05:36.114|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 27|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:05:36.756|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 27|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:05:36.757|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 28|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(20, -1)
2023-09-01 09:05:37.365|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 29|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:05:37.366|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 29|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:05:37.969|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 30|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:05:38.583|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 30|base.save(var,value)      - [repeat-until] PASS stored '7' as ${gsflag}
2023-09-01 09:05:38.584|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 31|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:05:39.189|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 31|base.save(var,value)      - [repeat-until] PASS stored 'true' as ${godownflag1}
2023-09-01 09:05:39.189|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 32|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:05:39.793|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 32|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:05:39.794|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 33|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:05:40.398|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 33|base.verbose(text)        - 
7
2023-09-01 09:05:40.399|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 33|base.verbose(text)        - [repeat-until] PASS 7
2023-09-01 09:05:40.399|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 34|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:05:41.008|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 34|base.save(var,value)      - [repeat-until] PASS stored 'test83228' as ${randomUsername}
2023-09-01 09:05:41.008|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 35|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godownflag1}
})
2023-09-01 09:05:41.613|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 35|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test83228",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": true
}' as ${body}
2023-09-01 09:05:41.615|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:05:42.218|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:05:43.238|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:05:43.239|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:05:43.243|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:05:43.244|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 37|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:05:43.856|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 37|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:35:41 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1021
body={"gkstatus": 0, "gkresult": 429}
2023-09-01 09:05:43.857|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 37|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:35:41 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1021
body={"gkstatus": 0, "gkresult": 429}
2023-09-01 09:05:43.858|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 38|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:05:44.462|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 38|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:05:44.463|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 39|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:05:45.065|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 39|base.save(var,value)      - [repeat-until] PASS stored '429' as ${productcode}
2023-09-01 09:05:45.066|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 40|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:05:46.367|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:05:46.977|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:05:47.589|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:05:48.191|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1021 is less than or equal to 3000
2023-09-01 09:05:48.794|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:05:49.398|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:05:50.006|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:05:50.008|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:05:50.623|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:05:51.226|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:05:51.833|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:05:51.834|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 40|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:05:51.835|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 41|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:05:52.440|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 41|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:05:52.440|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 42|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}godown/product/${productcode})
2023-09-01 09:05:53.042|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 42|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/godown/product/429' as ${url}
2023-09-01 09:05:53.043|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:05:53.647|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/godown/product/429 HTTP/1.1
2023-09-01 09:05:54.415|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:05:54.416|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/godown/product/429 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:05:54.420|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/godown/product/429'
2023-09-01 09:05:54.421|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 44|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:05:55.023|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 44|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=31, Date=Fri, 01 Sep 2023 03:35:52 GMT, Content-Type=application/json}
contentLength=31
elapsedTime=770
body={"gkstatus": 0, "gkresult": []}
2023-09-01 09:05:55.024|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 44|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=31, Date=Fri, 01 Sep 2023 03:35:52 GMT, Content-Type=application/json}
contentLength=31
elapsedTime=770
body={"gkstatus": 0, "gkresult": []}
2023-09-01 09:05:55.025|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 45|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:05:55.635|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 45|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:05:55.636|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 46|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.product.txt)
2023-09-01 09:05:56.954|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:05:57.562|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:05:58.167|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:05:58.779|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 770 is less than or equal to 3000
2023-09-01 09:05:59.380|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:05:59.987|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:06:00.592|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:06:00.593|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Get.product.txt!=null)		=> MATCHED
2023-09-01 09:06:01.200|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:06:01.810|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:06:02.413|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:06:02.414|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 46|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:06:02.415|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 47|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:06:03.024|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 47|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:06:03.026|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 48|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:06:03.637|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 48|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:06:03.638|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 29|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:06:03.639|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 29|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:06:04.241|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 30|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:06:04.844|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 30|base.save(var,value)      - [repeat-until] PASS stored '19' as ${gsflag}
2023-09-01 09:06:04.845|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 31|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:06:05.449|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 31|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${godownflag1}
2023-09-01 09:06:05.451|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 32|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:06:06.058|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 32|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:06:06.059|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 33|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:06:06.671|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 33|base.verbose(text)        - 
19
2023-09-01 09:06:06.672|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 33|base.verbose(text)        - [repeat-until] PASS 19
2023-09-01 09:06:06.672|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 34|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:06:07.288|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 34|base.save(var,value)      - [repeat-until] PASS stored 'test89197' as ${randomUsername}
2023-09-01 09:06:07.289|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 35|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godownflag1}
})
2023-09-01 09:06:07.905|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 35|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test89197",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:06:07.906|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:06:08.511|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:06:09.486|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:06:09.488|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:06:09.491|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 36|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:06:09.491|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 37|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:06:10.100|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 37|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:36:08 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=977
body={"gkstatus": 0, "gkresult": 430}
2023-09-01 09:06:10.101|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 37|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:36:08 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=977
body={"gkstatus": 0, "gkresult": 430}
2023-09-01 09:06:10.102|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 38|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:06:10.709|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 38|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:06:10.710|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 39|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:06:11.315|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 39|base.save(var,value)      - [repeat-until] PASS stored '430' as ${productcode}
2023-09-01 09:06:11.316|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 40|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:06:12.608|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:06:13.212|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:06:13.816|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:06:14.423|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 977 is less than or equal to 3000
2023-09-01 09:06:15.031|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:06:15.637|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:06:16.240|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:06:16.241|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:06:16.854|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:06:17.455|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:06:18.064|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:06:18.066|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 40|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:06:18.066|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 41|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:06:18.672|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 41|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:06:18.673|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 42|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}godown/product/${productcode})
2023-09-01 09:06:19.277|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 42|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/godown/product/430' as ${url}
2023-09-01 09:06:19.277|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:06:19.882|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/godown/product/430 HTTP/1.1
2023-09-01 09:06:20.658|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:06:20.660|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/godown/product/430 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:06:20.665|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 43|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/godown/product/430'
2023-09-01 09:06:20.666|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 44|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:06:21.279|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 44|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=31, Date=Fri, 01 Sep 2023 03:36:19 GMT, Content-Type=application/json}
contentLength=31
elapsedTime=779
body={"gkstatus": 0, "gkresult": []}
2023-09-01 09:06:21.280|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 44|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=31, Date=Fri, 01 Sep 2023 03:36:19 GMT, Content-Type=application/json}
contentLength=31
elapsedTime=779
body={"gkstatus": 0, "gkresult": []}
2023-09-01 09:06:21.281|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 45|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:06:21.890|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 45|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:06:21.891|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 46|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.product.txt)
2023-09-01 09:06:23.223|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:06:23.826|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:06:24.428|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:06:25.040|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 779 is less than or equal to 3000
2023-09-01 09:06:25.644|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:06:26.249|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:06:26.856|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:06:26.858|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Get.product.txt!=null)		=> MATCHED
2023-09-01 09:06:27.462|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:06:28.071|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:06:28.684|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:06:28.685|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 46|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:06:28.686|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 47|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:06:29.291|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 47|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:06:29.292|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 48|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:06:29.900|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 48|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:06:29.901|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 29|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:06:29.902|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 29|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:06:30.539|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 28|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:06:30.540|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 49|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:06:31.152|I|Thread-23|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:06:31.153|I|Thread-23|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:06:31.164|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product|# 49|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:06:31.165|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET|POST-Product - ending activity
2023-09-01 09:06:31.701|I|Thread-23|[GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|GET] saving test scenario
2023-09-01 09:06:31.867|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST - executing test scenario
2023-09-01 09:06:31.867|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers - executing activity
2023-09-01 09:06:31.867|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 09:06:32.514|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 09:06:32.514|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 09:06:33.133|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 09:06:33.134|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:06:33.769|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers|#  7|base.save(var,value)      - PASS stored 'test60600' as ${randomUsername}
2023-09-01 09:06:33.769|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers|#  8|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:06:34.397|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers|#  8|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:06:34.398|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|Set headers - ending activity
2023-09-01 09:06:34.398|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product - executing activity
2023-09-01 09:06:34.399|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|#  9|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:06:35.021|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|#  9|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:06:35.022|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 10|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(13, -1)
2023-09-01 09:06:35.634|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:06:35.634|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:06:36.237|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:06:36.849|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 12|base.save(var,value)      - [repeat-until] PASS stored '7' as ${gsflag}
2023-09-01 09:06:36.850|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 13|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:06:37.452|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 13|base.save(var,value)      - [repeat-until] PASS stored 'true' as ${godownflag1}
2023-09-01 09:06:37.453|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:06:38.057|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 14|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:06:38.058|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 15|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:06:38.664|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 15|base.verbose(text)        - 
7
2023-09-01 09:06:38.665|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 15|base.verbose(text)        - [repeat-until] PASS 7
2023-09-01 09:06:38.666|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 16|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:06:39.281|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 16|base.save(var,value)      - [repeat-until] PASS stored 'test88005' as ${randomUsername}
2023-09-01 09:06:39.282|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 17|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godownflag1}
})
2023-09-01 09:06:39.900|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 17|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test88005",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": true
}' as ${body}
2023-09-01 09:06:39.901|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:06:40.519|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:06:41.539|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:06:41.540|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:06:41.540|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:06:41.540|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 19|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:06:42.145|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 19|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:36:40 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1022
body={"gkstatus": 0, "gkresult": 431}
2023-09-01 09:06:42.146|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 19|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:36:40 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1022
body={"gkstatus": 0, "gkresult": 431}
2023-09-01 09:06:42.147|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:06:42.753|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 20|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:06:42.754|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 21|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:06:44.066|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:06:44.677|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:06:45.279|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:06:45.885|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1022 is less than or equal to 3000
2023-09-01 09:06:46.487|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:06:47.098|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:06:47.701|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:06:47.703|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:06:48.311|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:06:48.913|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:06:49.516|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:06:49.517|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 21|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:06:49.518|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 22|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:06:50.122|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 22|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:06:50.123|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 23|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:06:50.732|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 23|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:06:50.733|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:06:50.734|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:06:51.335|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:06:51.942|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 12|base.save(var,value)      - [repeat-until] PASS stored '19' as ${gsflag}
2023-09-01 09:06:51.943|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 13|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:06:52.566|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 13|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${godownflag1}
2023-09-01 09:06:52.566|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:06:53.170|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 14|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:06:53.171|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 15|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:06:53.774|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 15|base.verbose(text)        - 
19
2023-09-01 09:06:53.775|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 15|base.verbose(text)        - [repeat-until] PASS 19
2023-09-01 09:06:53.776|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 16|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:06:54.392|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 16|base.save(var,value)      - [repeat-until] PASS stored 'test27097' as ${randomUsername}
2023-09-01 09:06:54.393|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 17|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godownflag1}
})
2023-09-01 09:06:55.007|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 17|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test27097",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:06:55.008|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:06:55.621|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:06:56.680|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:06:56.681|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:06:56.686|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 18|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:06:56.687|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 19|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:06:57.292|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 19|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:36:55 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1061
body={"gkstatus": 0, "gkresult": 432}
2023-09-01 09:06:57.293|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 19|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:36:55 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1061
body={"gkstatus": 0, "gkresult": 432}
2023-09-01 09:06:57.294|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:06:57.903|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 20|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:06:57.904|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 21|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:06:59.249|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:06:59.863|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:07:00.466|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:07:01.072|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1061 is less than or equal to 3000
2023-09-01 09:07:01.679|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:07:02.283|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:07:02.888|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:07:02.890|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:07:03.494|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:07:04.098|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:07:04.706|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:07:04.707|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 21|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:07:04.708|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 22|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:07:05.309|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 22|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:07:05.310|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 23|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:07:05.912|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 23|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:07:05.913|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:07:05.914|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:07:06.543|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 10|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:07:06.543|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 24|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:07:07.174|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 24|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:07:07.175|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 25|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(11, -1)
2023-09-01 09:07:07.781|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 26|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:07:07.782|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:07:08.388|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 27|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:07:08.993|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 27|base.save(var,value)      - [repeat-until] PASS stored '7' as ${gsflag}
2023-09-01 09:07:08.994|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 28|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:07:09.597|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 28|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:07:09.598|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 29|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:07:10.213|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 29|base.save(var,value)      - [repeat-until] PASS stored 'test31518' as ${randomUsername}
2023-09-01 09:07:10.214|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 30|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
  },
  "godownflag": ${godownflag2}
})
2023-09-01 09:07:10.825|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 30|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test31518",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:07:10.827|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:07:11.431|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:07:12.464|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:07:12.465|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:07:12.469|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:07:12.470|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 32|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:07:13.074|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 32|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:37:10 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1034
body={"gkstatus": 0, "gkresult": 433}
2023-09-01 09:07:13.076|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 32|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:37:10 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1034
body={"gkstatus": 0, "gkresult": 433}
2023-09-01 09:07:13.077|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:07:13.678|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 33|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:07:13.680|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 34|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:07:15.020|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:07:15.628|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:07:16.233|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:07:16.836|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1034 is less than or equal to 3000
2023-09-01 09:07:17.439|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:07:18.041|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:07:18.649|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:07:18.650|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:07:19.255|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:07:19.871|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:07:20.474|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:07:20.476|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 34|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:07:20.477|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:07:21.081|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 35|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:07:21.082|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 36|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:07:21.684|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 36|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:07:21.685|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 26|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:07:21.686|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:07:22.291|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 27|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:07:22.896|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 27|base.save(var,value)      - [repeat-until] PASS stored '19' as ${gsflag}
2023-09-01 09:07:22.898|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 28|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:07:23.501|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 28|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:07:23.502|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 29|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:07:24.111|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 29|base.save(var,value)      - [repeat-until] PASS stored 'test38995' as ${randomUsername}
2023-09-01 09:07:24.111|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 30|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
  },
  "godownflag": ${godownflag2}
})
2023-09-01 09:07:24.723|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 30|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test38995",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:07:24.724|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:07:25.331|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:07:26.360|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:07:26.360|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:07:26.365|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 31|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:07:26.365|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 32|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:07:26.973|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 32|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:37:24 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1030
body={"gkstatus": 0, "gkresult": 434}
2023-09-01 09:07:26.973|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 32|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:37:24 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1030
body={"gkstatus": 0, "gkresult": 434}
2023-09-01 09:07:26.974|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:07:27.590|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 33|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:07:27.593|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 34|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:07:28.910|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:07:29.513|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:07:30.118|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:07:30.723|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1030 is less than or equal to 3000
2023-09-01 09:07:31.327|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:07:31.928|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:07:32.530|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:07:32.532|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:07:33.142|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:07:33.758|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:07:34.360|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:07:34.361|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 34|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:07:34.362|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 35|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:07:34.965|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 35|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:07:34.965|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 36|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:07:35.567|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 36|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:07:35.567|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 26|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:07:35.568|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:07:36.198|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 25|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:07:36.200|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 37|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:07:36.815|I|Thread-23|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:07:36.816|I|Thread-23|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:07:36.826|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product|# 37|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:07:36.828|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST|POST-/product - ending activity
2023-09-01 09:07:36.901|I|Thread-23|[GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|POST] saving test scenario
2023-09-01 09:07:37.075|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT - executing test scenario
2023-09-01 09:07:37.076|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers - executing activity
2023-09-01 09:07:37.076|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 09:07:37.729|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 09:07:37.729|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 09:07:38.353|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 09:07:38.353|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:07:38.971|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers|#  7|base.save(var,value)      - PASS stored 'test88231' as ${randomUsername}
2023-09-01 09:07:38.972|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers|#  8|ws.header(name,value)     - executing header(name,value)(gktoken, eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoiNjgiLCJ1c2VyaWQiOjJ9.Sx3usGdO4oWbRx0t1c7-yeSSnyObeKzbSGDo5Z7X0k0)
2023-09-01 09:07:39.598|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers|#  8|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoiNjgiLCJ1c2VyaWQiOjJ9.Sx3usGdO4oWbRx0t1c7-yeSSnyObeKzbSGDo5Z7X0k0
2023-09-01 09:07:39.599|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|Set headers - ending activity
2023-09-01 09:07:39.599|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product - executing activity
2023-09-01 09:07:39.600|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|#  9|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:07:40.231|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|#  9|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:07:40.232|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 10|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(32, -1)
2023-09-01 09:07:40.837|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:07:40.838|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:07:41.441|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:07:42.047|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 12|base.save(var,value)      - [repeat-until] PASS stored '7' as ${gsflag}
2023-09-01 09:07:42.048|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 13|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:07:42.651|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 13|base.save(var,value)      - [repeat-until] PASS stored 'true' as ${godownflag1}
2023-09-01 09:07:42.652|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:07:43.260|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 14|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:07:43.262|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 15|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:07:43.868|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 15|base.verbose(text)        - 
7
2023-09-01 09:07:43.869|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 15|base.verbose(text)        - [repeat-until] PASS 7
2023-09-01 09:07:43.870|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 16|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:07:44.472|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 16|base.save(var,value)      - [repeat-until] PASS stored 'test31977' as ${randomUsername}
2023-09-01 09:07:44.473|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 17|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godownflag1}
})
2023-09-01 09:07:45.080|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 17|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test31977",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": true
}' as ${body}
2023-09-01 09:07:45.082|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:07:45.698|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:07:46.785|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:07:46.786|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:07:46.791|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:07:46.791|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 19|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:07:47.400|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 19|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:37:45 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1088
body={"gkstatus": 0, "gkresult": 435}
2023-09-01 09:07:47.401|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 19|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:37:45 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1088
body={"gkstatus": 0, "gkresult": 435}
2023-09-01 09:07:47.402|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:07:48.007|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 20|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:07:48.008|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 21|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:07:48.611|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 21|base.save(var,value)      - [repeat-until] PASS stored '435' as ${productcode}
2023-09-01 09:07:48.612|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 22|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:07:49.934|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:07:50.541|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:07:51.152|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:07:51.755|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1088 is less than or equal to 3000
2023-09-01 09:07:52.359|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:07:52.970|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:07:53.574|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:07:53.576|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:07:54.182|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:07:54.789|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:07:55.393|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:07:55.394|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 22|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:07:55.395|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 23|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:07:56.005|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 23|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:07:56.006|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 24|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:07:56.007|I|Thread-23|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 09:07:56.007|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 24|ws.header(name,value)     - [repeat-until] SKIPPED current step skipped: SkipIf(true)
2023-09-01 09:07:56.008|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 25|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:07:56.623|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 25|base.save(var,value)      - [repeat-until] PASS stored 'test46145' as ${randomUsername}
2023-09-01 09:07:56.624|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 26|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:07:57.231|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 26|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/435' as ${url}
2023-09-01 09:07:57.232|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 27|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productcode": ${productcode},
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {},
  "godownflag": ${godownflag1}
})
2023-09-01 09:07:57.844|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 27|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productcode": 435,
    "productdesc": "test46145",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {},
  "godownflag": true
}' as ${body}
2023-09-01 09:07:57.846|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 09:07:58.464|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/product/435 HTTP/1.1
2023-09-01 09:07:59.466|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 09:07:59.467|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/product/435 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:07:59.471|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/435'
2023-09-01 09:07:59.472|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 29|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:08:00.076|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 29|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:37:58 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1004
body={"gkstatus": 0}
2023-09-01 09:08:00.078|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 29|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:37:58 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1004
body={"gkstatus": 0}
2023-09-01 09:08:00.078|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 30|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:08:00.682|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 30|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:08:00.683|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 31|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:08:02.001|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:08:02.604|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:08:03.209|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:08:03.814|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1004 is less than or equal to 3000
2023-09-01 09:08:04.417|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:08:05.030|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:08:05.632|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:08:05.634|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:08:06.253|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:08:06.861|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:08:07.465|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:08:07.466|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 31|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:08:07.467|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:08:08.070|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 32|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:08:08.071|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 33|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:08:08.673|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 33|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:08:08.674|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 34|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:08:09.282|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 34|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/435' as ${url}
2023-09-01 09:08:09.282|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:08:09.888|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/product/435 HTTP/1.1
2023-09-01 09:08:10.683|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:08:10.685|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/product/435 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:08:10.690|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/435'
2023-09-01 09:08:10.690|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 36|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:08:11.299|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 36|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=324, Date=Fri, 01 Sep 2023 03:38:09 GMT, Content-Type=application/json}
contentLength=324
elapsedTime=797
body={"gkstatus": 0, "gkresult": {"discountpercent": "0.00", "discountamount": "0.00", "productcode": 435, "productdesc": "test46145", "gsflag": 7, "gscode": "", "prodsp": "0.00", "prodmrp": "0.00", "deletable": 0, "specs": {}, "categorycode": null, "uomid": 1, "unitname": "BAG", "openingstock": "0.00"}, "numberofgodowns": "0"}
2023-09-01 09:08:11.300|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 36|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=324, Date=Fri, 01 Sep 2023 03:38:09 GMT, Content-Type=application/json}
contentLength=324
elapsedTime=797
body={"gkstatus": 0, "gkresult": {"discountpercent": "0.00", "discountamount": "0.00", "productcode": 435, "productdesc": "test46145", "gsflag": 7, "gscode": "", "prodsp": "0.00", "prodmrp": "0.00", "deletable": 0, "specs": {}, "categorycode": null, "uomid": 1, "unitname": "BAG", "openingstock": "0.00"}, "numberofgodowns": "0"}
2023-09-01 09:08:11.301|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 37|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:08:11.918|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 37|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:08:11.919|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 38|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:08:12.527|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 38|base.save(var,value)      - [repeat-until] PASS stored '{"productcode":435,"categorycode":null,"deletable":0,"discountpercent":"0.00","uomid":1,"prodsp":"0.00","specs":{},"openingstock":"0.00","discountamount":"0.00","unitname":"BAG","prodmrp":"0.00","productdesc":"test46145","gsflag":7,"gscode":""}' as ${actualgkresult}
2023-09-01 09:08:12.528|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 39|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult.productcode)])
2023-09-01 09:08:13.140|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 39|base.save(var,value)      - [repeat-until] PASS stored '435' as ${productcode}
2023-09-01 09:08:13.141|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 40|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.productcode.txt)
2023-09-01 09:08:14.467|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:08:15.079|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:08:15.681|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:08:16.289|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 797 is less than or equal to 3000
2023-09-01 09:08:16.894|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:08:17.498|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:08:18.106|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:08:18.108|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Get.productcode.txt!=null)		=> MATCHED
2023-09-01 09:08:18.714|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:08:19.317|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:08:19.922|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:08:19.924|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 40|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:08:19.924|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 41|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:08:20.529|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 41|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:08:20.530|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 42|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:08:21.139|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 42|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:08:21.140|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:08:21.141|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:08:21.743|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:08:22.348|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 12|base.save(var,value)      - [repeat-until] PASS stored '19' as ${gsflag}
2023-09-01 09:08:22.348|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 13|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:08:22.955|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 13|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${godownflag1}
2023-09-01 09:08:22.956|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:08:23.562|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 14|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:08:23.563|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 15|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:08:24.179|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 15|base.verbose(text)        - 
19
2023-09-01 09:08:24.180|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 15|base.verbose(text)        - [repeat-until] PASS 19
2023-09-01 09:08:24.181|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 16|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:08:24.785|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 16|base.save(var,value)      - [repeat-until] PASS stored 'test81274' as ${randomUsername}
2023-09-01 09:08:24.786|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 17|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godownflag1}
})
2023-09-01 09:08:25.389|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 17|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test81274",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:08:25.390|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:08:26.007|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:08:27.014|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:08:27.016|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:08:27.020|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 18|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:08:27.021|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 19|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:08:27.627|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 19|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:38:25 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1009
body={"gkstatus": 0, "gkresult": 436}
2023-09-01 09:08:27.628|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 19|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:38:25 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1009
body={"gkstatus": 0, "gkresult": 436}
2023-09-01 09:08:27.629|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:08:28.240|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 20|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:08:28.241|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 21|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:08:28.859|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 21|base.save(var,value)      - [repeat-until] PASS stored '436' as ${productcode}
2023-09-01 09:08:28.860|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 22|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:08:30.183|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:08:30.793|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:08:31.398|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:08:32.005|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1009 is less than or equal to 3000
2023-09-01 09:08:32.609|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:08:33.216|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:08:33.821|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:08:33.823|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:08:34.431|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:08:35.036|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:08:35.639|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:08:35.640|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 22|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:08:35.641|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 23|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:08:36.243|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 23|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:08:36.244|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 24|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:08:36.245|I|Thread-23|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 09:08:36.246|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 24|ws.header(name,value)     - [repeat-until] SKIPPED current step skipped: SkipIf(true)
2023-09-01 09:08:36.246|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 25|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:08:36.854|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 25|base.save(var,value)      - [repeat-until] PASS stored 'test77064' as ${randomUsername}
2023-09-01 09:08:36.855|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 26|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:08:37.457|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 26|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/436' as ${url}
2023-09-01 09:08:37.458|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 27|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productcode": ${productcode},
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {},
  "godownflag": ${godownflag1}
})
2023-09-01 09:08:38.074|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 27|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productcode": 436,
    "productdesc": "test77064",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {},
  "godownflag": false
}' as ${body}
2023-09-01 09:08:38.076|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 09:08:38.693|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/product/436 HTTP/1.1
2023-09-01 09:08:39.746|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 09:08:39.748|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/product/436 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:08:39.753|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 28|ws.put(url,body,var)      - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/436'
2023-09-01 09:08:39.754|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 29|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:08:40.369|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 29|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:38:38 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1055
body={"gkstatus": 0}
2023-09-01 09:08:40.370|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 29|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:38:38 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1055
body={"gkstatus": 0}
2023-09-01 09:08:40.371|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 30|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:08:40.975|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 30|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:08:40.976|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 31|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:08:42.295|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:08:42.900|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:08:43.505|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:08:44.116|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1055 is less than or equal to 3000
2023-09-01 09:08:44.718|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:08:45.324|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:08:45.932|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:08:45.933|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:08:46.553|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:08:47.156|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:08:47.763|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:08:47.764|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 31|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:08:47.765|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:08:48.370|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 32|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:08:48.371|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 33|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:08:48.976|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 33|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:08:48.977|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 34|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:08:49.593|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 34|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/436' as ${url}
2023-09-01 09:08:49.595|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:08:50.205|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/product/436 HTTP/1.1
2023-09-01 09:08:50.954|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:08:50.955|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/product/436 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:08:50.958|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 35|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/436'
2023-09-01 09:08:50.959|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 36|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:08:51.562|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 36|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=195, Date=Fri, 01 Sep 2023 03:38:49 GMT, Content-Type=application/json}
contentLength=195
elapsedTime=750
body={"gkstatus": 0, "gkresult": {"discountpercent": "0.00", "discountamount": "0.00", "productcode": 436, "productdesc": "test77064", "gsflag": 19, "gscode": "", "prodsp": "0.00", "prodmrp": "0.00"}}
2023-09-01 09:08:51.563|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 36|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=195, Date=Fri, 01 Sep 2023 03:38:49 GMT, Content-Type=application/json}
contentLength=195
elapsedTime=750
body={"gkstatus": 0, "gkresult": {"discountpercent": "0.00", "discountamount": "0.00", "productcode": 436, "productdesc": "test77064", "gsflag": 19, "gscode": "", "prodsp": "0.00", "prodmrp": "0.00"}}
2023-09-01 09:08:51.564|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 37|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:08:52.169|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 37|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:08:52.170|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 38|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:08:52.773|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 38|base.save(var,value)      - [repeat-until] PASS stored '{"productcode":436,"discountamount":"0.00","prodmrp":"0.00","discountpercent":"0.00","prodsp":"0.00","productdesc":"test77064","gsflag":19,"gscode":""}' as ${actualgkresult}
2023-09-01 09:08:52.773|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 39|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult.productcode)])
2023-09-01 09:08:53.384|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 39|base.save(var,value)      - [repeat-until] PASS stored '436' as ${productcode}
2023-09-01 09:08:53.385|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 40|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.productcode.txt)
2023-09-01 09:08:54.706|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:08:55.313|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:08:55.923|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:08:56.530|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 750 is less than or equal to 3000
2023-09-01 09:08:57.134|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:08:57.750|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:08:58.353|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:08:58.354|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Get.productcode.txt!=null)		=> MATCHED
2023-09-01 09:08:58.966|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:08:59.579|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:09:00.181|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:09:00.182|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 40|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:09:00.183|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 41|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:09:00.800|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 41|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:09:00.801|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 42|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:09:01.416|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 42|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:09:01.417|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:09:01.418|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:09:02.040|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product|# 10|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:09:02.043|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST-/product - ending activity
2023-09-01 09:09:02.043|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false - executing activity
2023-09-01 09:09:02.044|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 43|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:09:02.676|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 43|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:09:02.677|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 44|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(32, -1)
2023-09-01 09:09:03.282|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 45|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:09:03.282|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 45|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:09:03.886|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 46|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:09:04.491|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 46|base.save(var,value)      - [repeat-until] PASS stored '7' as ${gsflag}
2023-09-01 09:09:04.493|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 47|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:09:05.098|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 47|base.save(var,value)      - [repeat-until] PASS stored 'true' as ${godownflag1}
2023-09-01 09:09:05.099|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 48|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:09:05.716|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 48|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:09:05.717|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 49|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:09:06.319|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 49|base.verbose(text)        - 
7
2023-09-01 09:09:06.320|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 49|base.verbose(text)        - [repeat-until] PASS 7
2023-09-01 09:09:06.321|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 50|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:09:06.924|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 50|base.save(var,value)      - [repeat-until] PASS stored 'test75206' as ${randomUsername}
2023-09-01 09:09:06.925|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 51|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
  },
  "godownflag": ${godownflag2}
})
2023-09-01 09:09:07.528|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 51|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test75206",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:09:07.530|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:09:08.140|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:09:09.185|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:09:09.187|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:09:09.192|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:09:09.192|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 53|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:09:09.796|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 53|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:39:07 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1047
body={"gkstatus": 0, "gkresult": 437}
2023-09-01 09:09:09.797|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 53|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:39:07 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1047
body={"gkstatus": 0, "gkresult": 437}
2023-09-01 09:09:09.798|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 54|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:09:10.406|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 54|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:09:10.407|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 55|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:09:11.024|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 55|base.save(var,value)      - [repeat-until] PASS stored '437' as ${productcode}
2023-09-01 09:09:11.025|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 56|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:09:12.356|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:09:12.965|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:09:13.569|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:09:14.171|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1047 is less than or equal to 3000
2023-09-01 09:09:14.774|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:09:15.377|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:09:15.986|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:09:15.987|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:09:16.606|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:09:17.222|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:09:17.827|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:09:17.828|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 56|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:09:17.829|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 57|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:09:18.440|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 57|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:09:18.440|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 58|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:09:19.057|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 58|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:09:19.058|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 59|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:09:19.660|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 59|base.save(var,value)      - [repeat-until] PASS stored 'test94915' as ${randomUsername}
2023-09-01 09:09:19.660|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 60|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:09:20.273|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 60|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/437' as ${url}
2023-09-01 09:09:20.274|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 61|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
  },
  "godownflag": ${godownflag2}
})
2023-09-01 09:09:20.885|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 61|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test94915",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:09:20.886|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 09:09:21.489|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/product/437 HTTP/1.1
2023-09-01 09:09:22.482|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 09:09:22.482|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/product/437 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:09:22.488|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/437'
2023-09-01 09:09:22.489|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 63|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:09:23.096|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 63|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:39:21 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=994
body={"gkstatus": 0}
2023-09-01 09:09:23.097|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 63|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:39:21 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=994
body={"gkstatus": 0}
2023-09-01 09:09:23.099|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 64|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:09:23.715|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 64|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:09:23.716|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 65|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:09:25.063|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:09:25.666|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:09:26.269|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:09:26.881|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - PASS 994 is less than or equal to 3000
2023-09-01 09:09:27.483|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:09:28.092|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:09:28.696|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:09:28.697|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:09:29.309|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:09:29.924|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:09:30.526|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:09:30.527|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 65|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:09:30.528|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 66|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:09:31.137|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 66|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:09:31.138|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 67|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:09:31.739|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 67|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:09:31.741|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 68|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:09:32.346|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 68|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/437' as ${url}
2023-09-01 09:09:32.347|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:09:32.956|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/product/437 HTTP/1.1
2023-09-01 09:09:33.732|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:09:33.733|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/product/437 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:09:33.739|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/437'
2023-09-01 09:09:33.739|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 70|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:09:34.347|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 70|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=324, Date=Fri, 01 Sep 2023 03:39:32 GMT, Content-Type=application/json}
contentLength=324
elapsedTime=777
body={"gkstatus": 0, "gkresult": {"discountpercent": "0.00", "discountamount": "0.00", "productcode": 437, "productdesc": "test94915", "gsflag": 7, "gscode": "", "prodsp": "0.00", "prodmrp": "0.00", "deletable": 0, "specs": {}, "categorycode": null, "uomid": 1, "unitname": "BAG", "openingstock": "0.00"}, "numberofgodowns": "0"}
2023-09-01 09:09:34.348|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 70|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=324, Date=Fri, 01 Sep 2023 03:39:32 GMT, Content-Type=application/json}
contentLength=324
elapsedTime=777
body={"gkstatus": 0, "gkresult": {"discountpercent": "0.00", "discountamount": "0.00", "productcode": 437, "productdesc": "test94915", "gsflag": 7, "gscode": "", "prodsp": "0.00", "prodmrp": "0.00", "deletable": 0, "specs": {}, "categorycode": null, "uomid": 1, "unitname": "BAG", "openingstock": "0.00"}, "numberofgodowns": "0"}
2023-09-01 09:09:34.349|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 71|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:09:34.958|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 71|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:09:34.959|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 72|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:09:35.564|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 72|base.save(var,value)      - [repeat-until] PASS stored '{"productcode":437,"categorycode":null,"deletable":0,"discountpercent":"0.00","uomid":1,"prodsp":"0.00","specs":{},"openingstock":"0.00","discountamount":"0.00","unitname":"BAG","prodmrp":"0.00","productdesc":"test94915","gsflag":7,"gscode":""}' as ${actualgkresult}
2023-09-01 09:09:35.565|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 73|base.save(var,value)      - executing save(var,value)(actualproductcode, [JSON(${response}.body) => extract(gkresult.productcode)])
2023-09-01 09:09:36.167|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 73|base.save(var,value)      - [repeat-until] PASS stored '437' as ${actualproductcode}
2023-09-01 09:09:36.168|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 74|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.productcode.txt)
2023-09-01 09:09:37.468|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:09:38.072|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:09:38.677|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:09:39.281|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - PASS 777 is less than or equal to 3000
2023-09-01 09:09:39.885|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:09:40.493|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:09:41.101|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:09:41.102|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Get.productcode.txt!=null)		=> MATCHED
2023-09-01 09:09:41.709|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:09:42.313|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:09:42.918|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:09:42.918|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 74|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:09:42.918|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 75|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:09:43.529|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 75|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:09:43.530|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 76|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:09:44.134|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 76|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:09:44.135|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 45|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:09:44.136|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 45|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:09:44.739|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 46|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:09:45.350|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 46|base.save(var,value)      - [repeat-until] PASS stored '19' as ${gsflag}
2023-09-01 09:09:45.351|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 47|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:09:45.952|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 47|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${godownflag1}
2023-09-01 09:09:45.954|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 48|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:09:46.556|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 48|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:09:46.558|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 49|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:09:47.164|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 49|base.verbose(text)        - 
19
2023-09-01 09:09:47.165|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 49|base.verbose(text)        - [repeat-until] PASS 19
2023-09-01 09:09:47.166|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 50|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:09:47.768|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 50|base.save(var,value)      - [repeat-until] PASS stored 'test52299' as ${randomUsername}
2023-09-01 09:09:47.769|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 51|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
  },
  "godownflag": ${godownflag2}
})
2023-09-01 09:09:48.374|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 51|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test52299",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:09:48.376|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:09:48.983|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:09:50.021|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:09:50.022|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:09:50.027|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 52|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:09:50.028|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 53|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:09:50.636|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 53|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:39:48 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1039
body={"gkstatus": 0, "gkresult": 438}
2023-09-01 09:09:50.637|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 53|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:39:48 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1039
body={"gkstatus": 0, "gkresult": 438}
2023-09-01 09:09:50.639|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 54|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:09:51.253|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 54|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:09:51.254|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 55|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:09:51.857|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 55|base.save(var,value)      - [repeat-until] PASS stored '438' as ${productcode}
2023-09-01 09:09:51.858|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 56|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:09:53.161|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:09:53.766|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:09:54.377|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:09:54.985|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1039 is less than or equal to 3000
2023-09-01 09:09:55.588|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:09:56.194|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:09:56.800|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:09:56.802|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:09:57.411|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:09:58.023|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:09:58.628|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:09:58.629|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 56|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:09:58.630|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 57|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:09:59.236|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 57|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:09:59.237|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 58|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:09:59.839|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 58|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:09:59.840|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 59|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:10:00.445|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 59|base.save(var,value)      - [repeat-until] PASS stored 'test79492' as ${randomUsername}
2023-09-01 09:10:00.446|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 60|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:10:01.053|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 60|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/438' as ${url}
2023-09-01 09:10:01.054|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 61|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
  },
  "godownflag": ${godownflag2}
})
2023-09-01 09:10:01.658|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 61|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test79492",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:10:01.658|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 09:10:02.263|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/product/438 HTTP/1.1
2023-09-01 09:10:03.289|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 09:10:03.291|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/product/438 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:10:03.297|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 62|ws.put(url,body,var)      - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/438'
2023-09-01 09:10:03.298|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 63|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:10:03.901|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 63|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:40:01 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1028
body={"gkstatus": 0}
2023-09-01 09:10:03.902|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 63|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:40:01 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1028
body={"gkstatus": 0}
2023-09-01 09:10:03.903|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 64|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:10:04.508|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 64|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:10:04.509|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 65|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:10:05.839|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:10:06.446|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:10:07.054|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:10:07.660|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1028 is less than or equal to 3000
2023-09-01 09:10:08.264|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:10:08.868|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:10:09.476|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:10:09.477|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:10:10.094|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:10:10.708|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:10:11.324|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:10:11.326|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 65|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:10:11.327|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 66|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:10:11.928|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 66|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:10:11.929|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 67|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:10:12.541|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 67|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:10:12.542|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 68|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:10:13.144|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 68|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/438' as ${url}
2023-09-01 09:10:13.145|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:10:13.762|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/product/438 HTTP/1.1
2023-09-01 09:10:14.532|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:10:14.533|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/product/438 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:10:14.537|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 69|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/438'
2023-09-01 09:10:14.538|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 70|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:10:15.146|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 70|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=195, Date=Fri, 01 Sep 2023 03:40:13 GMT, Content-Type=application/json}
contentLength=195
elapsedTime=771
body={"gkstatus": 0, "gkresult": {"discountpercent": "0.00", "discountamount": "0.00", "productcode": 438, "productdesc": "test79492", "gsflag": 19, "gscode": "", "prodsp": "0.00", "prodmrp": "0.00"}}
2023-09-01 09:10:15.147|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 70|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=195, Date=Fri, 01 Sep 2023 03:40:13 GMT, Content-Type=application/json}
contentLength=195
elapsedTime=771
body={"gkstatus": 0, "gkresult": {"discountpercent": "0.00", "discountamount": "0.00", "productcode": 438, "productdesc": "test79492", "gsflag": 19, "gscode": "", "prodsp": "0.00", "prodmrp": "0.00"}}
2023-09-01 09:10:15.148|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 71|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:10:15.751|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 71|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:10:15.752|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 72|base.save(var,value)      - executing save(var,value)(actualgkresult, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:10:16.362|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 72|base.save(var,value)      - [repeat-until] PASS stored '{"productcode":438,"discountamount":"0.00","prodmrp":"0.00","discountpercent":"0.00","prodsp":"0.00","productdesc":"test79492","gsflag":19,"gscode":""}' as ${actualgkresult}
2023-09-01 09:10:16.362|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 73|base.save(var,value)      - executing save(var,value)(actualproductcode, [JSON(${response}.body) => extract(gkresult.productcode)])
2023-09-01 09:10:16.966|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 73|base.save(var,value)      - [repeat-until] PASS stored '438' as ${actualproductcode}
2023-09-01 09:10:16.967|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 74|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.productcode.txt)
2023-09-01 09:10:18.289|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:10:18.893|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:10:19.498|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:10:20.106|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 12|number.assertLesserOrEqua - PASS 771 is less than or equal to 3000
2023-09-01 09:10:20.708|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:10:21.312|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:10:21.915|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:10:21.916|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Get.productcode.txt!=null)		=> MATCHED
2023-09-01 09:10:22.522|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:10:23.129|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:10:23.730|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:10:23.732|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 74|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:10:23.732|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 75|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:10:24.334|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 75|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:10:24.335|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 76|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:10:24.938|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 76|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:10:24.940|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 45|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:10:24.940|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 45|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:10:25.567|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 44|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:10:25.567|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 77|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:10:26.172|I|Thread-23|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:10:26.172|I|Thread-23|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:10:26.192|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false|# 77|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:10:26.197|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT|POST Req when godownflag is false - ending activity
2023-09-01 09:10:26.448|I|Thread-23|[GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|PUT] saving test scenario
2023-09-01 09:10:26.647|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE - executing test scenario
2023-09-01 09:10:26.647|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers - executing activity
2023-09-01 09:10:26.647|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 09:10:27.269|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 09:10:27.269|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 09:10:27.901|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 09:10:27.902|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:10:28.540|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers|#  7|base.save(var,value)      - PASS stored 'test24650' as ${randomUsername}
2023-09-01 09:10:28.540|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers|#  8|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:10:29.180|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers|#  8|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:10:29.181|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|Set headers - ending activity
2023-09-01 09:10:29.181|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product - executing activity
2023-09-01 09:10:29.182|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|#  9|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:10:29.815|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|#  9|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:10:29.816|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 10|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(23, -1)
2023-09-01 09:10:30.424|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:10:30.425|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:10:31.034|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:10:31.636|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 12|base.save(var,value)      - [repeat-until] PASS stored '7' as ${gsflag}
2023-09-01 09:10:31.637|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 13|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:10:32.240|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 13|base.save(var,value)      - [repeat-until] PASS stored 'true' as ${godownflag1}
2023-09-01 09:10:32.241|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:10:32.846|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 14|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:10:32.847|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 15|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:10:33.451|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 15|base.verbose(text)        - 
7
2023-09-01 09:10:33.452|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 15|base.verbose(text)        - [repeat-until] PASS 7
2023-09-01 09:10:33.453|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 16|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:10:34.055|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 16|base.save(var,value)      - [repeat-until] PASS stored 'test84901' as ${randomUsername}
2023-09-01 09:10:34.056|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 17|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godownflag1}
})
2023-09-01 09:10:34.660|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 17|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test84901",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": true
}' as ${body}
2023-09-01 09:10:34.661|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:10:35.273|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:10:36.482|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:10:36.483|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:10:36.488|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:10:36.488|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 19|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:10:37.101|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 19|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:40:35 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1210
body={"gkstatus": 0, "gkresult": 439}
2023-09-01 09:10:37.103|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 19|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:40:35 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1210
body={"gkstatus": 0, "gkresult": 439}
2023-09-01 09:10:37.104|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:10:37.721|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 20|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:10:37.721|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 21|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:10:38.324|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 21|base.save(var,value)      - [repeat-until] PASS stored '439' as ${productcode}
2023-09-01 09:10:38.324|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 22|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:10:39.631|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:10:40.246|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:10:40.853|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:10:41.466|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1210 is less than or equal to 3000
2023-09-01 09:10:42.074|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:10:42.679|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:10:43.291|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:10:43.292|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:10:43.899|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:10:44.504|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:10:45.112|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:10:45.113|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 22|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:10:45.114|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 23|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:10:45.715|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 23|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:10:45.716|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 24|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:10:46.331|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 24|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:10:46.332|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 25|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:10:46.934|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 25|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/439' as ${url}
2023-09-01 09:10:46.935|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 26|base.save(var,value)      - executing save(var,value)(body, {
  "productcode": ${productcode}
})
2023-09-01 09:10:47.547|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 26|base.save(var,value)      - [repeat-until] PASS stored '{
  "productcode": 439
}' as ${body}
2023-09-01 09:10:47.548|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, ${body}, response)
2023-09-01 09:10:48.154|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org/product/439 HTTP/1.1
2023-09-01 09:10:49.222|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 09:10:49.223|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org/product/439 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:10:49.228|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/439'
2023-09-01 09:10:49.229|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 28|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:10:49.830|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 28|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:40:47 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1070
body={"gkstatus": 0}
2023-09-01 09:10:49.831|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 28|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:40:47 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1070
body={"gkstatus": 0}
2023-09-01 09:10:49.832|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 29|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:10:50.440|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 29|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:10:50.441|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 30|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:10:51.801|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:10:52.408|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:10:53.012|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:10:53.618|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1070 is less than or equal to 3000
2023-09-01 09:10:54.229|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:10:54.832|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:10:55.438|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:10:55.439|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:10:56.050|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:10:56.653|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:10:57.256|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:10:57.257|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 30|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:10:57.258|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 31|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:10:57.859|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 31|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:10:57.860|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 32|base.assertArrayNotContai - executing assertArrayNotContain(array,unexpected)(${response}, ${productcode})
2023-09-01 09:10:58.476|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 32|base.assertArrayNotContai - [repeat-until] PASS empty array found
2023-09-01 09:10:58.477|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 33|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:10:59.086|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 33|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:10:59.086|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:10:59.087|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:10:59.690|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 12|base.save(var,value)      - executing save(var,value)(gsflag, $(array|item|${flag}|${counter}))
2023-09-01 09:11:00.292|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 12|base.save(var,value)      - [repeat-until] PASS stored '19' as ${gsflag}
2023-09-01 09:11:00.293|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 13|base.save(var,value)      - executing save(var,value)(godownflag1, $(array|item|${godown1}|${counter}))
2023-09-01 09:11:00.907|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 13|base.save(var,value)      - [repeat-until] PASS stored 'false' as ${godownflag1}
2023-09-01 09:11:00.909|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:11:01.521|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 14|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:11:01.523|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 15|base.verbose(text)        - executing verbose(text)(${gsflag})
2023-09-01 09:11:02.136|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 15|base.verbose(text)        - 
19
2023-09-01 09:11:02.137|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 15|base.verbose(text)        - [repeat-until] PASS 19
2023-09-01 09:11:02.138|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 16|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:11:02.741|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 16|base.save(var,value)      - [repeat-until] PASS stored 'test68255' as ${randomUsername}
2023-09-01 09:11:02.742|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 17|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${gsflag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godownflag1}
})
2023-09-01 09:11:03.344|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 17|base.save(var,value)      - [repeat-until] PASS stored '{
  "productdetails": {
    "productdesc": "test68255",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": false
}' as ${body}
2023-09-01 09:11:03.346|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:11:03.963|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:11:04.978|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:11:04.980|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:11:04.986|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 18|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:11:04.987|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 19|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:11:05.600|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 19|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:41:03 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1017
body={"gkstatus": 0, "gkresult": 440}
2023-09-01 09:11:05.601|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 19|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:41:03 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1017
body={"gkstatus": 0, "gkresult": 440}
2023-09-01 09:11:05.602|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:11:06.210|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 20|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:11:06.211|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 21|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:11:06.827|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 21|base.save(var,value)      - [repeat-until] PASS stored '440' as ${productcode}
2023-09-01 09:11:06.828|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 22|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.product.txt)
2023-09-01 09:11:08.137|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:11:08.741|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:11:09.353|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:11:09.965|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1017 is less than or equal to 3000
2023-09-01 09:11:10.572|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:11:11.176|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:11:11.784|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:11:11.785|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:11:12.396|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:11:13.012|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:11:13.617|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:11:13.618|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 22|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:11:13.618|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 23|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:11:14.226|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 23|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:11:14.227|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 24|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:11:14.829|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 24|ws.header(name,value)     - [repeat-until] PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:11:14.830|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 25|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product/${productcode})
2023-09-01 09:11:15.433|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 25|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/product/440' as ${url}
2023-09-01 09:11:15.434|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 26|base.save(var,value)      - executing save(var,value)(body, {
  "productcode": ${productcode}
})
2023-09-01 09:11:16.039|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 26|base.save(var,value)      - [repeat-until] PASS stored '{
  "productcode": 440
}' as ${body}
2023-09-01 09:11:16.040|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, ${body}, response)
2023-09-01 09:11:16.651|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org/product/440 HTTP/1.1
2023-09-01 09:11:17.681|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 09:11:17.682|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org/product/440 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:11:17.686|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 27|ws.delete(url,body,var)   - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product/440'
2023-09-01 09:11:17.686|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 28|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:11:18.298|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 28|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:41:16 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1031
body={"gkstatus": 0}
2023-09-01 09:11:18.298|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 28|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:41:16 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1031
body={"gkstatus": 0}
2023-09-01 09:11:18.299|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 29|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:11:18.904|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 29|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:11:18.905|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 30|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Put.post.productcode.txt)
2023-09-01 09:11:20.250|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:11:20.855|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:11:21.466|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:11:22.068|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1031 is less than or equal to 3000
2023-09-01 09:11:22.671|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:11:23.284|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:11:23.888|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:11:23.889|I|Thread-23|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Put.post.productcode.txt!=null)		=> MATCHED
2023-09-01 09:11:24.509|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:11:25.118|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:11:25.731|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:11:25.731|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 30|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:11:25.731|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 31|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:11:26.337|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 31|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:11:26.338|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 32|base.assertArrayNotContai - executing assertArrayNotContain(array,unexpected)(${response}, ${productcode})
2023-09-01 09:11:26.944|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 32|base.assertArrayNotContai - [repeat-until] PASS empty array found
2023-09-01 09:11:26.945|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 33|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:11:27.549|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 33|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:11:27.549|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 11|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:11:27.549|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:11:28.181|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 10|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:11:28.182|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 34|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:11:28.787|I|Thread-23|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:11:28.787|I|Thread-23|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:11:28.798|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product|# 34|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:11:28.800|I|Thread-23|GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE|POST-/product - ending activity
2023-09-01 09:11:28.919|I|Thread-23|[GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001|DELETE] saving test scenario
2023-09-01 09:11:29.072|I|Thread-23|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 399383 ms
» Test Steps:     457
» Error(s):       0



2023-09-01 09:11:29.510|I|Thread-23|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 401584 ms
» Iterations:     [1] total 1
» Test Steps:     457
» Passed:         455
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.009,Product.20230901_090447.001.xlsx



2023-09-01 09:11:29.510|I|Thread-23|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 09:11:30.387|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx] now completed
2023-09-01 09:11:30.387|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Reports.data.xlsx
2023-09-01 09:11:30.440|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 09:11:30.441|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx] new thread started
2023-09-01 09:11:30.445|I|Thread-26|missing REQUIRED configuration; sms DISABLED!
2023-09-01 09:11:30.445|I|Thread-26|On-Demand Inspection detection enabled
2023-09-01 09:11:30.446|I|Thread-26|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx with 1 iteration(s)
2023-09-01 09:11:30.446|I|Thread-26|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 09:11:30.447|I|Thread-26|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 09:11:30.598|I|Thread-26|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001.xlsx
2023-09-01 09:11:30.599|I|Thread-26|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Reports.data.xlsx
2023-09-01 09:11:30.658|I|Thread-26|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001.xlsx
2023-09-01 09:11:30.921|I|Thread-26|STARTS
2023-09-01 09:11:31.950|I|Thread-26|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 09:11:31.951|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx' from 'Test Plan' step 14
2023-09-01 09:11:31.951|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 09:11:31.953|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token - executing test scenario
2023-09-01 09:11:31.953|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token - executing activity
2023-09-01 09:11:31.953|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 09:11:33.308|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 09:11:33.921|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 09:11:34.529|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 09:11:35.154|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 09:11:35.764|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:11:36.373|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 09:11:37.537|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:11:37.538|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:11:37.559|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 09:11:38.172|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 09:11:38.807|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 09:11:38.819|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:11:38.820|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 09:11:39.448|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 09:11:39.449|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 09:11:40.761|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:11:41.379|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:11:41.984|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 09:11:42.615|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 09:11:43.229|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 09:11:43.846|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 09:11:44.461|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:11:45.068|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 09:11:46.050|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:11:46.051|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:11:46.068|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 09:11:46.673|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 09:11:47.307|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 09:11:47.323|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:11:47.323|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 09:11:47.963|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 09:11:47.964|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token|Login Token - ending activity
2023-09-01 09:11:48.293|I|Thread-26|[GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|Token] saving test scenario
2023-09-01 09:11:48.374|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET - executing test scenario
2023-09-01 09:11:48.374|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs - executing activity
2023-09-01 09:11:48.374|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  5|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:11:49.005|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  5|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:11:49.006|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser/orgs)
2023-09-01 09:11:49.630|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser/orgs' as ${url}
2023-09-01 09:11:49.631|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:11:50.246|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/gkuser/orgs HTTP/1.1
2023-09-01 09:11:51.027|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:11:51.028|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/gkuser/orgs HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:11:51.040|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser/orgs'
2023-09-01 09:11:51.040|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  8|base.save(var,value)      - executing save(var,value)(Yearend_Date, [JSON(${response}.body) => extract(gkresult.DailyMilk[0].yearend[0])])
2023-09-01 09:11:51.687|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  8|base.save(var,value)      - PASS stored '24-03-2024' as ${Yearend_Date}
2023-09-01 09:11:51.687|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  9|base.save(var,value)      - executing save(var,value)(Yearstart_Date, [JSON(${response}.body) => extract(gkresult.DailyMilk[0].yearstart[0])])
2023-09-01 09:11:52.317|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|#  9|base.save(var,value)      - PASS stored '24-04-2023' as ${Yearstart_Date}
2023-09-01 09:11:52.318|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|# 10|base.save(var,value)      - executing save(var,value)(EndDate, $(date|format|${Yearend_Date}|dd-MM-yyyy|yyyy-MM-dd))
2023-09-01 09:11:52.954|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|# 10|base.save(var,value)      - PASS stored '2024-03-24' as ${EndDate}
2023-09-01 09:11:52.955|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|# 11|base.save(var,value)      - executing save(var,value)(StartDate, $(date|format|${Yearstart_Date}|dd-MM-yyyy|yyyy-MM-dd))
2023-09-01 09:11:53.591|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|# 11|base.save(var,value)      - PASS stored '2023-04-24' as ${StartDate}
2023-09-01 09:11:53.592|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:11:54.230|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|# 12|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:11:54.230|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|# 13|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken)
2023-09-01 09:11:54.844|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:11:54.862|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs|# 13|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:11:54.863|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - gkUser/orgs - ending activity
2023-09-01 09:11:54.864|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts) - executing activity
2023-09-01 09:11:54.865|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 14|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:11:55.519|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 14|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:11:55.520|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 15|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 09:11:56.143|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 15|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 09:11:56.144|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 16|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:11:56.755|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 16|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 09:11:58.119|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 16|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:11:58.367|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 16|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:11:58.393|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 16|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 09:11:58.395|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 17|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:11:59.033|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 17|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:11:59.033|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 18|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:11:59.640|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 18|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=59073, Date=Fri, 01 Sep 2023 03:41:56 GMT, Content-Type=application/json}
contentLength=59073
elapsedTime=1613
body={"gkstatus": 0, "gkresult": [{"srno": 1, "accountcode": 5217, "accountname": "Accumulated Depreciation", "openingbal": "0.00", "groupcode": 5107, "groupname": "Fixed Assets", "subgroupcode": "", "subgroupname": "", "sysaccount": 0, "defaultflag": ""}, {"srno": 2, "accountcode": 8174, "accountname": "BCA Purchase", "openingbal": "0.00", "groupcode": 1653, "groupname": "Direct Expense", "subgroupcode": 1654, "subgroupname": "Purchase", "sysaccount": 1, "defaultflag": ""}, {"srno": 3, "accountco...
2023-09-01 09:11:59.643|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 18|base.verbose(text)        - PASS 
2023-09-01 09:11:59.644|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 19|base.save(var,value)      - executing save(var,value)(Account_code, [JSON(${response}.body) => extract(gkresult.accountcode[0])])
2023-09-01 09:12:00.293|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 19|base.save(var,value)      - PASS stored '5217' as ${Account_code}
2023-09-01 09:12:00.293|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 20|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:12:00.922|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 20|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:12:00.923|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 21|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 09:12:01.538|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:12:01.557|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts)|# 21|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:12:01.558|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - accounts (List of accounts) - ending activity
2023-09-01 09:12:01.558|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register - executing activity
2023-09-01 09:12:01.559|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 22|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/product-register?goid=${godown.id}&productcode=${productcode}&startdate=${startDate}&enddate=${endDate})
2023-09-01 09:12:02.186|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 22|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/product-register?goid=627&productcode=747&startdate=2022-04-01&enddate=2023-03-31' as ${url}
2023-09-01 09:12:02.186|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 23|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:12:02.788|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 23|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/product-register?goid=627&productcode=747&startdate=2022-04-01&enddate=2023-03-31 HTTP/1.1
2023-09-01 09:12:03.546|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 23|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:12:03.547|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 23|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/product-register?goid=627&productcode=747&startdate=2022-04-01&enddate=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:12:03.567|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 23|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/product-register?goid=627&productcode=747&startdate=2022-04-01&enddate=2023-03-31'
2023-09-01 09:12:03.567|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:12:04.202|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 24|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 09:12:04.203|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 25|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:12:05.506|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:12:06.124|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:12:06.734|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:12:07.360|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 12|number.assertLesserOrEqua - PASS 759 is less than or equal to 3000
2023-09-01 09:12:07.971|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:12:08.596|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:12:09.204|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:12:09.204|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:12:09.828|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:12:10.430|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:12:11.046|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:12:11.054|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 25|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:12:11.055|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:12:11.691|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 26|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:12:11.691|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 27|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:12:12.331|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register|# 27|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:12:12.332|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/product-register - ending activity
2023-09-01 09:12:12.332|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register - executing activity
2023-09-01 09:12:12.333|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 28|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 09:12:12.969|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 28|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:12:12.969|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 29|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:12:13.576|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 29|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/product-register?goid=627&productcode=747&startdate=2022-04-01&enddate=2023-03-31 HTTP/1.1
2023-09-01 09:12:14.328|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 29|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:12:14.329|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 29|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/product-register?goid=627&productcode=747&startdate=2022-04-01&enddate=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:12:14.365|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 29|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/product-register?goid=627&productcode=747&startdate=2022-04-01&enddate=2023-03-31'
2023-09-01 09:12:14.365|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 30|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:12:15.010|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 30|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:12:15.011|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 31|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\productRegister.positive.schema.txt)
2023-09-01 09:12:16.343|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:12:16.977|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:12:17.587|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:12:18.210|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 12|number.assertLesserOrEqua - PASS 753 is less than or equal to 3000
2023-09-01 09:12:18.817|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:12:19.433|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:12:20.041|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:12:20.042|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\productRegister.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:12:20.670|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:12:21.272|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:12:21.892|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:12:21.912|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 31|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:12:21.913|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:12:22.534|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 32|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:12:22.535|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 33|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkToken)
2023-09-01 09:12:23.137|I|Thread-26|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:12:23.156|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register|# 33|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:12:23.157|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/product-register - ending activity
2023-09-01 09:12:23.157|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers - executing activity
2023-09-01 09:12:23.157|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 34|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:12:23.816|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 34|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:12:23.816|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 35|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:12:24.469|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 35|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:12:24.470|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 36|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(7, -1)
2023-09-01 09:12:25.082|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 37|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:12:25.083|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 37|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:12:25.687|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/reports/registers?flag=$(array|item|${flag}|${counter})&calculatefrom=${calculateFrom}&calculateto=${calculateTo})
2023-09-01 09:12:26.293|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org//reports/registers?flag=0&calculatefrom=01-04-2022&calculateto=31-03-2023' as ${url}
2023-09-01 09:12:26.294|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:12:26.897|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//reports/registers?flag=0&calculatefrom=01-04-2022&calculateto=31-03-2023 HTTP/1.1
2023-09-01 09:12:27.669|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:12:27.670|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//reports/registers?flag=0&calculatefrom=01-04-2022&calculateto=31-03-2023 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:12:27.675|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org//reports/registers?flag=0&calculatefrom=01-04-2022&calculateto=31-03-2023'
2023-09-01 09:12:27.676|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 40|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:12:28.281|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 40|base.save(var,value)      - [repeat-until] PASS stored '2' as ${actualGkStatus}
2023-09-01 09:12:28.282|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 41|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:12:29.633|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:12:30.248|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:12:30.856|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:12:31.462|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 773 is less than or equal to 3000
2023-09-01 09:12:32.065|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:12:32.670|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:12:33.278|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:12:33.281|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:12:33.887|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:12:34.503|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:12:35.108|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:12:35.109|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 41|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:12:35.110|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 42|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:12:35.718|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 42|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:12:35.719|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 43|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:12:36.321|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 43|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:12:36.322|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 37|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:12:36.322|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 37|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:12:36.925|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/reports/registers?flag=$(array|item|${flag}|${counter})&calculatefrom=${calculateFrom}&calculateto=${calculateTo})
2023-09-01 09:12:37.537|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 38|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org//reports/registers?flag=1&calculatefrom=01-04-2022&calculateto=31-03-2023' as ${url}
2023-09-01 09:12:37.538|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:12:38.144|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//reports/registers?flag=1&calculatefrom=01-04-2022&calculateto=31-03-2023 HTTP/1.1
2023-09-01 09:12:38.997|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:12:38.998|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//reports/registers?flag=1&calculatefrom=01-04-2022&calculateto=31-03-2023 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:12:39.003|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 39|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org//reports/registers?flag=1&calculatefrom=01-04-2022&calculateto=31-03-2023'
2023-09-01 09:12:39.003|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 40|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:12:39.619|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 40|base.save(var,value)      - [repeat-until] PASS stored '2' as ${actualGkStatus}
2023-09-01 09:12:39.621|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 41|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:12:40.933|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:12:41.538|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:12:42.143|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:12:42.753|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 854 is less than or equal to 3000
2023-09-01 09:12:43.362|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:12:43.967|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:12:44.574|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:12:44.576|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:12:45.181|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:12:45.789|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:12:46.403|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:12:46.404|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 41|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:12:46.405|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 42|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:12:47.009|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 42|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:12:47.010|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 43|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:12:47.621|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 43|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:12:47.622|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 37|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:12:47.622|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 37|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:12:48.247|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 36|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:12:48.247|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 44|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:12:48.868|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers|# 44|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:12:48.869|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/registers - ending activity
2023-09-01 09:12:48.870|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers - executing activity
2023-09-01 09:12:48.870|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 45|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:12:49.510|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 45|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:12:49.511|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 46|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:12:50.144|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 46|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:12:50.145|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 47|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(8, -1)
2023-09-01 09:12:50.748|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 48|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:12:50.749|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 48|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:12:51.366|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 49|base.save(var,value)      - executing save(var,value)(currentFlag, $(array|item|${flag}|${counter}))
2023-09-01 09:12:51.971|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 49|base.save(var,value)      - [repeat-until] PASS stored '0' as ${currentFlag}
2023-09-01 09:12:51.972|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 50|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/reports/registers?flag=${currentFlag}&calculatefrom=${calculateFrom}&calculateto=${calculateTo})
2023-09-01 09:12:52.577|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 50|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org//reports/registers?flag=0&calculatefrom=01-04-2022&calculateto=31-03-2023' as ${url}
2023-09-01 09:12:52.578|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:12:53.183|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//reports/registers?flag=0&calculatefrom=01-04-2022&calculateto=31-03-2023 HTTP/1.1
2023-09-01 09:12:53.930|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:12:53.932|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//reports/registers?flag=0&calculatefrom=01-04-2022&calculateto=31-03-2023 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:12:53.936|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org//reports/registers?flag=0&calculatefrom=01-04-2022&calculateto=31-03-2023'
2023-09-01 09:12:53.937|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 52|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:12:54.545|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 52|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:12:54.546|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 53|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\registers.positive.schema.txt)
2023-09-01 09:12:55.870|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:12:56.481|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:12:57.086|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:12:57.690|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 749 is less than or equal to 3000
2023-09-01 09:12:58.300|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:12:58.902|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:12:59.510|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:12:59.511|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\registers.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:13:00.119|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:13:00.727|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:13:01.338|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:13:01.338|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 53|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:13:01.339|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 54|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:13:01.954|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 54|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:13:01.955|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 55|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:13:02.558|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 55|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:13:02.559|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 48|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:13:02.560|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 48|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:13:03.164|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 49|base.save(var,value)      - executing save(var,value)(currentFlag, $(array|item|${flag}|${counter}))
2023-09-01 09:13:03.776|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 49|base.save(var,value)      - [repeat-until] PASS stored '1' as ${currentFlag}
2023-09-01 09:13:03.777|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 50|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/reports/registers?flag=${currentFlag}&calculatefrom=${calculateFrom}&calculateto=${calculateTo})
2023-09-01 09:13:04.385|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 50|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org//reports/registers?flag=1&calculatefrom=01-04-2022&calculateto=31-03-2023' as ${url}
2023-09-01 09:13:04.386|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:13:04.993|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//reports/registers?flag=1&calculatefrom=01-04-2022&calculateto=31-03-2023 HTTP/1.1
2023-09-01 09:13:05.774|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:13:05.775|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//reports/registers?flag=1&calculatefrom=01-04-2022&calculateto=31-03-2023 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:13:05.780|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 51|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org//reports/registers?flag=1&calculatefrom=01-04-2022&calculateto=31-03-2023'
2023-09-01 09:13:05.780|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 52|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:13:06.392|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 52|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 09:13:06.393|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 53|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\registers.positive.schema.txt)
2023-09-01 09:13:07.746|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:13:08.348|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:13:08.949|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:13:09.552|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 783 is less than or equal to 3000
2023-09-01 09:13:10.157|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:13:10.770|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:13:11.381|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:13:11.382|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\registers.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:13:12.000|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:13:12.605|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:13:13.208|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:13:13.209|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 53|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:13:13.210|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 54|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:13:13.816|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 54|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:13:13.817|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 55|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:13:14.421|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 55|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 09:13:14.422|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 48|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 09:13:14.422|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 48|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${flag}))
2023-09-01 09:13:15.052|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 47|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:13:15.053|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 56|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:13:15.669|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:13:15.670|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:13:15.679|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers|# 56|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:13:15.680|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/registers - ending activity
2023-09-01 09:13:15.680|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss - executing activity
2023-09-01 09:13:15.681|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 57|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:13:16.313|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 57|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:13:16.314|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 58|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/profit-loss?calculatefrom=${startDate}&calculateto=${endDate})
2023-09-01 09:13:16.952|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 58|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/profit-loss?calculatefrom=2022-04-01&calculateto=2023-03-31' as ${url}
2023-09-01 09:13:16.953|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 59|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:13:17.567|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 59|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/profit-loss?calculatefrom=2022-04-01&calculateto=2023-03-31 HTTP/1.1
2023-09-01 09:13:18.345|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 59|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:13:18.346|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 59|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/profit-loss?calculatefrom=2022-04-01&calculateto=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:13:18.364|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 59|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/profit-loss?calculatefrom=2022-04-01&calculateto=2023-03-31'
2023-09-01 09:13:18.365|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 60|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:13:19.006|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 60|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 09:13:19.007|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 61|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:13:20.344|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:13:20.970|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:13:21.579|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:13:22.206|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 12|number.assertLesserOrEqua - PASS 780 is less than or equal to 3000
2023-09-01 09:13:22.819|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:13:23.444|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:13:24.046|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:13:24.047|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:13:24.676|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:13:25.290|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:13:25.901|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:13:25.911|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 61|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:13:25.912|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 62|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:13:26.553|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss|# 62|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:13:26.553|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/profit-loss - ending activity
2023-09-01 09:13:26.554|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss - executing activity
2023-09-01 09:13:26.554|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 63|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:13:27.205|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 63|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:13:27.206|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 64|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:13:27.836|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 64|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:13:27.837|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 65|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:13:28.450|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 65|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/profit-loss?calculatefrom=2022-04-01&calculateto=2023-03-31 HTTP/1.1
2023-09-01 09:13:29.726|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 65|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:13:29.728|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 65|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/profit-loss?calculatefrom=2022-04-01&calculateto=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:13:29.759|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 65|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/profit-loss?calculatefrom=2022-04-01&calculateto=2023-03-31'
2023-09-01 09:13:29.761|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 66|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:13:30.401|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 66|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:13:30.402|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 67|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\profit-loss.positive.schema.txt)
2023-09-01 09:13:31.733|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:13:32.361|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:13:32.974|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:13:33.596|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1279 is less than or equal to 3000
2023-09-01 09:13:34.208|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:13:34.847|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:13:35.457|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:13:35.458|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\profit-loss.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:13:36.085|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:13:36.698|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:13:37.305|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:13:37.313|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 67|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:13:37.313|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 68|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:13:37.953|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 68|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:13:37.953|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 69|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:13:38.561|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:13:38.563|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:13:38.580|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss|# 69|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:13:38.581|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/profit-loss - ending activity
2023-09-01 09:13:38.581|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet - executing activity
2023-09-01 09:13:38.582|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 70|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:13:39.199|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 70|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:13:39.200|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 71|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/balance-sheet?calculatefrom=${startDate}&calculateto=${endDate}&baltype=1)
2023-09-01 09:13:39.830|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 71|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/balance-sheet?calculatefrom=2022-04-01&calculateto=2023-03-31&baltype=1' as ${url}
2023-09-01 09:13:39.831|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 72|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:13:40.445|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 72|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/balance-sheet?calculatefrom=2022-04-01&calculateto=2023-03-31&baltype=1 HTTP/1.1
2023-09-01 09:13:41.193|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 72|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:13:41.195|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 72|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/balance-sheet?calculatefrom=2022-04-01&calculateto=2023-03-31&baltype=1 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:13:41.227|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 72|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/balance-sheet?calculatefrom=2022-04-01&calculateto=2023-03-31&baltype=1'
2023-09-01 09:13:41.227|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 73|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:13:41.873|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 73|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 09:13:41.874|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 74|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:13:43.183|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:13:43.804|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:13:44.413|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:13:45.029|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 12|number.assertLesserOrEqua - PASS 750 is less than or equal to 3000
2023-09-01 09:13:45.646|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:13:46.287|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:13:46.899|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:13:46.899|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:13:47.523|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:13:48.126|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:13:48.745|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:13:48.757|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 74|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:13:48.757|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 75|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:13:49.386|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 75|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:13:49.387|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 76|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken)
2023-09-01 09:13:50.001|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:13:50.021|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet|# 76|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:13:50.022|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/balance-sheet - ending activity
2023-09-01 09:13:50.022|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet - executing activity
2023-09-01 09:13:50.022|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 77|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:13:50.650|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 77|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:13:50.651|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 78|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:13:51.282|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 78|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:13:51.282|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 79|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/balance-sheet?calculatefrom=${StartDate}&calculateto=${EndDate}&baltype=1)
2023-09-01 09:13:51.909|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 79|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/balance-sheet?calculatefrom=2023-04-24&calculateto=2024-03-24&baltype=1' as ${url}
2023-09-01 09:13:51.909|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 80|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:13:52.516|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 80|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/balance-sheet?calculatefrom=2023-04-24&calculateto=2024-03-24&baltype=1 HTTP/1.1
2023-09-01 09:13:53.242|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 80|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:13:53.243|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 80|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/balance-sheet?calculatefrom=2023-04-24&calculateto=2024-03-24&baltype=1 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:13:53.262|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 80|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/balance-sheet?calculatefrom=2023-04-24&calculateto=2024-03-24&baltype=1'
2023-09-01 09:13:53.263|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 81|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:13:53.892|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 81|base.save(var,value)      - PASS stored '3' as ${actualGkStatus}
2023-09-01 09:13:53.893|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 82|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\balanceSheet.positive.schema.txt)
2023-09-01 09:13:55.227|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:13:55.859|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:13:56.466|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:13:57.092|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 12|number.assertLesserOrEqua - PASS 727 is less than or equal to 3000
2023-09-01 09:13:57.707|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:13:58.334|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:13:58.948|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:13:58.949|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\balanceSheet.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:13:59.575|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:14:00.188|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:14:00.810|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:14:00.838|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 82|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:14:00.839|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 83|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:14:01.457|I|Thread-26|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:14:01.482|E|Thread-26|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001.xlsx_GET_A83.log
2023-09-01 09:14:01.482|E|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 83|base.assertEqual(expected - FAIL 
expected=0
actual  =3
2023-09-01 09:14:01.482|E|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 83|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001.xlsx_GET_A83.log
2023-09-01 09:14:01.483|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 84|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:14:02.100|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:02.100|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:14:02.110|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet|# 84|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:14:02.111|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/balance-sheet - ending activity
2023-09-01 09:14:02.111|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross - executing activity
2023-09-01 09:14:02.112|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 85|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:14:02.747|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 85|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:02.748|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 86|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/trial-balance/gross?financialstart=${startDate}&calculateto=${endDate})
2023-09-01 09:14:03.372|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 86|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/trial-balance/gross?financialstart=2022-04-01&calculateto=2023-03-31' as ${url}
2023-09-01 09:14:03.373|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 87|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:14:03.982|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 87|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/trial-balance/gross?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1
2023-09-01 09:14:04.755|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 87|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:14:04.756|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 87|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/trial-balance/gross?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:14:04.783|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 87|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/trial-balance/gross?financialstart=2022-04-01&calculateto=2023-03-31'
2023-09-01 09:14:04.784|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 88|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:14:05.421|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 88|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 09:14:05.421|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 89|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:14:06.736|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:14:07.356|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:14:07.970|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:14:08.591|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 12|number.assertLesserOrEqua - PASS 775 is less than or equal to 3000
2023-09-01 09:14:09.207|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:14:09.836|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:14:10.450|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:14:10.451|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:14:11.074|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:14:11.675|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:14:12.292|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:14:12.304|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 89|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:14:12.304|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 90|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:14:12.933|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 90|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:14:12.934|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 91|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken)
2023-09-01 09:14:13.540|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:13.557|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross|# 91|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:14:13.558|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/gross - ending activity
2023-09-01 09:14:13.559|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross - executing activity
2023-09-01 09:14:13.559|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 92|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:14:14.195|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 92|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:14.197|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 93|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:14:14.828|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 93|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:14:14.829|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 94|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:14:15.433|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 94|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/trial-balance/gross?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1
2023-09-01 09:14:16.806|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 94|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:14:16.808|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 94|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/trial-balance/gross?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:14:16.834|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 94|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/trial-balance/gross?financialstart=2022-04-01&calculateto=2023-03-31'
2023-09-01 09:14:16.835|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 95|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:14:17.466|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 95|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:14:17.467|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 96|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\trialBalanceGross.positive.schema.txt)
2023-09-01 09:14:18.791|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:14:19.410|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:14:20.020|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:14:20.641|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1375 is less than or equal to 3000
2023-09-01 09:14:21.244|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:14:21.871|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:14:22.475|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:14:22.476|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\trialBalanceGross.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:14:23.088|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:14:23.696|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:14:24.314|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:14:24.336|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 96|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:14:24.337|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 97|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:14:24.975|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 97|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:14:24.976|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 98|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:14:25.580|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:25.580|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:14:25.600|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross|# 98|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:14:25.601|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/gross - ending activity
2023-09-01 09:14:25.601|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net - executing activity
2023-09-01 09:14:25.602|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|# 99|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:14:26.231|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|# 99|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:26.232|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#100|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/trial-balance/net?financialstart=${startDate}&calculateto=${endDate})
2023-09-01 09:14:26.865|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#100|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/trial-balance/net?financialstart=2022-04-01&calculateto=2023-03-31' as ${url}
2023-09-01 09:14:26.866|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#101|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:14:27.478|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#101|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/trial-balance/net?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1
2023-09-01 09:14:28.258|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#101|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:14:28.259|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#101|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/trial-balance/net?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:14:28.289|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#101|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/trial-balance/net?financialstart=2022-04-01&calculateto=2023-03-31'
2023-09-01 09:14:28.289|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#102|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:14:28.910|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#102|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 09:14:28.910|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#103|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:14:30.262|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:14:30.897|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:14:31.506|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:14:32.129|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 12|number.assertLesserOrEqua - PASS 782 is less than or equal to 3000
2023-09-01 09:14:32.737|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:14:33.353|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:14:33.962|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:14:33.964|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:14:34.581|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:14:35.191|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:14:35.807|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:14:35.818|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#103|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:14:35.819|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#104|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:14:36.443|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#104|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:14:36.444|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#105|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken)
2023-09-01 09:14:37.047|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:37.057|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net|#105|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:14:37.057|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/net - ending activity
2023-09-01 09:14:37.058|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net - executing activity
2023-09-01 09:14:37.058|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#106|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:14:37.691|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#106|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:37.692|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#107|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:14:38.318|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#107|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:14:38.319|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#108|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:14:38.930|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#108|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/trial-balance/net?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1
2023-09-01 09:14:40.119|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#108|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:14:40.121|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#108|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/trial-balance/net?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:14:40.141|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#108|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/trial-balance/net?financialstart=2022-04-01&calculateto=2023-03-31'
2023-09-01 09:14:40.142|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#109|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:14:40.773|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#109|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:14:40.774|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#110|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\trialBalanceNet.positive.schema.txt)
2023-09-01 09:14:42.116|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:14:42.743|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:14:43.354|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:14:43.988|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1191 is less than or equal to 3000
2023-09-01 09:14:44.595|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:14:45.210|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:14:45.823|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:14:45.824|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\trialBalanceNet.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:14:46.438|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:14:47.048|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:14:47.657|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:14:47.664|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#110|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:14:47.665|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#111|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:14:48.293|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#111|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:14:48.293|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#112|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:14:48.905|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:48.905|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:14:48.926|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net|#112|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:14:48.927|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/net - ending activity
2023-09-01 09:14:48.927|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended - executing activity
2023-09-01 09:14:48.928|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#113|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:14:49.560|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#113|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:14:49.560|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#114|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/trial-balance/extended?financialstart=${startDate}&calculateto=${endDate})
2023-09-01 09:14:50.196|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#114|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/trial-balance/extended?financialstart=2022-04-01&calculateto=2023-03-31' as ${url}
2023-09-01 09:14:50.197|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#115|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:14:50.802|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#115|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/trial-balance/extended?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1
2023-09-01 09:14:51.575|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#115|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:14:51.576|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#115|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/trial-balance/extended?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:14:51.599|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#115|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/trial-balance/extended?financialstart=2022-04-01&calculateto=2023-03-31'
2023-09-01 09:14:51.600|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#116|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:14:52.230|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#116|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 09:14:52.231|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#117|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:14:53.536|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:14:54.162|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:14:54.771|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:14:55.397|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 12|number.assertLesserOrEqua - PASS 775 is less than or equal to 3000
2023-09-01 09:14:56.003|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:14:56.627|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:14:57.242|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:14:57.243|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:14:57.870|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:14:58.482|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:14:59.102|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:14:59.116|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#117|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:14:59.116|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#118|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:14:59.756|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#118|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:14:59.757|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#119|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken)
2023-09-01 09:15:00.367|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:00.376|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended|#119|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:15:00.377|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/trial-balance/extended - ending activity
2023-09-01 09:15:00.377|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended - executing activity
2023-09-01 09:15:00.377|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#120|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:15:01.007|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#120|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:01.008|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#121|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:15:01.634|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#121|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:15:01.635|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#122|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:15:02.253|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#122|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/trial-balance/extended?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1
2023-09-01 09:15:03.430|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#122|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:15:03.431|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#122|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/trial-balance/extended?financialstart=2022-04-01&calculateto=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:15:03.450|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#122|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/trial-balance/extended?financialstart=2022-04-01&calculateto=2023-03-31'
2023-09-01 09:15:03.452|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#123|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:15:04.072|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#123|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:15:04.073|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#124|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\trialBalanceExtended.positive.schema.txt)
2023-09-01 09:15:05.418|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:15:06.048|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:15:06.650|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:15:07.264|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1180 is less than or equal to 3000
2023-09-01 09:15:07.875|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:15:08.493|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:15:09.103|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:15:09.104|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\trialBalanceExtended.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:15:09.720|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:15:10.331|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:15:10.954|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:15:10.965|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#124|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:15:10.965|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#125|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:15:11.591|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#125|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:15:11.592|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#126|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:15:12.202|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:12.203|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:15:12.223|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended|#126|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:15:12.224|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/trial-balance/extended - ending activity
2023-09-01 09:15:12.224|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger - executing activity
2023-09-01 09:15:12.225|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#127|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:15:12.862|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#127|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:12.862|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#128|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/ledger?accountcode=${accountCode}&projectcode=${projectCode}&financialstart=${startDate}&calculatefrom=${startDate}&calculateto=${endDate})
2023-09-01 09:15:13.482|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#128|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/ledger?accountcode=19593&projectcode=16&financialstart=2022-04-01&calculatefrom=2022-04-01&calculateto=2023-03-31' as ${url}
2023-09-01 09:15:13.482|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#129|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:15:14.097|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#129|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/ledger?accountcode=19593&projectcode=16&financialstart=2022-04-01&calculatefrom=2022-04-01&calculateto=2023-03-31 HTTP/1.1
2023-09-01 09:15:14.828|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#129|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:15:14.831|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#129|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/ledger?accountcode=19593&projectcode=16&financialstart=2022-04-01&calculatefrom=2022-04-01&calculateto=2023-03-31 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:15:14.849|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#129|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/ledger?accountcode=19593&projectcode=16&financialstart=2022-04-01&calculatefrom=2022-04-01&calculateto=2023-03-31'
2023-09-01 09:15:14.850|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#130|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:15:15.484|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#130|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 09:15:15.484|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#131|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:15:16.805|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:15:17.422|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:15:18.029|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:15:18.659|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 12|number.assertLesserOrEqua - PASS 734 is less than or equal to 3000
2023-09-01 09:15:19.270|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:15:19.897|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:15:20.500|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:15:20.501|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:15:21.133|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:15:21.736|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:15:22.356|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:15:22.365|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#131|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:15:22.366|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#132|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:15:22.995|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#132|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:15:22.996|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#133|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken)
2023-09-01 09:15:23.603|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:23.621|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger|#133|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:15:23.621|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger - ending activity
2023-09-01 09:15:23.622|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger - executing activity
2023-09-01 09:15:23.622|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#134|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:15:24.252|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#134|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:24.254|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#135|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:15:24.891|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#135|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:15:24.891|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#136|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/ledger?accountcode=${Account_code}&projectcode=&financialstart=${StartDate}&calculatefrom=${StartDate}&calculateto=${EndDate})
2023-09-01 09:15:25.522|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#136|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/ledger?accountcode=5217&projectcode=&financialstart=2023-04-24&calculatefrom=2023-04-24&calculateto=2024-03-24' as ${url}
2023-09-01 09:15:25.523|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#137|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:15:26.134|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#137|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/ledger?accountcode=5217&projectcode=&financialstart=2023-04-24&calculatefrom=2023-04-24&calculateto=2024-03-24 HTTP/1.1
2023-09-01 09:15:26.885|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#137|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:15:26.886|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#137|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/ledger?accountcode=5217&projectcode=&financialstart=2023-04-24&calculatefrom=2023-04-24&calculateto=2024-03-24 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:15:26.911|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#137|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/ledger?accountcode=5217&projectcode=&financialstart=2023-04-24&calculatefrom=2023-04-24&calculateto=2024-03-24'
2023-09-01 09:15:26.912|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#138|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:15:27.551|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#138|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:15:27.553|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#139|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\ledger.positive.schema.txt)
2023-09-01 09:15:28.875|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:15:29.492|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:15:30.102|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:15:30.720|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 12|number.assertLesserOrEqua - PASS 753 is less than or equal to 3000
2023-09-01 09:15:31.325|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:15:31.948|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:15:32.557|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:15:32.558|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\ledger.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:15:33.189|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:15:33.795|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:15:34.413|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:15:34.424|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#139|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:15:34.425|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#140|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:15:35.041|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#140|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:15:35.042|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#141|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:15:35.646|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:35.648|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:15:35.658|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger|#141|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:15:35.658|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger - ending activity
2023-09-01 09:15:35.659|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly - executing activity
2023-09-01 09:15:35.659|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#142|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:15:36.310|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#142|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:36.311|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#143|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/ledger/monthly?accountcode=${Account_code})
2023-09-01 09:15:36.944|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#143|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/ledger/monthly?accountcode=5217' as ${url}
2023-09-01 09:15:36.945|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#144|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:15:37.555|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#144|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/ledger/monthly?accountcode=5217 HTTP/1.1
2023-09-01 09:15:38.325|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#144|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:15:38.326|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#144|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/ledger/monthly?accountcode=5217 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:15:38.350|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#144|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/ledger/monthly?accountcode=5217'
2023-09-01 09:15:38.350|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#145|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:15:38.976|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#145|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 09:15:38.977|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#146|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:15:40.317|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:15:40.945|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:15:41.549|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:15:42.174|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 12|number.assertLesserOrEqua - PASS 771 is less than or equal to 3000
2023-09-01 09:15:42.789|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:15:43.416|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:15:44.018|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:15:44.019|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:15:44.639|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:15:45.241|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:15:45.864|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:15:45.885|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#146|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:15:45.887|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#147|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:15:46.537|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#147|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:15:46.538|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#148|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken)
2023-09-01 09:15:47.150|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:47.171|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly|#148|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:15:47.172|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/monthly - ending activity
2023-09-01 09:15:47.172|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly - executing activity
2023-09-01 09:15:47.174|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#149|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:15:47.829|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#149|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:47.830|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#150|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:15:48.466|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#150|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:15:48.467|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#151|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/ledger/monthly?accountcode=${Account_code})
2023-09-01 09:15:49.108|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#151|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/ledger/monthly?accountcode=5217' as ${url}
2023-09-01 09:15:49.109|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#152|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:15:49.715|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#152|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/ledger/monthly?accountcode=5217 HTTP/1.1
2023-09-01 09:15:50.486|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#152|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:15:50.487|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#152|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/ledger/monthly?accountcode=5217 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:15:50.523|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#152|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/ledger/monthly?accountcode=5217'
2023-09-01 09:15:50.523|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#153|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:15:51.164|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#153|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:15:51.165|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#154|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\ledgerMonthly.positive.schema.txt)
2023-09-01 09:15:52.522|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:15:53.150|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:15:53.763|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:15:54.388|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 12|number.assertLesserOrEqua - PASS 772 is less than or equal to 3000
2023-09-01 09:15:54.990|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:15:55.616|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:15:56.217|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:15:56.218|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\ledgerMonthly.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:15:56.848|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:15:57.456|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:15:58.079|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:15:58.099|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#154|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:15:58.100|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#155|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:15:58.732|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#155|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:15:58.733|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#156|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:15:59.340|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:15:59.341|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:15:59.359|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly|#156|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:15:59.360|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/monthly - ending activity
2023-09-01 09:15:59.360|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr - executing activity
2023-09-01 09:15:59.361|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#157|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:16:00.000|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#157|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:16:00.001|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#158|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 09:16:00.655|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#158|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 09:16:00.656|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#159|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(8, -1)
2023-09-01 09:16:01.266|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#160|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 09:16:01.266|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#160|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${side}))
2023-09-01 09:16:01.868|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#161|base.save(var,value)      - executing save(var,value)(side, $(array|item|${side}|${counter}))
2023-09-01 09:16:02.476|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#161|base.save(var,value)      - [repeat-until] PASS stored 'cr' as ${side}
2023-09-01 09:16:02.477|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#162|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/ledger/crdr?accountcode=${accountCode}&projectcode=${projectCode}&financialstart=${startDate}&calculatefrom=${startDate}&calculateto=${endDate}&side=${side})
2023-09-01 09:16:03.083|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#162|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/reports/ledger/crdr?accountcode=19593&projectcode=16&financialstart=2022-04-01&calculatefrom=2022-04-01&calculateto=2023-03-31&side=cr' as ${url}
2023-09-01 09:16:03.084|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#163|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:16:03.691|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#163|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/ledger/crdr?accountcode=19593&projectcode=16&financialstart=2022-04-01&calculatefrom=2022-04-01&calculateto=2023-03-31&side=cr HTTP/1.1
2023-09-01 09:16:04.477|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#163|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:16:04.478|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#163|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/ledger/crdr?accountcode=19593&projectcode=16&financialstart=2022-04-01&calculatefrom=2022-04-01&calculateto=2023-03-31&side=cr HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:16:04.483|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#163|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/ledger/crdr?accountcode=19593&projectcode=16&financialstart=2022-04-01&calculatefrom=2022-04-01&calculateto=2023-03-31&side=cr'
2023-09-01 09:16:04.484|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#164|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:16:05.088|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#164|base.save(var,value)      - [repeat-until] PASS stored '2' as ${actualGkStatus}
2023-09-01 09:16:05.089|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#165|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 09:16:06.420|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:16:07.023|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:16:07.627|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:16:08.231|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 12|number.assertLesserOrEqua - PASS 787 is less than or equal to 3000
2023-09-01 09:16:08.844|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:16:09.451|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:16:10.058|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:16:10.059|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 09:16:10.665|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:16:11.271|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:16:11.883|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:16:11.883|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#165|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 09:16:11.885|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#166|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 09:16:12.488|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#166|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 09:16:12.489|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#167|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 09:16:13.092|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#167|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 09:16:13.093|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#160|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 09:16:13.093|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#160|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${side}))
2023-09-01 09:16:13.749|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#159|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 09:16:13.750|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#168|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken)
2023-09-01 09:16:14.363|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:16:14.374|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr|#168|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:16:14.375|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Negative - /reports/ledger/crdr - ending activity
2023-09-01 09:16:14.375|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr - executing activity
2023-09-01 09:16:14.375|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#169|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:16:15.013|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#169|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:16:15.013|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#170|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:16:15.667|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#170|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:16:15.668|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#171|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}reports/ledger/crdr?accountcode=${Account_code}&projectcode=&financialstart=${StartDate}&calculatefrom=${StartDate}&calculateto=${EndDate}&side=${side})
2023-09-01 09:16:16.312|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#171|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/reports/ledger/crdr?accountcode=5217&projectcode=&financialstart=2023-04-24&calculatefrom=2023-04-24&calculateto=2024-03-24&side=cr' as ${url}
2023-09-01 09:16:16.312|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#172|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:16:16.921|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#172|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/reports/ledger/crdr?accountcode=5217&projectcode=&financialstart=2023-04-24&calculatefrom=2023-04-24&calculateto=2024-03-24&side=cr HTTP/1.1
2023-09-01 09:16:17.697|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#172|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:16:17.698|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#172|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/reports/ledger/crdr?accountcode=5217&projectcode=&financialstart=2023-04-24&calculatefrom=2023-04-24&calculateto=2024-03-24&side=cr HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:16:17.742|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#172|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/reports/ledger/crdr?accountcode=5217&projectcode=&financialstart=2023-04-24&calculatefrom=2023-04-24&calculateto=2024-03-24&side=cr'
2023-09-01 09:16:17.742|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#173|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:16:18.374|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#173|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:16:18.375|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#174|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\ledgerCrDr.positive.schema.txt)
2023-09-01 09:16:19.701|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:16:20.319|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:16:20.923|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:16:21.547|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 12|number.assertLesserOrEqua - PASS 778 is less than or equal to 3000
2023-09-01 09:16:22.150|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:16:22.774|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:16:23.377|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:16:23.378|I|Thread-26|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Reports\ledgerCrDr.positive.schema.txt!=null)		=> MATCHED
2023-09-01 09:16:23.993|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:16:24.603|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:16:25.224|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:16:25.234|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#174|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:16:25.234|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#175|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:16:25.871|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#175|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:16:25.871|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#176|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:16:26.487|I|Thread-26|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:16:26.487|I|Thread-26|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:16:26.507|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr|#176|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:16:26.508|I|Thread-26|GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET|Positive - /reports/ledger/crdr - ending activity
2023-09-01 09:16:32.095|I|Thread-26|[GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001|GET] saving test scenario
2023-09-01 09:16:32.294|I|Thread-26|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 300340 ms
» Test Steps:     310
» Error(s):       1



2023-09-01 09:16:32.855|I|Thread-26|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 302399 ms
» Iterations:     [1] total 1
» Test Steps:     310
» Passed:         309
» Error(s):       1
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.010,Reports.20230901_091130.001.xlsx



2023-09-01 09:16:32.855|I|Thread-26|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 09:16:33.129|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx] now completed
2023-09-01 09:16:33.130|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Tax.data.xlsx
2023-09-01 09:16:33.173|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx] resolve RUN ID as 20230901_084512
2023-09-01 09:16:33.173|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx] new thread started
2023-09-01 09:16:33.179|I|Thread-29|missing REQUIRED configuration; sms DISABLED!
2023-09-01 09:16:33.179|I|Thread-29|On-Demand Inspection detection enabled
2023-09-01 09:16:33.180|I|Thread-29|[20230901_084512] executing C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx with 1 iteration(s)
2023-09-01 09:16:33.181|I|Thread-29|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\captures
2023-09-01 09:16:33.181|I|Thread-29|[20230901_084512] create directory C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs
2023-09-01 09:16:33.332|I|Thread-29|[20230901_084512] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001.xlsx
2023-09-01 09:16:33.332|I|Thread-29|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Tax.data.xlsx
2023-09-01 09:16:33.388|I|Thread-29|[20230901_084512] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001.xlsx
2023-09-01 09:16:33.700|I|Thread-29|STARTS
2023-09-01 09:16:34.714|I|Thread-29|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 09:16:34.716|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx' from 'Test Plan' step 15
2023-09-01 09:16:34.716|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 09:16:34.717|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token - executing test scenario
2023-09-01 09:16:34.718|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token - executing activity
2023-09-01 09:16:34.718|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 09:16:36.039|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 09:16:36.650|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 09:16:37.261|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 09:16:37.876|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 09:16:38.477|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:16:39.082|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 09:16:40.149|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:16:40.150|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:16:40.175|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 09:16:40.788|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 09:16:41.414|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 09:16:41.423|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:16:41.424|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  6|base.verbose(text)        - executing verbose(text)(${login.username})
2023-09-01 09:16:42.031|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  6|base.verbose(text)        - crypto found; no data variable expansion
2023-09-01 09:16:42.032|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  6|base.verbose(text)        - 
crypt:dacd43c2b9cf60c110f805296e291872c5065714697dec05
2023-09-01 09:16:42.034|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  6|base.verbose(text)        - PASS 
2023-09-01 09:16:42.034|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  7|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 09:16:42.695|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  7|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 09:16:42.695|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  8|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 09:16:43.303|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  8|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:16:43.305|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  8|base.verbose(text)        - PASS 
2023-09-01 09:16:43.305|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  9|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 09:16:44.608|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 09:16:45.238|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:16:45.847|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 09:16:46.469|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 09:16:47.074|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 09:16:47.685|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 09:16:48.294|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:16:48.900|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 09:16:49.913|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:16:49.914|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:16:49.928|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 09:16:50.532|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 09:16:51.152|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 09:16:51.178|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|#  9|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:16:51.178|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|# 10|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 09:16:51.807|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|# 10|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 09:16:51.808|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|# 11|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 09:16:52.413|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|# 11|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:16:52.415|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token|# 11|base.verbose(text)        - PASS 
2023-09-01 09:16:52.415|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token|Login Token - ending activity
2023-09-01 09:16:52.801|I|Thread-29|[GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|Token] saving test scenario
2023-09-01 09:16:52.919|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST - executing test scenario
2023-09-01 09:16:52.919|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Set headers - executing activity
2023-09-01 09:16:52.919|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:16:53.562|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:16:53.562|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Set headers - ending activity
2023-09-01 09:16:53.563|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product - executing activity
2023-09-01 09:16:53.563|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:16:54.175|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:16:54.175|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:16:54.802|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  7|base.save(var,value)      - PASS stored 'test56395' as ${randomUsername}
2023-09-01 09:16:54.803|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  8|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${flag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godown1}
})
2023-09-01 09:16:55.462|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  8|base.save(var,value)      - PASS stored '{
  "productdetails": {
    "productdesc": "test56395",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": true
}' as ${body}
2023-09-01 09:16:55.462|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:16:56.076|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:16:57.132|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:16:57.132|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:16:57.161|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:16:57.162|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 10|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:16:57.764|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 10|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:46:55 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1057
body={"gkstatus": 0, "gkresult": 441}
2023-09-01 09:16:57.766|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 10|base.verbose(text)        - PASS 
2023-09-01 09:16:57.767|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:16:58.408|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:16:58.408|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 12|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:16:59.038|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 12|base.save(var,value)      - PASS stored '441' as ${productcode}
2023-09-01 09:16:59.038|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 13|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${productschema.path}\Post.product.txt)
2023-09-01 09:17:00.335|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:17:00.954|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:17:01.563|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:17:02.179|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1057 is less than or equal to 3000
2023-09-01 09:17:02.785|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:17:03.416|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:17:04.031|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:17:04.033|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:17:04.652|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:17:05.260|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:17:05.878|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:17:05.889|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 13|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:17:05.889|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 14|base.save(var,value)      - executing save(var,value)(date, $(sysdate|now|yyyy-MM-dd))
2023-09-01 09:17:06.594|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product|# 14|base.save(var,value)      - PASS stored '2023-09-01' as ${date}
2023-09-01 09:17:06.594|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create product: POST-/product - ending activity
2023-09-01 09:17:06.595|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax - executing activity
2023-09-01 09:17:06.595|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 15|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax)
2023-09-01 09:17:07.220|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 15|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax' as ${url}
2023-09-01 09:17:07.221|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 16|base.save(var,value)      - executing save(var,value)(body, {
  "taxname": "${taxname}",
  "taxrate": ${taxrate},
  "productcode": ${productcode},  
  "taxfromdate": "${date}",
  "state": "Karnataka"
  
})
2023-09-01 09:17:07.853|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 16|base.save(var,value)      - PASS stored '{
  "taxname": "IGST",
  "taxrate": 4,
  "productcode": 441,  
  "taxfromdate": "2023-09-01",
  "state": "Karnataka"
  
}' as ${body}
2023-09-01 09:17:07.854|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:17:08.467|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/tax HTTP/1.1
2023-09-01 09:17:09.449|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:17:09.450|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/tax HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:17:09.487|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax'
2023-09-01 09:17:09.488|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 18|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:17:10.096|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 18|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:47:07 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=984
body={"gkstatus": 0}
2023-09-01 09:17:10.099|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 18|base.verbose(text)        - PASS 
2023-09-01 09:17:10.099|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 19|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:17:10.739|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 19|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:17:10.739|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 20|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.tax.txt)
2023-09-01 09:17:12.083|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:17:12.708|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:17:13.320|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:17:13.946|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 12|number.assertLesserOrEqua - PASS 984 is less than or equal to 3000
2023-09-01 09:17:14.557|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:17:15.182|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:17:15.784|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:17:15.786|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Tax\Post.tax.txt!=null)		=> MATCHED
2023-09-01 09:17:16.417|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:17:17.033|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:17:17.649|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:17:17.666|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 20|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:17:17.666|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 21|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:17:18.286|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax|# 21|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:17:18.286|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for product: POST- /tax - ending activity
2023-09-01 09:17:18.288|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product - executing activity
2023-09-01 09:17:18.288|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 22|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:17:18.909|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 22|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:17:18.909|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 23|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:17:19.549|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 23|base.save(var,value)      - PASS stored 'test69071' as ${randomUsername}
2023-09-01 09:17:19.550|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 24|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${flag1},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godown1}
})
2023-09-01 09:17:20.179|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 24|base.save(var,value)      - PASS stored '{
  "productdetails": {
    "productdesc": "test69071",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": true
}' as ${body}
2023-09-01 09:17:20.180|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 25|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:17:20.786|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 25|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:17:21.798|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 25|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:17:21.799|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 25|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:17:21.821|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 25|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:17:21.823|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 26|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:17:22.431|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 26|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:47:20 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1014
body={"gkstatus": 0, "gkresult": 442}
2023-09-01 09:17:22.433|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 26|base.verbose(text)        - PASS 
2023-09-01 09:17:22.434|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 27|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:17:23.074|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 27|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:17:23.075|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 28|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:17:23.704|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 28|base.save(var,value)      - PASS stored '442' as ${productcode}
2023-09-01 09:17:23.704|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 29|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${productschema.path}\Post.product.txt)
2023-09-01 09:17:25.025|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:17:25.640|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:17:26.253|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:17:26.873|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1014 is less than or equal to 3000
2023-09-01 09:17:27.488|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:17:28.117|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:17:28.730|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:17:28.731|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:17:29.348|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:17:29.959|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:17:30.569|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:17:30.587|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 29|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:17:30.587|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 30|base.save(var,value)      - executing save(var,value)(date, $(sysdate|now|yyyy-MM-dd))
2023-09-01 09:17:31.205|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product|# 30|base.save(var,value)      - PASS stored '2023-09-01' as ${date}
2023-09-01 09:17:31.205|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create Service: POST-/product - ending activity
2023-09-01 09:17:31.206|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax - executing activity
2023-09-01 09:17:31.206|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 31|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax)
2023-09-01 09:17:31.819|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 31|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax' as ${url}
2023-09-01 09:17:31.820|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 32|base.save(var,value)      - executing save(var,value)(body, {
  "taxname": "${taxname}",
  "taxrate": ${taxrate},
  "productcode": ${productcode},  
  "taxfromdate": "${date}",
  "state": "Karnataka"
  
})
2023-09-01 09:17:32.444|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 32|base.save(var,value)      - PASS stored '{
  "taxname": "IGST",
  "taxrate": 4,
  "productcode": 442,  
  "taxfromdate": "2023-09-01",
  "state": "Karnataka"
  
}' as ${body}
2023-09-01 09:17:32.445|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 33|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:17:33.055|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 33|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/tax HTTP/1.1
2023-09-01 09:17:34.122|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 33|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:17:34.123|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 33|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/tax HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:17:34.152|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 33|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax'
2023-09-01 09:17:34.152|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 34|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:17:34.764|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 34|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:47:32 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1069
body={"gkstatus": 0}
2023-09-01 09:17:34.766|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 34|base.verbose(text)        - PASS 
2023-09-01 09:17:34.767|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 35|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:17:35.403|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 35|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:17:35.403|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 36|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.tax.txt)
2023-09-01 09:17:36.723|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:17:37.342|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:17:37.947|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:17:38.566|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1069 is less than or equal to 3000
2023-09-01 09:17:39.173|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:17:39.786|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:17:40.393|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:17:40.395|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Tax\Post.tax.txt!=null)		=> MATCHED
2023-09-01 09:17:41.003|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:17:41.606|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:17:42.219|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:17:42.237|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 36|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:17:42.238|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 37|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:17:42.873|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 37|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:17:42.874|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 38|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:17:43.482|I|Thread-29|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 09:17:43.482|I|Thread-29|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:17:43.494|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax|# 38|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:17:43.494|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST|Create tax for service: POST- /tax - ending activity
2023-09-01 09:17:44.275|I|Thread-29|[GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|POST] saving test scenario
2023-09-01 09:17:44.433|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET - executing test scenario
2023-09-01 09:17:44.433|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Set headers - executing activity
2023-09-01 09:17:44.433|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:17:45.060|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:17:45.060|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Set headers - ending activity
2023-09-01 09:17:45.061|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product - executing activity
2023-09-01 09:17:45.061|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:17:45.672|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:17:45.673|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:17:46.299|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  7|base.save(var,value)      - PASS stored 'test99281' as ${randomUsername}
2023-09-01 09:17:46.300|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  8|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${flag},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godown1}
})
2023-09-01 09:17:46.922|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  8|base.save(var,value)      - PASS stored '{
  "productdetails": {
    "productdesc": "test99281",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 7,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": true
}' as ${body}
2023-09-01 09:17:46.924|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:17:47.528|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:17:48.596|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:17:48.597|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:17:48.624|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:17:48.625|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 10|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:17:49.234|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 10|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=32, Date=Fri, 01 Sep 2023 03:47:47 GMT, Content-Type=application/json}
contentLength=32
elapsedTime=1069
body={"gkstatus": 0, "gkresult": 443}
2023-09-01 09:17:49.237|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 10|base.verbose(text)        - PASS 
2023-09-01 09:17:49.237|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:17:49.854|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:17:49.855|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 12|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:17:50.486|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 12|base.save(var,value)      - PASS stored '443' as ${productcode}
2023-09-01 09:17:50.487|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 13|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${productschema.path}\Post.product.txt)
2023-09-01 09:17:51.844|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:17:52.484|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:17:53.086|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:17:53.700|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1069 is less than or equal to 3000
2023-09-01 09:17:54.309|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:17:54.922|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:17:55.528|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:17:55.529|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:17:56.148|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:17:56.750|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:17:57.370|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:17:57.388|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 13|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:17:57.388|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 14|base.save(var,value)      - executing save(var,value)(date, $(sysdate|now|yyyy-MM-dd))
2023-09-01 09:17:58.013|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product|# 14|base.save(var,value)      - PASS stored '2023-09-01' as ${date}
2023-09-01 09:17:58.014|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a product: POST- /product - ending activity
2023-09-01 09:17:58.015|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax - executing activity
2023-09-01 09:17:58.015|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 15|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax)
2023-09-01 09:17:58.642|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 15|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax' as ${url}
2023-09-01 09:17:58.643|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 16|base.save(var,value)      - executing save(var,value)(body, {
  "taxname": "${taxname}",
  "taxrate": ${taxrate},
  "productcode": ${productcode},  
  "taxfromdate": "${date}",
  "state": "Karnataka"
  
})
2023-09-01 09:17:59.275|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 16|base.save(var,value)      - PASS stored '{
  "taxname": "IGST",
  "taxrate": 4,
  "productcode": 443,  
  "taxfromdate": "2023-09-01",
  "state": "Karnataka"
  
}' as ${body}
2023-09-01 09:17:59.276|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:17:59.880|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/tax HTTP/1.1
2023-09-01 09:18:00.901|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:18:00.902|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/tax HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:18:00.927|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 17|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax'
2023-09-01 09:18:00.929|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 18|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:18:01.539|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 18|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:47:59 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1023
body={"gkstatus": 0}
2023-09-01 09:18:01.541|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 18|base.verbose(text)        - PASS 
2023-09-01 09:18:01.542|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 19|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:18:02.164|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 19|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:18:02.165|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 20|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.tax.txt)
2023-09-01 09:18:03.467|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:18:04.083|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:18:04.692|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:18:05.317|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1023 is less than or equal to 3000
2023-09-01 09:18:05.933|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:18:06.550|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:18:07.165|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:18:07.166|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Tax\Post.tax.txt!=null)		=> MATCHED
2023-09-01 09:18:07.780|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:18:08.393|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:18:09.018|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:18:09.032|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 20|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:18:09.032|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 21|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:18:09.660|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax|# 21|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:18:09.661|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for product: POST- /tax - ending activity
2023-09-01 09:18:09.662|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} - executing activity
2023-09-01 09:18:09.662|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 22|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax/search/${pscflag}?productcode=${productcode})
2023-09-01 09:18:10.288|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 22|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax/search/p?productcode=443' as ${url}
2023-09-01 09:18:10.288|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 23|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:18:10.892|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 23|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/tax/search/p?productcode=443 HTTP/1.1
2023-09-01 09:18:11.667|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 23|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:18:11.668|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 23|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/tax/search/p?productcode=443 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:18:11.697|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 23|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax/search/p?productcode=443'
2023-09-01 09:18:11.698|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 24|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:18:12.303|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 24|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=134, Date=Fri, 01 Sep 2023 03:48:10 GMT, Content-Type=application/json}
contentLength=134
elapsedTime=777
body={"gkstatus": 0, "gkresult": [{"taxid": 112, "taxname": "IGST", "taxrate": "4.00", "state": "Karnataka", "taxfromdate": "2023-09-01"}]}
2023-09-01 09:18:12.305|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 24|base.verbose(text)        - PASS 
2023-09-01 09:18:12.306|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 25|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:18:12.938|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 25|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:18:12.938|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetSearchPSCflag.tax.txt)
2023-09-01 09:18:14.242|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:18:14.866|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:18:15.481|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:18:16.104|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 777 is less than or equal to 3000
2023-09-01 09:18:16.712|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:18:17.330|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:18:17.937|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:18:17.939|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Tax\GetSearchPSCflag.tax.txt!=null)		=> MATCHED
2023-09-01 09:18:18.571|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:18:19.179|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:18:19.793|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:18:19.811|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 26|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:18:19.812|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:18:20.440|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag}|# 27|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:18:20.440|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get tax for product: GET- /tax/search/{pscflag} - ending activity
2023-09-01 09:18:20.441|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product - executing activity
2023-09-01 09:18:20.441|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 28|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}product)
2023-09-01 09:18:21.066|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 28|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/product' as ${url}
2023-09-01 09:18:21.067|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 29|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 09:18:21.699|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 29|base.save(var,value)      - PASS stored 'test52744' as ${randomUsername}
2023-09-01 09:18:21.699|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 30|base.save(var,value)      - executing save(var,value)(body, {
  "productdetails": {
    "productdesc": "${randomUsername}",
    "prodmrp": ${intergervalue},
    "prodsp": ${intergervalue},
    "amountdiscount": ${intergervalue},
    "percentdiscount": ${intergervalue},
    "gscode": "",
    "gsflag": ${flag1},
    "specs": {},
    "openingstock": ${intergervalue},
    "uomid": ${uomid},
    "categorycode": ${categorycode}
  },
  "godetails": {
    "707": {
      "qty": ${qty1},
      "rate": ${rate1}
    },
    "586": {
      "qty": ${qty2},
      "rate": ${rate2}
    }
  },
  "godownflag": ${godown1}
})
2023-09-01 09:18:22.329|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 30|base.save(var,value)      - PASS stored '{
  "productdetails": {
    "productdesc": "test52744",
    "prodmrp": 0,
    "prodsp": 0,
    "amountdiscount": 0,
    "percentdiscount": 0,
    "gscode": "",
    "gsflag": 19,
    "specs": {},
    "openingstock": 0,
    "uomid": 1,
    "categorycode": null
  },
  "godetails": {
    "707": {
      "qty": 1,
      "rate": 5
    },
    "586": {
      "qty": 2.5,
      "rate": 6.12
    }
  },
  "godownflag": true
}' as ${body}
2023-09-01 09:18:22.329|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 31|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:18:22.937|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 31|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/product HTTP/1.1
2023-09-01 09:18:23.963|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 31|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:18:23.964|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 31|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/product HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:18:23.983|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 31|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/product'
2023-09-01 09:18:23.983|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 32|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:18:24.594|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 32|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=878, Date=Fri, 01 Sep 2023 03:48:22 GMT, Content-Type=application/json}
contentLength=878
elapsedTime=1028
body={"gkstatus": 3, "error": "(psycopg2.errors.UniqueViolation) duplicate key value violates unique constraint \"product_productdesc_orgcode_key\"\nDETAIL:  Key (productdesc, orgcode)=(test52744, 185) already exists.\n\n[SQL: INSERT INTO product (gscode, gsflag, percentdiscount, amountdiscount, productdesc, openingstock, specs, categorycode, uomid, prodsp, prodmrp, orgcode) VALUES (%(gscode)s, %(gsflag)s, %(percentdiscount)s, %(amountdiscount)s, %(productdesc)s, %(openingstock)s, %(specs)s, %(cat...
2023-09-01 09:18:24.598|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 32|base.verbose(text)        - PASS 
2023-09-01 09:18:24.598|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:18:25.227|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 33|base.save(var,value)      - PASS stored '3' as ${actualGkStatus}
2023-09-01 09:18:25.227|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 34|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkresult)])
2023-09-01 09:18:25.858|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 34|base.save(var,value)      - PASS stored 'null' as ${productcode}
2023-09-01 09:18:25.858|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${productschema.path}\Post.product.txt)
2023-09-01 09:18:27.190|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:18:27.805|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:18:28.417|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:18:29.031|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1028 is less than or equal to 3000
2023-09-01 09:18:29.645|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:18:30.259|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:18:30.869|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:18:30.870|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Product\Post.product.txt!=null)		=> MATCHED
2023-09-01 09:18:31.483|I|Thread-29|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:18:31.500|E|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
$.error: is not defined in the schema and the schema does not allow additional properties
2023-09-01 09:18:32.112|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:18:32.726|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:18:32.738|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 35|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:18:32.739|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 36|base.save(var,value)      - executing save(var,value)(date, $(sysdate|now|yyyy-MM-dd))
2023-09-01 09:18:33.359|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product|# 36|base.save(var,value)      - PASS stored '2023-09-01' as ${date}
2023-09-01 09:18:33.359|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create a service: POST- /product - ending activity
2023-09-01 09:18:33.360|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax - executing activity
2023-09-01 09:18:33.360|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 37|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax)
2023-09-01 09:18:33.987|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 37|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax' as ${url}
2023-09-01 09:18:33.987|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 38|base.save(var,value)      - executing save(var,value)(body, {
  "taxname": "${taxname}",
  "taxrate": ${taxrate},
  "productcode": ${productcode},  
  "taxfromdate": "${date}",
  "state": "Karnataka"
  
})
2023-09-01 09:18:34.608|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 38|base.save(var,value)      - PASS stored '{
  "taxname": "IGST",
  "taxrate": 4,
  "productcode": ,  
  "taxfromdate": "2023-09-01",
  "state": "Karnataka"
  
}' as ${body}
2023-09-01 09:18:34.609|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 39|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 09:18:35.216|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 39|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/tax HTTP/1.1
2023-09-01 09:18:36.216|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 39|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 09:18:36.217|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 39|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/tax HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:18:36.237|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 39|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax'
2023-09-01 09:18:36.238|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 40|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:18:36.839|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 40|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:48:34 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1001
body={"gkstatus": 3}
2023-09-01 09:18:36.842|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 40|base.verbose(text)        - PASS 
2023-09-01 09:18:36.842|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 41|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:18:37.477|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 41|base.save(var,value)      - PASS stored '3' as ${actualGkStatus}
2023-09-01 09:18:37.478|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 42|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Post.tax.txt)
2023-09-01 09:18:38.784|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:18:39.408|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:18:40.017|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:18:40.636|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1001 is less than or equal to 3000
2023-09-01 09:18:41.249|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:18:41.871|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:18:42.476|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:18:42.477|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Tax\Post.tax.txt!=null)		=> MATCHED
2023-09-01 09:18:43.097|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:18:43.703|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:18:44.332|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:18:44.342|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 42|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:18:44.343|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 43|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:18:44.958|I|Thread-29|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:18:44.991|E|Thread-29|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001.xlsx_GET_A43.log
2023-09-01 09:18:44.991|E|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 43|base.assertEqual(expected - FAIL 
expected=0
actual  =3
2023-09-01 09:18:44.992|E|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax|# 43|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001.xlsx_GET_A43.log
2023-09-01 09:18:44.992|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Create tax for service: POST- /tax - ending activity
2023-09-01 09:18:44.992|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} - executing activity
2023-09-01 09:18:44.992|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 44|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax/search/${pscflag}?productcode=${productcode})
2023-09-01 09:18:45.612|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 44|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax/search/p?productcode=' as ${url}
2023-09-01 09:18:45.613|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 45|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:18:46.217|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 45|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/tax/search/p?productcode= HTTP/1.1
2023-09-01 09:18:46.981|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 45|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:18:46.982|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 45|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/tax/search/p?productcode= HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:18:47.028|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 45|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax/search/p?productcode='
2023-09-01 09:18:47.029|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 46|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:18:47.643|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 46|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:48:45 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=766
body={"gkstatus": 3}
2023-09-01 09:18:47.646|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 46|base.verbose(text)        - PASS 
2023-09-01 09:18:47.646|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 47|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:18:48.274|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 47|base.save(var,value)      - PASS stored '3' as ${actualGkStatus}
2023-09-01 09:18:48.275|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 48|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetSearchPSCflag.tax.txt)
2023-09-01 09:18:49.585|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:18:50.220|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:18:50.834|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:18:51.473|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 766 is less than or equal to 3000
2023-09-01 09:18:52.082|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:18:52.694|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:18:53.307|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:18:53.308|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Tax\GetSearchPSCflag.tax.txt!=null)		=> MATCHED
2023-09-01 09:18:53.915|I|Thread-29|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:18:53.930|E|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 14|json.assertCorrectness(js - FAIL $.gkresult: is missing but it is required
2023-09-01 09:18:54.543|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:18:55.159|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:18:55.171|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 48|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:18:55.172|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 49|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:18:55.783|I|Thread-29|cancelled taking screenshot; agent/driver not ready.
2023-09-01 09:18:55.804|E|Thread-29|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001.xlsx_GET_A49.log
2023-09-01 09:18:55.804|E|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 49|base.assertEqual(expected - FAIL 
expected=0
actual  =3
2023-09-01 09:18:55.804|E|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag}|# 49|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_084512\logs\GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001.xlsx_GET_A49.log
2023-09-01 09:18:55.804|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get the tax for service: GET- /tax/search/{pscflag} - ending activity
2023-09-01 09:18:55.804|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax - executing activity
2023-09-01 09:18:55.804|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 50|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax)
2023-09-01 09:18:56.416|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 50|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax' as ${url}
2023-09-01 09:18:56.417|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 51|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:18:57.025|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 51|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/tax HTTP/1.1
2023-09-01 09:18:57.813|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 51|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:18:57.814|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 51|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/tax HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:18:57.838|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 51|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax'
2023-09-01 09:18:57.839|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 52|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:18:58.453|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 52|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=1172, Date=Fri, 01 Sep 2023 03:48:56 GMT, Content-Type=application/json}
contentLength=1172
elapsedTime=790
body={"gkstatus": 0, "gkdata": [{"taxid": 105, "taxname": "IGST", "taxrate": "4.00", "taxfromdate": "2023-08-30", "state": "Karnataka", "categorycode": null, "productcode": 343, "orgcode": 185}, {"taxid": 106, "taxname": "IGST", "taxrate": "4.00", "taxfromdate": "2023-08-30", "state": "Karnataka", "categorycode": null, "productcode": 344, "orgcode": 185}, {"taxid": 103, "taxname": "IGST", "taxrate": "2.00", "taxfromdate": "2023-08-30", "state": "Karnataka", "categorycode": null, "productcode": 341...
2023-09-01 09:18:58.456|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 52|base.verbose(text)        - PASS 
2023-09-01 09:18:58.456|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 53|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:18:59.097|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 53|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:18:59.098|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 54|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetTax.tax.txt)
2023-09-01 09:19:00.399|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:19:01.028|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:19:01.633|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:19:02.257|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 12|number.assertLesserOrEqua - PASS 790 is less than or equal to 3000
2023-09-01 09:19:02.864|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:19:03.500|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:19:04.113|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:19:04.113|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Tax\GetTax.tax.txt!=null)		=> MATCHED
2023-09-01 09:19:04.738|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:19:05.340|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:19:05.951|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:19:05.963|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 54|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:19:05.964|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 55|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:19:06.595|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 55|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:19:06.596|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 56|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:19:07.203|I|Thread-29|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:19:07.204|I|Thread-29|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:19:07.214|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax|# 56|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:19:07.216|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET|Get all existing data about taxes: GET- /tax - ending activity
2023-09-01 09:19:08.557|I|Thread-29|[GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|GET] saving test scenario
2023-09-01 09:19:08.760|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT - executing test scenario
2023-09-01 09:19:08.760|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Set headers - executing activity
2023-09-01 09:19:08.760|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:19:09.378|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:19:09.380|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Set headers - ending activity
2023-09-01 09:19:09.380|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax - executing activity
2023-09-01 09:19:09.380|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax)
2023-09-01 09:19:09.997|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax' as ${url}
2023-09-01 09:19:09.997|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:19:10.608|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/tax HTTP/1.1
2023-09-01 09:19:11.366|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:19:11.369|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/tax HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:19:11.390|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax'
2023-09-01 09:19:11.391|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  8|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:19:12.005|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  8|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=1172, Date=Fri, 01 Sep 2023 03:49:09 GMT, Content-Type=application/json}
contentLength=1172
elapsedTime=760
body={"gkstatus": 0, "gkdata": [{"taxid": 105, "taxname": "IGST", "taxrate": "4.00", "taxfromdate": "2023-08-30", "state": "Karnataka", "categorycode": null, "productcode": 343, "orgcode": 185}, {"taxid": 106, "taxname": "IGST", "taxrate": "4.00", "taxfromdate": "2023-08-30", "state": "Karnataka", "categorycode": null, "productcode": 344, "orgcode": 185}, {"taxid": 103, "taxname": "IGST", "taxrate": "2.00", "taxfromdate": "2023-08-30", "state": "Karnataka", "categorycode": null, "productcode": 341...
2023-09-01 09:19:12.007|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  8|base.verbose(text)        - PASS 
2023-09-01 09:19:12.008|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:19:12.627|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|#  9|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:19:12.627|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|# 10|base.save(var,value)      - executing save(var,value)(taxname, [JSON(${response}.body) => extract(gkdata[0].taxname)])
2023-09-01 09:19:13.252|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|# 10|base.save(var,value)      - PASS stored 'IGST' as ${taxname}
2023-09-01 09:19:13.253|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|# 11|base.save(var,value)      - executing save(var,value)(productcode, [JSON(${response}.body) => extract(gkdata[0].productcode)])
2023-09-01 09:19:13.880|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|# 11|base.save(var,value)      - PASS stored '343' as ${productcode}
2023-09-01 09:19:13.881|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|# 12|base.save(var,value)      - executing save(var,value)(taxid, [JSON(${response}.body) => extract(gkdata[0].taxid)])
2023-09-01 09:19:14.516|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|# 12|base.save(var,value)      - PASS stored '105' as ${taxid}
2023-09-01 09:19:14.517|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:19:15.160|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:19:15.161|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Get all existing data about taxes: GET- /tax - ending activity
2023-09-01 09:19:15.161|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} - executing activity
2023-09-01 09:19:15.161|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax/${taxid})
2023-09-01 09:19:15.786|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 14|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax/105' as ${url}
2023-09-01 09:19:15.786|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 15|base.save(var,value)      - executing save(var,value)(body, {
      "taxid": ${taxid},
      "taxname": "${taxname}",
      "taxrate": "${edittaxrate}",    
      "productcode": ${productcode},
     "state": "Karnataka"
      
    })
2023-09-01 09:19:16.437|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 15|base.save(var,value)      - PASS stored '{
      "taxid": 105,
      "taxname": "IGST",
      "taxrate": "2",    
      "productcode": 343,
     "state": "Karnataka"
      
    }' as ${body}
2023-09-01 09:19:16.437|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 16|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 09:19:17.049|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 16|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/tax/105 HTTP/1.1
2023-09-01 09:19:18.046|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 16|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 09:19:18.047|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 16|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/tax/105 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:19:18.077|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 16|ws.put(url,body,var)      - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax/105'
2023-09-01 09:19:18.078|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 17|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:19:18.691|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 17|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:49:16 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=998
body={"gkstatus": 0}
2023-09-01 09:19:18.693|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 17|base.verbose(text)        - PASS 
2023-09-01 09:19:18.693|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 18|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:19:19.318|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 18|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:19:19.318|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 19|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PutTax.tax.txt)
2023-09-01 09:19:20.630|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:19:21.263|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:19:21.877|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:19:22.504|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 998 is less than or equal to 3000
2023-09-01 09:19:23.111|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:19:23.743|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:19:24.351|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:19:24.353|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Tax\PutTax.tax.txt!=null)		=> MATCHED
2023-09-01 09:19:24.986|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:19:25.591|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:19:26.205|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:19:26.218|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 19|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:19:26.219|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 20|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:19:26.838|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 20|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:19:26.839|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 21|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:19:27.449|I|Thread-29|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:19:27.450|I|Thread-29|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:19:27.461|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid}|# 21|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:19:27.461|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT|Edit tax item's data: PUT- /tax/{taxid} - ending activity
2023-09-01 09:19:27.700|I|Thread-29|[GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|PUT] saving test scenario
2023-09-01 09:19:27.900|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE - executing test scenario
2023-09-01 09:19:27.900|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Set headers - executing activity
2023-09-01 09:19:27.900|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 09:19:28.555|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:19:28.556|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Set headers - ending activity
2023-09-01 09:19:28.556|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax - executing activity
2023-09-01 09:19:28.556|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax)
2023-09-01 09:19:29.175|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax' as ${url}
2023-09-01 09:19:29.176|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 09:19:29.778|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/tax HTTP/1.1
2023-09-01 09:19:30.552|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 09:19:30.553|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/tax HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:19:30.566|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax'
2023-09-01 09:19:30.567|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  8|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:19:31.175|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  8|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=1172, Date=Fri, 01 Sep 2023 03:49:29 GMT, Content-Type=application/json}
contentLength=1172
elapsedTime=776
body={"gkstatus": 0, "gkdata": [{"taxid": 106, "taxname": "IGST", "taxrate": "4.00", "taxfromdate": "2023-08-30", "state": "Karnataka", "categorycode": null, "productcode": 344, "orgcode": 185}, {"taxid": 103, "taxname": "IGST", "taxrate": "2.00", "taxfromdate": "2023-08-30", "state": "Karnataka", "categorycode": null, "productcode": 341, "orgcode": 185}, {"taxid": 109, "taxname": "VAT", "taxrate": "5.00", "taxfromdate": "2024-04-24", "state": "Andhra Pradesh", "categorycode": null, "productcode":...
2023-09-01 09:19:31.178|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  8|base.verbose(text)        - PASS 
2023-09-01 09:19:31.178|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:19:31.819|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|#  9|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:19:31.820|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|# 10|base.save(var,value)      - executing save(var,value)(taxid, [JSON(${response}.body) => extract(gkdata[0].taxid)])
2023-09-01 09:19:32.464|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|# 10|base.save(var,value)      - PASS stored '106' as ${taxid}
2023-09-01 09:19:32.465|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:19:33.095|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:19:33.096|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Get all existing data about taxes: GET- /tax - ending activity
2023-09-01 09:19:33.096|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} - executing activity
2023-09-01 09:19:33.097|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 12|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}tax/${taxid})
2023-09-01 09:19:33.722|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 12|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/tax/106' as ${url}
2023-09-01 09:19:33.722|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 13|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, , response)
2023-09-01 09:19:34.331|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 13|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org/tax/106 HTTP/1.1
2023-09-01 09:19:35.074|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 13|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 09:19:35.075|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 13|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org/tax/106 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 09:19:35.087|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 13|ws.delete(url,body,var)   - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/tax/106'
2023-09-01 09:19:35.088|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 14|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 09:19:35.697|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 14|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:49:33 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=745
body={"gkstatus": 0}
2023-09-01 09:19:35.700|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 14|base.verbose(text)        - PASS 
2023-09-01 09:19:35.700|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 09:19:36.334|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 15|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 09:19:36.335|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeleteTax.tax.txt)
2023-09-01 09:19:37.638|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 09:19:38.265|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 09:19:38.880|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 09:19:39.501|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 745 is less than or equal to 3000
2023-09-01 09:19:40.109|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 09:19:40.742|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 09:19:41.353|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 09:19:41.354|I|Thread-29|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Tax\DeleteTax.tax.txt!=null)		=> MATCHED
2023-09-01 09:19:41.980|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 09:19:42.589|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 09:19:43.205|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 09:19:43.217|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 16|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 09:19:43.218|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 09:19:43.845|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 17|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 09:19:43.846|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 18|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 09:19:44.450|I|Thread-29|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 09:19:44.451|I|Thread-29|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 09:19:44.473|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid}|# 18|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 09:19:44.473|I|Thread-29|GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE|Delete a tax item: DELETE- /tax{taxid} - ending activity
2023-09-01 09:19:44.671|I|Thread-29|[GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001|DELETE] saving test scenario
2023-09-01 09:19:44.895|I|Thread-29|[20230901_084512] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 190177 ms
» Test Steps:     198
» Error(s):       4



2023-09-01 09:19:45.346|I|Thread-29|[20230901_084512] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 192161 ms
» Iterations:     [1] total 1
» Test Steps:     198
» Passed:         194
» Error(s):       4
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_084512\GNUKhata-plan.Test_Plan.011,Tax.20230901_091633.001.xlsx



2023-09-01 09:19:45.346|I|Thread-29|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 09:19:45.821|I|main|[20230901_084512] [C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx] now completed
2023-09-01 09:19:45.823|I|main|[20230901_084512] all execution thread(s) have terminated
2023-09-01 09:19:45.825|I|main|[20230901_084512] test run completed in about 2073 seconds
2023-09-01 09:19:45.876|I|main|No predefined nexial-setup found
2023-09-01 09:19:45.895|I|main|outputBase not set; output-to-cloud DISABLED!
2023-09-01 09:19:45.895|I|main|accessKey not set; output-to-cloud DISABLED!
2023-09-01 09:19:45.895|I|main|secretKey not set; output-to-cloud DISABLED!
2023-09-01 09:19:45.895|I|main|generating HTML output for this execution to C:\projects\GKCore\gkcore\tests\output\20230901_084512\execution-output.html
2023-09-01 09:19:47.001|I|main|generating JUnit XML output for this execution to C:\projects\GKCore\gkcore\tests\output\20230901_084512\junit.xml
2023-09-01 09:19:47.071|I|main|generated the JUnit report for this execution: C:\projects\GKCore\gkcore\tests\output\20230901_084512\junit.xml
2023-09-01 09:19:47.132|I|main|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 09:19:47.133|I|main|skipped email notification as configured
2023-09-01 09:19:47.133|I|main|exiting current script/plan execution
2023-09-01 09:19:47.133|I|main|exiting Nexial...
2023-09-01 09:19:47.133|I|main|shutdown starts...
2023-09-01 09:19:47.133|I|main|shutdown ends...
2023-09-01 09:19:47.136|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 2067 sec.
| » Test Steps....: 2209
| » Passed........: 2119
| » Failed........: 90
| » Success Rate..: 95.93%
\----------------------------------------------------------nexial-core dev_1535-

2023-09-01 09:19:47.136|E|main|failure found; success rate is 95.93%
2023-09-01 09:19:47.140|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\GKCore\gkcore\tests\output\20230901_084512
NEXIAL_EXECUTION_HTML: C:\projects\GKCore\gkcore\tests\output\20230901_084512\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\GKCore\gkcore\tests\output\20230901_084512\junit.xml
NEXIAL_SUCCESS_RATE:   95.93%
NEXIAL_EXIT_STATUS:    -13
