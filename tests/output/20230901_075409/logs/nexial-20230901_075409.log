2023-09-01 07:54:16.576|I|Thread-1|(DELAYED) nexial-core dev_1535 starting up...
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) found plans in C:\projects\GKCore\gkcore\tests\artifact\plan\GNUKhata-plan.xlsx: all subplans included
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\GKUser.data.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\GNUKhata.data.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Account.data.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\AuditLogs.data.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\CustomerandSupplier.data.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\DeliveryNote.data.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Invite.data.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx
2023-09-01 07:54:16.578|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Invoice.data.xlsx
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Product.data.xlsx
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Reports.data.xlsx
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Tax.data.xlsx
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) skipping plan step in ROW 16 since it's disabled
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) skipping plan step in ROW 17 since it's disabled
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) skipping plan step in ROW 18 since it's disabled
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) input files and output directory resolved...
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) cleaning up outdated temp files...
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) No predefined nexial-setup found
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GKUser.data.xlsx
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) [20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 07:54:16.579|I|Thread-1|(DELAYED) [20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx] new thread started
2023-09-01 07:54:16.579|I|Thread-1|No predefined nexial-setup found
2023-09-01 07:54:17.156|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2023-09-01 07:54:17.157|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2023-09-01 07:54:17.157|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2023-09-01 07:54:17.412|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2023-09-01 07:54:18.096|I|Thread-1|On-Demand Inspection detection enabled
2023-09-01 07:54:18.098|I|Thread-1|[20230901_075409] executing C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx with 1 iteration(s)
2023-09-01 07:54:18.103|I|Thread-1|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\captures
2023-09-01 07:54:18.103|I|Thread-1|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs
2023-09-01 07:54:18.382|I|Thread-1|[20230901_075409] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001.xlsx
2023-09-01 07:54:18.383|I|Thread-1|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GKUser.data.xlsx
2023-09-01 07:54:18.699|I|Thread-1|[20230901_075409] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001.xlsx
2023-09-01 07:54:19.513|I|Thread-1|STARTS
2023-09-01 07:54:20.589|I|Thread-1|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 07:54:20.602|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx' from 'Test Plan' step 5
2023-09-01 07:54:20.606|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 07:54:20.611|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token - executing test scenario
2023-09-01 07:54:20.611|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token - executing activity
2023-09-01 07:54:20.616|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 07:54:22.041|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 07:54:22.875|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 07:54:23.487|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 07:54:24.109|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 07:54:24.717|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:54:25.642|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 07:54:27.162|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:54:27.168|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:54:27.212|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 07:54:27.829|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 07:54:28.453|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 07:54:28.497|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:54:28.498|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 07:54:29.204|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 07:54:29.204|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 07:54:30.551|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 07:54:31.206|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 07:54:31.815|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 07:54:32.438|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 07:54:33.048|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 07:54:33.675|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 07:54:34.286|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:54:34.906|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 07:54:35.940|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:54:35.942|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:54:35.972|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 07:54:36.576|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 07:54:37.205|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 07:54:37.224|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:54:37.225|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 07:54:37.876|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 07:54:37.877|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token|Login Token - ending activity
2023-09-01 07:54:38.575|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Token] saving test scenario
2023-09-01 07:54:38.792|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get - executing test scenario
2023-09-01 07:54:38.793|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers - executing activity
2023-09-01 07:54:38.793|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:54:39.438|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:54:39.439|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}organisation/gkusers)
2023-09-01 07:54:40.066|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/organisation/gkusers' as ${url}
2023-09-01 07:54:40.067|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:54:40.687|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/organisation/gkusers HTTP/1.1
2023-09-01 07:54:41.497|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:54:41.498|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/organisation/gkusers HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:54:41.538|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/organisation/gkusers'
2023-09-01 07:54:41.539|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(0, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:54:42.185|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  8|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:54:42.186|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  9|base.save(var,value)      - executing save(var,value)(GkResultCount, [JSON(${response}.body) => count(gkresult)])
2023-09-01 07:54:42.831|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|#  9|base.save(var,value)      - PASS stored '6' as ${GkResultCount}
2023-09-01 07:54:42.832|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 10|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 07:54:43.467|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 10|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 07:54:43.468|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 11|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(4, -1)
2023-09-01 07:54:44.078|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 07:54:44.078|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 07:54:44.691|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 07:54:45.311|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1257' as ${userid}
2023-09-01 07:54:45.313|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 07:54:45.917|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1257'
2023-09-01 07:54:45.918|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 07:54:46.535|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 07:54:46.536|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 07:54:46.537|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 07:54:47.151|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 07:54:47.760|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1258' as ${userid}
2023-09-01 07:54:47.761|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 07:54:48.376|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1258'
2023-09-01 07:54:48.377|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 07:54:48.985|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 07:54:48.985|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 07:54:48.986|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 07:54:49.589|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 07:54:50.196|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1255' as ${userid}
2023-09-01 07:54:50.198|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 07:54:50.814|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1255'
2023-09-01 07:54:50.816|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 07:54:51.425|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2023-09-01 07:54:51.426|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #4---------------------------------------------->
2023-09-01 07:54:51.427|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 07:54:52.033|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 07:54:52.638|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1256' as ${userid}
2023-09-01 07:54:52.639|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 07:54:53.241|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1256'
2023-09-01 07:54:53.243|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 07:54:53.845|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2023-09-01 07:54:53.846|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #5---------------------------------------------->
2023-09-01 07:54:53.847|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 07:54:54.464|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 07:54:55.072|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1259' as ${userid}
2023-09-01 07:54:55.074|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 07:54:55.680|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1259'
2023-09-01 07:54:55.681|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 07:54:56.284|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 5
2023-09-01 07:54:56.285|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #6---------------------------------------------->
2023-09-01 07:54:56.286|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 07:54:56.891|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 07:54:57.507|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '2' as ${userid}
2023-09-01 07:54:57.509|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 07:54:58.112|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '2'
2023-09-01 07:54:58.114|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 07:54:58.717|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 6
2023-09-01 07:54:58.718|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #7---------------------------------------------->
2023-09-01 07:54:58.719|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 07:54:59.348|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 11|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 07:54:59.349|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Org_gkUser.txt)
2023-09-01 07:55:00.720|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:55:01.382|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:55:01.985|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:55:02.624|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 816 is less than or equal to 3000
2023-09-01 07:55:03.237|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:55:03.865|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:55:04.475|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:55:04.479|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\Org_gkUser.txt!=null)		=> MATCHED
2023-09-01 07:55:05.340|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\Org_gkUser.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\Org_gkUser.txt"; line: 1, column: 2]
2023-09-01 07:55:05.340|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:55:05.351|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\Org_gkUser.txt"; line: 1, column: 2]
2023-09-01 07:55:05.955|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:55:06.577|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:55:06.586|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers|# 16|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:55:06.589|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - organisation/gkUsers - ending activity
2023-09-01 07:55:06.589|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs - executing activity
2023-09-01 07:55:06.590|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 17|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 07:55:07.231|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 17|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 07:55:07.232|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 18|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser/orgs)
2023-09-01 07:55:07.854|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 18|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser/orgs' as ${url}
2023-09-01 07:55:07.855|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:55:08.471|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/gkuser/orgs HTTP/1.1
2023-09-01 07:55:09.318|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:55:09.318|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/gkuser/orgs HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:55:09.332|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser/orgs'
2023-09-01 07:55:09.333|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:55:09.959|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 20|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:55:09.960|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 21|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\gkUserOrgs.txt)
2023-09-01 07:55:11.313|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:55:11.932|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:55:12.538|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:55:13.160|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 12|number.assertLesserOrEqua - PASS 847 is less than or equal to 3000
2023-09-01 07:55:13.770|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:55:14.402|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:55:15.016|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:55:15.018|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\gkUserOrgs.txt!=null)		=> MATCHED
2023-09-01 07:55:15.628|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\gkUserOrgs.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\gkUserOrgs.txt"; line: 1, column: 2]
2023-09-01 07:55:15.629|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:55:15.639|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\gkUserOrgs.txt"; line: 1, column: 2]
2023-09-01 07:55:16.251|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:55:16.864|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:55:16.879|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 21|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:55:16.880|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 22|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:55:17.512|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs|# 22|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:55:17.513|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/orgs - ending activity
2023-09-01 07:55:17.513|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser - executing activity
2023-09-01 07:55:17.513|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 23|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:55:18.141|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 23|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:55:18.142|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 24|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 07:55:18.764|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 24|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 07:55:18.764|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 25|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 07:55:19.411|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 25|base.save(var,value)      - PASS stored 'test99101' as ${randomUsername}
2023-09-01 07:55:19.412|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 26|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 07:55:20.054|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 26|base.save(var,value)      - PASS stored '{
    "username": "test99101",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 07:55:20.055|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:55:20.666|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 07:55:21.647|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:55:21.648|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:55:21.673|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 07:55:21.674|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 28|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:55:22.313|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 28|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:55:22.314|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 29|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 07:55:23.662|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:55:24.309|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:55:24.917|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:55:25.552|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 12|number.assertLesserOrEqua - PASS 983 is less than or equal to 3000
2023-09-01 07:55:26.164|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:55:26.784|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:55:27.399|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:55:27.400|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt!=null)		=> MATCHED
2023-09-01 07:55:28.012|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt"; line: 1, column: 2]
2023-09-01 07:55:28.013|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:55:28.026|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt"; line: 1, column: 2]
2023-09-01 07:55:28.634|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:55:29.258|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:55:29.280|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 29|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:55:29.280|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 30|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:55:29.919|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser|# 30|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:55:29.919|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser - ending activity
2023-09-01 07:55:29.919|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question - executing activity
2023-09-01 07:55:29.920|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 31|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/pwd/question?username=${randomUsername})
2023-09-01 07:55:30.550|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 31|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test99101' as ${url}
2023-09-01 07:55:30.550|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:55:31.160|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test99101 HTTP/1.1
2023-09-01 07:55:31.929|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:55:31.930|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test99101 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:55:31.955|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test99101'
2023-09-01 07:55:31.956|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:55:32.588|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 33|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:55:32.588|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 34|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult.userid)])
2023-09-01 07:55:33.229|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 34|base.save(var,value)      - PASS stored '1353' as ${userid}
2023-09-01 07:55:33.230|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\pwdQuestion.txt)
2023-09-01 07:55:34.576|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:55:35.198|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:55:35.809|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:55:36.432|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 12|number.assertLesserOrEqua - PASS 770 is less than or equal to 3000
2023-09-01 07:55:37.039|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:55:37.662|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:55:38.274|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:55:38.276|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdQuestion.txt!=null)		=> MATCHED
2023-09-01 07:55:38.883|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdQuestion.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdQuestion.txt"; line: 1, column: 2]
2023-09-01 07:55:38.884|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:55:38.899|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdQuestion.txt"; line: 1, column: 2]
2023-09-01 07:55:39.504|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:55:40.119|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:55:40.132|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 35|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:55:40.132|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:55:40.782|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question|# 36|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:55:40.783|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive/gkuser/pwd/question - ending activity
2023-09-01 07:55:40.783|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer - executing activity
2023-09-01 07:55:40.783|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:55:41.429|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 37|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:55:41.430|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/pwd/answer?userid=${userid}&useranswer=${answer})
2023-09-01 07:55:42.080|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 38|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1353&useranswer=admin' as ${url}
2023-09-01 07:55:42.081|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:55:42.697|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1353&useranswer=admin HTTP/1.1
2023-09-01 07:55:43.489|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:55:43.490|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1353&useranswer=admin HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:55:43.516|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1353&useranswer=admin'
2023-09-01 07:55:43.517|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 40|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:55:44.159|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 40|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:55:44.160|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 41|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\pwdAnswer.txt)
2023-09-01 07:55:45.479|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:55:46.106|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:55:46.711|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:55:47.360|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 793 is less than or equal to 3000
2023-09-01 07:55:47.962|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:55:48.604|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:55:49.216|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:55:49.218|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdAnswer.txt!=null)		=> MATCHED
2023-09-01 07:55:49.827|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdAnswer.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdAnswer.txt"; line: 1, column: 2]
2023-09-01 07:55:49.828|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:55:49.844|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdAnswer.txt"; line: 1, column: 2]
2023-09-01 07:55:50.456|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:55:51.072|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:55:51.084|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 41|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:55:51.084|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 42|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:55:51.719|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer|# 42|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:55:51.719|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|Positive - gkUser/pwd/answer - ending activity
2023-09-01 07:55:51.720|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} - executing activity
2023-09-01 07:55:51.720|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 43|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 07:55:52.342|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 43|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 07:55:52.343|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 44|base.save(var,value)      - executing save(var,value)(NewUser, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 07:55:52.980|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 44|base.save(var,value)      - PASS stored 'test72197' as ${NewUser}
2023-09-01 07:55:52.980|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 45|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${NewUser}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 07:55:53.620|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 45|base.save(var,value)      - PASS stored '{
    "username": "test72197",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 07:55:53.621|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:55:54.230|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 07:55:55.278|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:55:55.279|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:55:55.313|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 07:55:55.313|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 47|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:55:55.945|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 47|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:55:55.945|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 48|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\gkUser.txt)
2023-09-01 07:55:57.301|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:55:57.937|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:55:58.550|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:55:59.169|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1049 is less than or equal to 3000
2023-09-01 07:55:59.778|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:56:00.398|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:56:01.001|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:56:01.002|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\gkUser.txt!=null)		=> MATCHED
2023-09-01 07:56:01.605|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\gkUser.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\gkUser.txt"; line: 1, column: 2]
2023-09-01 07:56:01.606|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:56:01.618|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\gkUser.txt"; line: 1, column: 2]
2023-09-01 07:56:02.224|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:56:02.849|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:56:02.870|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 48|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:56:02.871|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 49|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:56:03.506|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 49|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:56:03.507|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 50|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/check/username=${NewUser})
2023-09-01 07:56:04.133|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 50|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/check/username=test72197' as ${url}
2023-09-01 07:56:04.134|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response_CheckUser)
2023-09-01 07:56:04.748|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/check/username=test72197 HTTP/1.1
2023-09-01 07:56:05.535|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:56:05.536|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/check/username=test72197 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:56:05.562|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/check/username=test72197'
2023-09-01 07:56:05.563|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 52|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response_CheckUser}.body) => extract(gkstatus)])
2023-09-01 07:56:06.190|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 52|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:56:06.190|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 53|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response_CheckUser}.returnCode
actualResponseTime=${response_CheckUser}.elapsedTime
actualContentType=${response_CheckUser}.headers.[Content-Type]
responseBody=${response_CheckUser}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\checkUser.txt)
2023-09-01 07:56:07.502|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:56:08.136|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:56:08.746|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:56:09.381|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 788 is less than or equal to 3000
2023-09-01 07:56:09.988|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:56:10.620|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:56:11.233|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:56:11.234|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\checkUser.txt!=null)		=> MATCHED
2023-09-01 07:56:11.844|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\checkUser.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\checkUser.txt"; line: 1, column: 2]
2023-09-01 07:56:11.846|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:56:11.876|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\checkUser.txt"; line: 1, column: 2]
2023-09-01 07:56:12.480|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:56:13.086|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: schema
2023-09-01 07:56:13.094|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 53|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:56:13.095|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 54|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:56:13.744|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username}|# 54|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:56:13.745|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get|gkUser/check/{username} - ending activity
2023-09-01 07:56:16.432|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Get] saving test scenario
2023-09-01 07:56:16.640|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post - executing test scenario
2023-09-01 07:56:16.641|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User - executing activity
2023-09-01 07:56:16.641|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  5|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 07:56:17.281|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  5|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 07:56:17.282|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  6|base.save(var,value)      - executing save(var,value)(body, {
    "username": "test[NUMBER(${num})=>randomDigits(5)]",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 07:56:17.933|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  6|base.save(var,value)      - PASS stored '{
    "username": "test64592",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 07:56:17.934|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  7|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:56:18.545|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  7|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 07:56:19.572|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  7|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:56:19.573|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  7|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:56:19.633|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  7|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 07:56:19.633|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:56:20.303|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:56:20.304|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  9|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 07:56:21.699|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:56:22.325|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:56:22.928|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:56:23.564|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1030 is less than or equal to 3000
2023-09-01 07:56:24.176|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:56:24.805|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:56:25.416|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:56:25.416|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt!=null)		=> MATCHED
2023-09-01 07:56:26.024|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt"; line: 1, column: 2]
2023-09-01 07:56:26.025|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:56:26.039|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt"; line: 1, column: 2]
2023-09-01 07:56:26.652|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:56:27.275|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:56:27.297|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|#  9|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:56:27.297|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:56:27.951|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User|# 10|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:56:27.952|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post|Create User - ending activity
2023-09-01 07:56:28.369|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Post] saving test scenario
2023-09-01 07:56:28.653|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put - executing test scenario
2023-09-01 07:56:28.653|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset - executing activity
2023-09-01 07:56:28.653|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:56:29.294|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:56:29.295|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 07:56:29.931|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 07:56:29.932|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 07:56:30.587|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  7|base.save(var,value)      - PASS stored 'test85510' as ${randomUsername}
2023-09-01 07:56:30.588|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  8|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 07:56:31.230|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  8|base.save(var,value)      - PASS stored '{
    "username": "test85510",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 07:56:31.230|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:56:31.837|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 07:56:32.847|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:56:32.849|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:56:32.890|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 07:56:32.891|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 10|base.save(var,value)      - executing save(var,value)(actualAnswer, ${answer})
2023-09-01 07:56:33.544|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 10|base.save(var,value)      - PASS stored 'admin' as ${actualAnswer}
2023-09-01 07:56:33.545|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:56:34.203|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:56:34.203|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 12|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 07:56:35.576|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:56:36.206|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:56:36.811|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:56:37.444|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1013 is less than or equal to 3000
2023-09-01 07:56:38.052|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:56:38.693|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:56:39.304|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:56:39.306|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt!=null)		=> MATCHED
2023-09-01 07:56:39.916|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt"; line: 1, column: 2]
2023-09-01 07:56:39.916|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:56:39.936|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\CreateUser.txt"; line: 1, column: 2]
2023-09-01 07:56:40.547|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:56:41.162|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:56:41.172|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 12|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:56:41.173|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:56:41.805|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:56:41.807|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/pwd/question?username=${randomUsername})
2023-09-01 07:56:42.439|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 14|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test85510' as ${url}
2023-09-01 07:56:42.440|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:56:43.051|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test85510 HTTP/1.1
2023-09-01 07:56:43.813|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:56:43.814|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test85510 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:56:43.834|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test85510'
2023-09-01 07:56:43.834|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 16|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:56:44.463|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 16|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:56:44.463|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 17|base.save(var,value)      - executing save(var,value)(actualUserid, [JSON(${response}.body) => extract(gkresult.userid)])
2023-09-01 07:56:45.093|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 17|base.save(var,value)      - PASS stored '1356' as ${actualUserid}
2023-09-01 07:56:45.094|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 18|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\pwdQuestion.txt)
2023-09-01 07:56:46.431|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:56:47.065|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:56:47.678|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:56:48.293|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - PASS 763 is less than or equal to 3000
2023-09-01 07:56:48.902|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:56:49.539|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:56:50.153|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:56:50.155|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdQuestion.txt!=null)		=> MATCHED
2023-09-01 07:56:50.764|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdQuestion.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdQuestion.txt"; line: 1, column: 2]
2023-09-01 07:56:50.765|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:56:50.783|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\pwdQuestion.txt"; line: 1, column: 2]
2023-09-01 07:56:51.399|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:56:52.027|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:56:52.056|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 18|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:56:52.056|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 19|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:56:52.707|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 19|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:56:52.708|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 20|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser/pwd/reset)
2023-09-01 07:56:53.340|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 20|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser/pwd/reset' as ${url}
2023-09-01 07:56:53.341|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 21|base.save(var,value)      - executing save(var,value)(body, {
  "userid": "${actualUserid}",
  "useranswer": "${actualAnswer}",
  "userpassword": "${resetPassword}"
}
)
2023-09-01 07:56:54.001|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 21|base.save(var,value)      - PASS stored '{
  "userid": "1356",
  "useranswer": "admin",
  "userpassword": "User12345"
}
' as ${body}
2023-09-01 07:56:54.002|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 07:56:54.607|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/gkuser/pwd/reset HTTP/1.1
2023-09-01 07:56:55.621|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 07:56:55.622|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/gkuser/pwd/reset HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:56:55.678|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser/pwd/reset'
2023-09-01 07:56:55.679|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 23|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:56:56.339|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 23|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:56:56.340|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 24|base.verbose(text)        - executing verbose(text)(${response}.body)
2023-09-01 07:56:56.956|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 24|base.verbose(text)        - 
{"gkstatus": 0}
2023-09-01 07:56:56.961|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 24|base.verbose(text)        - PASS 
2023-09-01 07:56:56.961|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 25|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\resetUser.txt)
2023-09-01 07:56:58.359|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:56:58.997|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:56:59.601|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:57:00.231|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1016 is less than or equal to 3000
2023-09-01 07:57:00.835|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:57:01.461|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:57:02.064|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:57:02.066|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\resetUser.txt!=null)		=> MATCHED
2023-09-01 07:57:02.671|I|Thread-1|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\resetUser.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\resetUser.txt"; line: 1, column: 2]
2023-09-01 07:57:02.671|I|Thread-1|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:57:02.683|E|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Create User\\resetUser.txt"; line: 1, column: 2]
2023-09-01 07:57:03.287|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:57:03.917|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:57:03.942|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 25|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:57:03.942|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:57:04.599|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset|# 26|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:57:04.599|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|gkUser/pwd/reset - ending activity
2023-09-01 07:57:04.600|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|Clear the Token - executing activity
2023-09-01 07:57:04.601|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|Clear the Token|# 27|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 07:57:05.211|I|Thread-1|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:57:05.235|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|Clear the Token|# 27|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 07:57:05.236|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put|Clear the Token - ending activity
2023-09-01 07:57:06.339|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001|Put] saving test scenario
2023-09-01 07:57:06.566|I|Thread-1|[20230901_075409] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 165954 ms
» Test Steps:     167
» Error(s):       11



2023-09-01 07:57:07.200|I|Thread-1|[20230901_075409] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 170752 ms
» Iterations:     [1] total 1
» Test Steps:     167
» Passed:         156
» Error(s):       11
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.001,GKUser.20230901_075418.001.xlsx



2023-09-01 07:57:07.201|I|Thread-1|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 07:57:07.823|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx] now completed
2023-09-01 07:57:07.823|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GNUKhata.data.xlsx
2023-09-01 07:57:07.897|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 07:57:07.897|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx] new thread started
2023-09-01 07:57:07.903|I|Thread-5|missing REQUIRED configuration; sms DISABLED!
2023-09-01 07:57:07.904|I|Thread-5|On-Demand Inspection detection enabled
2023-09-01 07:57:07.905|I|Thread-5|[20230901_075409] executing C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx with 1 iteration(s)
2023-09-01 07:57:07.905|I|Thread-5|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\captures
2023-09-01 07:57:07.905|I|Thread-5|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs
2023-09-01 07:57:08.125|I|Thread-5|[20230901_075409] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001.xlsx
2023-09-01 07:57:08.125|I|Thread-5|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GNUKhata.data.xlsx
2023-09-01 07:57:08.221|I|Thread-5|[20230901_075409] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001.xlsx
2023-09-01 07:57:08.640|I|Thread-5|STARTS
2023-09-01 07:57:08.644|I|Thread-5|skipping test step in ROW 5 since it's disabled
2023-09-01 07:57:08.646|I|Thread-5|skipping test step in ROW 6 since it's disabled
2023-09-01 07:57:08.647|I|Thread-5|skipping test step in ROW 7 since it's disabled
2023-09-01 07:57:09.662|I|Thread-5|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 07:57:09.663|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx' from 'Test Plan' step 6
2023-09-01 07:57:09.664|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 07:57:09.664|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token - executing test scenario
2023-09-01 07:57:09.665|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token - executing activity
2023-09-01 07:57:09.665|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 07:57:11.061|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 07:57:11.687|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 07:57:12.289|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 07:57:12.927|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 07:57:13.528|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:57:14.136|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 07:57:15.195|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:57:15.196|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:57:15.224|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 07:57:15.827|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 07:57:16.449|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 07:57:16.463|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:57:16.463|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 07:57:17.126|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 07:57:17.127|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 07:57:18.455|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 07:57:19.087|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 07:57:19.692|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 07:57:20.325|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 07:57:20.939|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 07:57:21.551|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 07:57:22.163|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:57:22.779|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 07:57:23.797|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:57:23.798|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:57:23.829|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 07:57:24.432|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 07:57:25.060|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 07:57:25.080|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:57:25.080|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 07:57:25.735|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 07:57:25.735|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(jSessionId, ${response}.cookies.JSESSIONID.value)
2023-09-01 07:57:26.387|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored '.value' as ${jSessionId}
2023-09-01 07:57:26.388|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token|Login Token - ending activity
2023-09-01 07:57:26.989|I|Thread-5|[GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Token] saving test scenario
2023-09-01 07:57:27.163|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post - executing test scenario
2023-09-01 07:57:27.164|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Set headers - executing activity
2023-09-01 07:57:27.164|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 07:57:27.801|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 07:57:27.801|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 07:57:28.455|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 07:57:28.456|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Set headers - ending activity
2023-09-01 07:57:28.457|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User - executing activity
2023-09-01 07:57:28.458|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 07:57:29.093|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 07:57:29.093|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|#  8|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 07:57:29.744|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|#  8|base.save(var,value)      - PASS stored 'test82824' as ${randomUsername}
2023-09-01 07:57:29.744|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|#  9|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 07:57:30.389|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|#  9|base.save(var,value)      - PASS stored '{
    "username": "test82824",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 07:57:30.390|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 10|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:57:30.995|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 10|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 07:57:32.023|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 10|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:57:32.025|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 10|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:57:32.093|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 10|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 07:57:32.093|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 11|base.verbose(text)        - executing verbose(text)(${response}.body)
2023-09-01 07:57:32.704|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 11|base.verbose(text)        - 
{"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3Q4MjgyNCIsInVzZXJpZCI6MTM1N30.w2z6dEQoxoR8FeSMWLl1Xf5bYohrK1xOfLi9Nn8wYhM"}
2023-09-01 07:57:32.707|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 11|base.verbose(text)        - PASS 
2023-09-01 07:57:32.708|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)([JSON(${response}.body) => extract(gkstatus)], 0)
2023-09-01 07:57:33.365|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 12|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:57:33.366|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 13|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 07:57:34.707|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:57:35.328|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:57:35.943|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:57:36.581|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1030 is less than or equal to 3000
2023-09-01 07:57:37.192|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:57:37.828|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:57:38.439|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:57:38.440|I|Thread-5|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GNUKhata\CreateUser.txt!=null)		=> MATCHED
2023-09-01 07:57:39.125|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 07:57:39.733|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:57:40.357|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:57:40.380|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User|# 13|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:57:40.381|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create User - ending activity
2023-09-01 07:57:40.381|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID - executing activity
2023-09-01 07:57:40.382|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 14|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 07:57:41.036|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 14|base.save(var,value)      - PASS stored '{
    "username": "test82824",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 07:57:41.037|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:57:41.641|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 07:57:42.689|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:57:42.690|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:57:42.752|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 07:57:42.753|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 16|base.assertEqual(expected - executing assertEqual(expected,actual)([JSON(${response}.body) => extract(gkstatus)], 1)
2023-09-01 07:57:43.410|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 16|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '1' = '1'
2023-09-01 07:57:43.412|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DuplicateUser.txt)
2023-09-01 07:57:44.766|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:57:45.402|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:57:46.010|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:57:46.651|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1049 is less than or equal to 3000
2023-09-01 07:57:47.252|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:57:47.891|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:57:48.497|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:57:48.500|I|Thread-5|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GNUKhata\DuplicateUser.txt!=null)		=> MATCHED
2023-09-01 07:57:49.120|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 07:57:49.726|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:57:50.345|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:57:50.374|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 17|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:57:50.375|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 18|ws.clearHeaders(headers)  - executing clearHeaders(headers)(Authorization,Cookie)
2023-09-01 07:57:50.981|I|Thread-5|removed nexial.ws.header.Authorization as HTTP Header; previous value=""
2023-09-01 07:57:50.982|I|Thread-5|removed nexial.ws.header.Cookie as HTTP Header; previous value=JSESSIONID=.value
2023-09-01 07:57:51.004|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID|# 18|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 07:57:51.005|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post|Create user with exisiting ID - ending activity
2023-09-01 07:57:51.599|I|Thread-5|[GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Post] saving test scenario
2023-09-01 07:57:51.772|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get - executing test scenario
2023-09-01 07:57:51.772|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get|Read Organisation details - executing activity
2023-09-01 07:57:51.773|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get|Read Organisation details|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${response})
2023-09-01 07:57:51.776|I|Thread-5|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 07:57:51.779|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get|Read Organisation details|#  5|ws.header(name,value)     - SKIPPED current step skipped: SkipIf(true)
2023-09-01 07:57:51.780|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get|Read Organisation details|#  6|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 07:57:51.780|I|Thread-5|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 07:57:51.781|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get|Read Organisation details|#  6|ws.assertReturnCode(var,r - SKIPPED current step skipped: SkipIf(true)
2023-09-01 07:57:51.781|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get|Read Organisation details|#  7|number.assertLesser(num1, - executing assertLesser(num1,num2)(${response}.elapsedTime, 3000)
2023-09-01 07:57:51.782|I|Thread-5|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 07:57:51.782|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get|Read Organisation details|#  7|number.assertLesser(num1, - SKIPPED current step skipped: SkipIf(true)
2023-09-01 07:57:51.782|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get|Read Organisation details - ending activity
2023-09-01 07:57:51.796|I|Thread-5|[GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001|Get] saving test scenario
2023-09-01 07:57:51.956|I|Thread-5|[20230901_075409] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 42292 ms
» Test Steps:     41
» Error(s):       0



2023-09-01 07:57:52.563|I|Thread-5|[20230901_075409] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 44662 ms
» Iterations:     [1] total 1
» Test Steps:     41
» Passed:         38
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_075707.001.xlsx



2023-09-01 07:57:52.563|I|Thread-5|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 07:57:53.356|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx] now completed
2023-09-01 07:57:53.358|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Account.data.xlsx
2023-09-01 07:57:53.434|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 07:57:53.435|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx] new thread started
2023-09-01 07:57:53.439|I|Thread-8|missing REQUIRED configuration; sms DISABLED!
2023-09-01 07:57:53.439|I|Thread-8|On-Demand Inspection detection enabled
2023-09-01 07:57:53.440|I|Thread-8|[20230901_075409] executing C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx with 1 iteration(s)
2023-09-01 07:57:53.440|I|Thread-8|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\captures
2023-09-01 07:57:53.440|I|Thread-8|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs
2023-09-01 07:57:53.664|I|Thread-8|[20230901_075409] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001.xlsx
2023-09-01 07:57:53.665|I|Thread-8|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Account.data.xlsx
2023-09-01 07:57:53.757|I|Thread-8|[20230901_075409] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001.xlsx
2023-09-01 07:57:54.017|I|Thread-8|STARTS
2023-09-01 07:57:55.033|I|Thread-8|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 07:57:55.033|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx' from 'Test Plan' step 7
2023-09-01 07:57:55.034|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 07:57:55.034|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token - executing test scenario
2023-09-01 07:57:55.035|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token - executing activity
2023-09-01 07:57:55.035|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 07:57:56.448|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 07:57:57.074|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 07:57:57.679|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 07:57:58.300|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 07:57:58.906|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:57:59.510|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 07:58:00.599|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:58:00.599|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:58:00.630|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 07:58:01.246|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 07:58:01.905|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 07:58:01.925|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:58:01.926|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 07:58:02.591|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 07:58:02.593|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 07:58:03.923|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 07:58:04.550|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 07:58:05.160|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 07:58:05.777|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 07:58:06.383|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 07:58:07.006|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 07:58:07.608|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:58:08.212|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 07:58:09.238|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:58:09.240|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:58:09.272|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 07:58:09.884|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 07:58:10.519|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 07:58:10.537|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:58:10.538|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 07:58:11.188|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 07:58:11.188|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token|Login Token - ending activity
2023-09-01 07:58:11.743|I|Thread-8|[GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Token] saving test scenario
2023-09-01 07:58:11.897|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get - executing test scenario
2023-09-01 07:58:11.898|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) - executing activity
2023-09-01 07:58:11.898|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:58:12.555|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:58:12.556|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 07:58:13.184|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 07:58:13.185|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:58:13.798|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 07:58:15.179|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:58:15.442|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:58:15.473|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 07:58:15.474|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:58:16.165|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:58:16.165|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  9|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Accounts.txt)
2023-09-01 07:58:17.525|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:58:18.158|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:58:18.761|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:58:19.394|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1645 is less than or equal to 3000
2023-09-01 07:58:19.999|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:58:20.621|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:58:21.237|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:58:21.238|I|Thread-8|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Account\\Accounts.txt!=null)		=> MATCHED
2023-09-01 07:58:21.950|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 07:58:22.561|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:58:23.187|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:58:23.209|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|#  9|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:58:23.210|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:58:23.862|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|# 10|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:58:23.863|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|# 11|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 07:58:24.468|I|Thread-8|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:58:24.489|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts)|# 11|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 07:58:24.490|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts (List of accounts) - ending activity
2023-09-01 07:58:24.490|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet - executing activity
2023-09-01 07:58:24.491|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 12|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:58:25.133|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 12|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:58:25.133|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 13|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts/spreadsheet?fystart=${fystart}&fyend=${fyend}&orgname=${orgname}&orgtype=${orgtype})
2023-09-01 07:58:25.783|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 13|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For Profit' as ${url}
2023-09-01 07:58:25.784|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:58:26.402|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For+Profit HTTP/1.1
2023-09-01 07:58:27.596|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:58:27.608|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For+Profit HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:58:27.643|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For Profit'
2023-09-01 07:58:27.644|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 15|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=4000
expectedContentType=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
)
2023-09-01 07:58:28.992|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:58:29.624|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:58:30.229|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:58:30.853|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1208 is less than or equal to 4000
2023-09-01 07:58:31.456|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:58:32.084|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
2023-09-01 07:58:32.692|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:58:32.692|I|Thread-8|evaluating flow control:	ProceedIf(!=null)		=> NOT MATCHED
2023-09-01 07:58:32.695|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 14|json.assertCorrectness(js - SKIPPED current step skipped: NOT TRUE(${schema} != null)
2023-09-01 07:58:33.301|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:58:34.010|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response
2023-09-01 07:58:34.162|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 15|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:58:34.163|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 16|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:58:34.828|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 16|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:58:34.829|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 17|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 07:58:35.438|I|Thread-8|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:58:35.474|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet|# 17|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 07:58:35.475|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get|Positive - accounts/Spreadsheet - ending activity
2023-09-01 07:58:36.180|I|Thread-8|[GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Get] saving test scenario
2023-09-01 07:58:36.283|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post - executing test scenario
2023-09-01 07:58:36.283|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Set headers - executing activity
2023-09-01 07:58:36.284|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:58:36.932|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:58:36.933|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Set headers - ending activity
2023-09-01 07:58:36.933|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation - executing activity
2023-09-01 07:58:36.934|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 07:58:37.565|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 07:58:37.566|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|#  7|base.save(var,value)      - executing save(var,value)(randomACname, test[NUMBER(${num})=>randomDigits(3)])
2023-09-01 07:58:38.218|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|#  7|base.save(var,value)      - PASS stored 'test550' as ${randomACname}
2023-09-01 07:58:38.219|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|#  8|base.save(var,value)      - executing save(var,value)(randomOrigin, createAccount[NUMBER(${num})=>randomDigits(1)])
2023-09-01 07:58:38.868|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|#  8|base.save(var,value)      - PASS stored 'createAccount0' as ${randomOrigin}
2023-09-01 07:58:38.869|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|#  9|base.save(var,value)      - executing save(var,value)(body, {
    "origin":"${randomOrigin}",
    "gkdata":{
        "accountname": "${randomACname}",
        "groupcode": 18,
        "openingbal": "0.00"
    }
})
2023-09-01 07:58:39.523|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|#  9|base.save(var,value)      - PASS stored '{
    "origin":"createAccount0",
    "gkdata":{
        "accountname": "test550",
        "groupcode": 18,
        "openingbal": "0.00"
    }
}' as ${body}
2023-09-01 07:58:39.524|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:58:40.133|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 07:58:41.158|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:58:41.159|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:58:41.203|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 07:58:41.204|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:58:41.894|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:58:41.894|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 12|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\AccountsPost.txt)
2023-09-01 07:58:43.262|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:58:43.910|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:58:44.519|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:58:45.155|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1025 is less than or equal to 3000
2023-09-01 07:58:45.771|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:58:46.396|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:58:47.010|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:58:47.011|I|Thread-8|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Account\\AccountsPost.txt!=null)		=> MATCHED
2023-09-01 07:58:47.644|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 07:58:48.246|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:58:48.869|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:58:48.906|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 12|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:58:48.906|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:58:49.549|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:58:49.549|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 14|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 07:58:50.158|I|Thread-8|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:58:50.165|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation|# 14|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 07:58:50.165|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post|Positive-Organisation - ending activity
2023-09-01 07:58:50.574|I|Thread-8|[GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001|Post] saving test scenario
2023-09-01 07:58:50.856|I|Thread-8|[20230901_075409] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 55821 ms
» Test Steps:     51
» Error(s):       0



2023-09-01 07:58:51.586|I|Thread-8|[20230901_075409] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 58148 ms
» Iterations:     [1] total 1
» Test Steps:     51
» Passed:         50
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.003,Account.20230901_075753.001.xlsx



2023-09-01 07:58:51.587|I|Thread-8|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 07:58:51.894|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx] now completed
2023-09-01 07:58:51.895|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\AuditLogs.data.xlsx
2023-09-01 07:58:51.959|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 07:58:51.960|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx] new thread started
2023-09-01 07:58:51.963|I|Thread-11|missing REQUIRED configuration; sms DISABLED!
2023-09-01 07:58:51.964|I|Thread-11|On-Demand Inspection detection enabled
2023-09-01 07:58:51.964|I|Thread-11|[20230901_075409] executing C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx with 1 iteration(s)
2023-09-01 07:58:51.965|I|Thread-11|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\captures
2023-09-01 07:58:51.965|I|Thread-11|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs
2023-09-01 07:58:52.098|I|Thread-11|[20230901_075409] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001.xlsx
2023-09-01 07:58:52.098|I|Thread-11|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\AuditLogs.data.xlsx
2023-09-01 07:58:52.158|I|Thread-11|[20230901_075409] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001.xlsx
2023-09-01 07:58:52.578|I|Thread-11|STARTS
2023-09-01 07:58:53.603|I|Thread-11|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 07:58:53.604|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx' from 'Test Plan' step 8
2023-09-01 07:58:53.605|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 07:58:53.606|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token - executing test scenario
2023-09-01 07:58:53.606|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token - executing activity
2023-09-01 07:58:53.606|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 07:58:54.972|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 07:58:55.597|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 07:58:56.205|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 07:58:56.849|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 07:58:57.464|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:58:58.068|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 07:58:59.154|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:58:59.155|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:58:59.190|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 07:58:59.797|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 07:59:00.417|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 07:59:00.437|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:59:00.437|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 07:59:01.110|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 07:59:01.111|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 07:59:01.712|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 07:59:01.715|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 07:59:01.717|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 07:59:03.076|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 07:59:03.715|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 07:59:04.326|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 07:59:04.945|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 07:59:05.549|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 07:59:06.174|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 07:59:06.780|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:59:07.386|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 07:59:08.438|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 07:59:08.439|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:59:08.476|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 07:59:09.079|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 07:59:09.720|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 07:59:09.746|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:59:09.746|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 07:59:10.398|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 07:59:10.399|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 07:59:11.014|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:59:11.016|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 07:59:11.017|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token|Login Token - ending activity
2023-09-01 07:59:11.598|I|Thread-11|[GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Token] saving test scenario
2023-09-01 07:59:11.703|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get - executing test scenario
2023-09-01 07:59:11.704|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log - executing activity
2023-09-01 07:59:11.704|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  5|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}log)
2023-09-01 07:59:12.336|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  5|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/log' as ${url}
2023-09-01 07:59:12.337|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:59:12.941|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log HTTP/1.1
2023-09-01 07:59:13.738|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:59:13.740|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:59:13.765|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log'
2023-09-01 07:59:13.766|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  7|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:59:14.416|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  7|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 07:59:14.417|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 07:59:15.810|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:59:16.441|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:59:17.055|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:59:17.701|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 799 is less than or equal to 3000
2023-09-01 07:59:18.308|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:59:18.949|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:59:19.558|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:59:19.559|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 07:59:20.174|I|Thread-11|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt"; line: 1, column: 2]
2023-09-01 07:59:20.176|I|Thread-11|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:59:20.194|E|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt"; line: 1, column: 2]
2023-09-01 07:59:20.802|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:59:21.417|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:59:21.439|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:59:21.439|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  9|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 07:59:22.092|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log|#  9|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 07:59:22.092|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /log - ending activity
2023-09-01 07:59:22.093|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log - executing activity
2023-09-01 07:59:22.093|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 10|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:59:22.741|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 10|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:59:22.741|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:59:23.350|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log HTTP/1.1
2023-09-01 07:59:24.097|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:59:24.098|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:59:24.128|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log'
2023-09-01 07:59:24.128|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 12|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:59:24.781|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 12|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:59:24.782|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 13|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\AuditLogs.txt)
2023-09-01 07:59:26.116|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:59:26.745|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:59:27.359|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:59:27.983|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 749 is less than or equal to 3000
2023-09-01 07:59:28.599|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:59:29.223|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:59:29.833|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:59:29.834|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\AuditLogs\\AuditLogs.txt!=null)		=> MATCHED
2023-09-01 07:59:30.454|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 07:59:31.066|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:59:31.681|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:59:31.696|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 13|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:59:31.697|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 14|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:59:32.318|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log|# 14|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:59:32.318|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive - /log - ending activity
2023-09-01 07:59:32.318|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate - executing activity
2023-09-01 07:59:32.318|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 15|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 07:59:32.920|I|Thread-11|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 07:59:32.921|I|Thread-11|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:59:32.960|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 15|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 07:59:32.961|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 16|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}log/dateRange?from=${fromDate}&to=${toDate})
2023-09-01 07:59:33.601|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 16|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30' as ${url}
2023-09-01 07:59:33.601|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:59:34.204|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1
2023-09-01 07:59:35.006|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:59:35.007|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:59:35.046|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30'
2023-09-01 07:59:35.047|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 18|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:59:35.686|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 18|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 07:59:35.687|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 19|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 07:59:37.047|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:59:37.678|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:59:38.284|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:59:38.909|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - PASS 804 is less than or equal to 3000
2023-09-01 07:59:39.521|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:59:40.147|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:59:40.762|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:59:40.763|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 07:59:41.613|I|Thread-11|Error reading as file 'C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt': Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt"; line: 1, column: 2]
2023-09-01 07:59:41.613|I|Thread-11|cancelled taking screenshot; agent/driver not ready.
2023-09-01 07:59:41.621|E|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - FAIL Unable to retrieve JSON schema: Unrecognized token 'C': was expecting (JSON String, Number, Array, Object or token 'null', 'true' or 'false')
 at [Source: (String)"C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt"; line: 1, column: 2]
2023-09-01 07:59:42.231|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:59:42.846|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:59:42.856|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 19|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:59:42.857|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 20|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 07:59:43.493|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate|# 20|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 07:59:43.493|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Negative - /logs/rangedate - ending activity
2023-09-01 07:59:43.493|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate - executing activity
2023-09-01 07:59:43.493|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 21|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 07:59:44.160|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 21|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 07:59:44.161|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 22|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:59:44.792|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 22|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:59:44.793|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 07:59:45.396|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1
2023-09-01 07:59:46.329|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 07:59:46.330|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 07:59:46.372|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30'
2023-09-01 07:59:46.372|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 07:59:47.004|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 24|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 07:59:47.005|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 25|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DateRangePositiveResponse.txt)
2023-09-01 07:59:48.381|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 07:59:49.009|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 07:59:49.612|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 07:59:50.243|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - PASS 934 is less than or equal to 3000
2023-09-01 07:59:50.852|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 07:59:51.472|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 07:59:52.080|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 07:59:52.081|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\AuditLogs\\DateRangePositiveResponse.txt!=null)		=> MATCHED
2023-09-01 07:59:52.707|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 07:59:53.308|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 07:59:53.932|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 07:59:53.952|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 25|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 07:59:53.953|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 07:59:54.587|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 26|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 07:59:54.588|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 27|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 07:59:55.200|I|Thread-11|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 07:59:55.200|I|Thread-11|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:59:55.217|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate|# 27|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 07:59:55.218|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get|Positive -  /logs/rangedate - ending activity
2023-09-01 07:59:56.757|I|Thread-11|[GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Get] saving test scenario
2023-09-01 07:59:56.947|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post - executing test scenario
2023-09-01 07:59:56.947|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers - executing activity
2023-09-01 07:59:56.947|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 07:59:57.581|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 07:59:57.582|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}log)
2023-09-01 07:59:58.268|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/log' as ${url}
2023-09-01 07:59:58.273|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  7|base.save(var,value)      - executing save(var,value)(body, {
"activity": "3% Milk Fat product created"
})
2023-09-01 07:59:59.089|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  7|base.save(var,value)      - PASS stored '{
"activity": "3% Milk Fat product created"
}' as ${body}
2023-09-01 07:59:59.091|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  8|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 07:59:59.698|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  8|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/log HTTP/1.1
2023-09-01 08:00:00.748|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  8|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:00:00.749|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  8|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/log HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:00:00.784|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  8|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log'
2023-09-01 08:00:00.784|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:00:01.420|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|#  9|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:00:01.421|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\createlog.txt)
2023-09-01 08:00:02.771|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:00:03.388|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:00:04.001|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:00:04.617|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1051 is less than or equal to 3000
2023-09-01 08:00:05.232|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:00:05.849|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:00:06.457|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:00:06.459|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\AuditLogs\\createlog.txt!=null)		=> MATCHED
2023-09-01 08:00:07.097|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:00:07.707|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:00:08.320|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:00:08.331|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:00:08.331|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:00:08.963|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:00:08.963|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|# 12|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:00:09.572|I|Thread-11|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:00:09.583|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers|# 12|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:00:09.584|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post|Set headers - ending activity
2023-09-01 08:00:09.848|I|Thread-11|[GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001|Post] saving test scenario
2023-09-01 08:00:09.981|I|Thread-11|[20230901_075409] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 76375 ms
» Test Steps:     71
» Error(s):       2



2023-09-01 08:00:10.422|I|Thread-11|[20230901_075409] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 78459 ms
» Iterations:     [1] total 1
» Test Steps:     71
» Passed:         69
» Error(s):       2
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_075851.001.xlsx



2023-09-01 08:00:10.423|I|Thread-11|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:00:10.626|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx] now completed
2023-09-01 08:00:10.626|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\CustomerandSupplier.data.xlsx
2023-09-01 08:00:10.661|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 08:00:10.661|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx] new thread started
2023-09-01 08:00:10.665|I|Thread-14|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:00:10.666|I|Thread-14|On-Demand Inspection detection enabled
2023-09-01 08:00:10.666|I|Thread-14|[20230901_075409] executing C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx with 1 iteration(s)
2023-09-01 08:00:10.666|I|Thread-14|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\captures
2023-09-01 08:00:10.667|I|Thread-14|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs
2023-09-01 08:00:10.858|I|Thread-14|[20230901_075409] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001.xlsx
2023-09-01 08:00:10.858|I|Thread-14|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\CustomerandSupplier.data.xlsx
2023-09-01 08:00:10.954|I|Thread-14|[20230901_075409] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001.xlsx
2023-09-01 08:00:11.287|I|Thread-14|STARTS
2023-09-01 08:00:12.317|I|Thread-14|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:00:12.317|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx' from 'Test Plan' step 9
2023-09-01 08:00:12.318|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:00:12.318|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token - executing test scenario
2023-09-01 08:00:12.319|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token - executing activity
2023-09-01 08:00:12.320|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:00:13.674|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:00:14.294|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:00:14.906|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:00:15.529|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:00:16.138|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:00:16.744|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:00:17.783|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:00:17.784|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:00:17.805|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:00:18.418|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:00:19.037|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:00:19.051|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:00:19.052|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:00:19.679|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:00:19.680|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 08:00:20.289|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:00:20.291|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 08:00:20.291|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:00:21.630|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:00:22.256|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:00:22.858|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:00:23.469|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:00:24.082|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:00:24.695|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:00:25.308|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:00:25.916|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:00:26.955|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:00:26.955|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:00:26.983|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:00:27.593|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:00:28.225|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:00:28.240|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:00:28.240|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:00:28.870|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:00:28.871|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 08:00:29.473|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:00:29.474|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 08:00:29.474|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token|Login Token - ending activity
2023-09-01 08:00:29.960|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|Token] saving test scenario
2023-09-01 08:00:30.105|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST - executing test scenario
2023-09-01 08:00:30.105|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Set headers - executing activity
2023-09-01 08:00:30.105|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:00:30.746|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:00:30.748|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Set headers - ending activity
2023-09-01 08:00:30.748|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer - executing activity
2023-09-01 08:00:30.748|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  6|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:00:31.385|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  6|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:00:31.386|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  7|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(11, -1)
2023-09-01 08:00:31.996|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:00:31.996|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${csflag}))
2023-09-01 08:00:32.604|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - executing save(var,value)(cstflag, $(array|item|${csflag}|${counter}))
2023-09-01 08:00:33.212|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored '3' as ${cstflag}
2023-09-01 08:00:33.212|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - executing save(var,value)(randomCustname, test[NUMBER(${num})=>randomDigits(6)])
2023-09-01 08:00:33.819|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'test230236' as ${randomCustname}
2023-09-01 08:00:33.820|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer)
2023-09-01 08:00:34.423|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer' as ${url}
2023-09-01 08:00:34.423|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - executing save(var,value)(body, {
  "custname": "${randomCustname}",
  "custaddr": "string",
  "state": "${state}",
  "pincode": "string",
  "csflag": ${cstflag},
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
})
2023-09-01 08:00:35.029|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - [repeat-until] PASS stored '{
  "custname": "test230236",
  "custaddr": "string",
  "state": "Karnataka",
  "pincode": "string",
  "csflag": 3,
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
}' as ${body}
2023-09-01 08:00:35.031|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:00:35.645|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/customer HTTP/1.1
2023-09-01 08:00:36.658|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:00:36.659|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/customer HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:00:36.664|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer'
2023-09-01 08:00:36.664|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:00:37.269|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 02:30:35 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1015
body={"gkstatus": 0, "gkresult": {"custid": 742}}
2023-09-01 08:00:37.270|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 02:30:35 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1015
body={"gkstatus": 0, "gkresult": {"custid": 742}}
2023-09-01 08:00:37.270|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:00:37.876|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:00:37.877|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PostCustomer.customer.txt)
2023-09-01 08:00:39.213|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:00:39.820|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:00:40.421|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:00:41.026|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1015 is less than or equal to 3000
2023-09-01 08:00:41.633|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:00:42.239|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:00:42.848|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:00:42.849|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\PostCustomer.customer.txt!=null)		=> MATCHED
2023-09-01 08:00:43.460|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:00:44.063|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:00:44.669|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:00:44.669|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:00:44.670|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:00:45.279|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:00:45.280|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:00:45.883|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:00:45.884|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:00:45.884|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${csflag}))
2023-09-01 08:00:46.489|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - executing save(var,value)(cstflag, $(array|item|${csflag}|${counter}))
2023-09-01 08:00:47.095|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored '19' as ${cstflag}
2023-09-01 08:00:47.095|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - executing save(var,value)(randomCustname, test[NUMBER(${num})=>randomDigits(6)])
2023-09-01 08:00:47.704|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'test131898' as ${randomCustname}
2023-09-01 08:00:47.704|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer)
2023-09-01 08:00:48.308|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer' as ${url}
2023-09-01 08:00:48.309|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - executing save(var,value)(body, {
  "custname": "${randomCustname}",
  "custaddr": "string",
  "state": "${state}",
  "pincode": "string",
  "csflag": ${cstflag},
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
})
2023-09-01 08:00:48.916|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - [repeat-until] PASS stored '{
  "custname": "test131898",
  "custaddr": "string",
  "state": "Karnataka",
  "pincode": "string",
  "csflag": 19,
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
}' as ${body}
2023-09-01 08:00:48.917|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:00:49.524|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/customer HTTP/1.1
2023-09-01 08:00:50.501|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:00:50.502|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/customer HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:00:50.505|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer'
2023-09-01 08:00:50.506|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:00:51.119|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 02:30:49 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=978
body={"gkstatus": 0, "gkresult": {"custid": 743}}
2023-09-01 08:00:51.120|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 02:30:49 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=978
body={"gkstatus": 0, "gkresult": {"custid": 743}}
2023-09-01 08:00:51.120|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:00:51.731|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:00:51.732|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PostCustomer.customer.txt)
2023-09-01 08:00:53.106|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:00:53.716|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:00:54.320|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:00:54.925|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 978 is less than or equal to 3000
2023-09-01 08:00:55.537|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:00:56.144|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:00:56.751|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:00:56.752|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\PostCustomer.customer.txt!=null)		=> MATCHED
2023-09-01 08:00:57.369|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:00:57.983|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:00:58.595|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:00:58.597|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:00:58.598|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:00:59.207|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:00:59.208|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:00:59.809|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:00:59.810|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:00:59.810|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${csflag}))
2023-09-01 08:01:00.455|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer|#  7|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:01:00.456|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST|Create a new customer / supplier : POST- /customer - ending activity
2023-09-01 08:01:00.490|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|POST] saving test scenario
2023-09-01 08:01:00.592|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET - executing test scenario
2023-09-01 08:01:00.593|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Set headers - executing activity
2023-09-01 08:01:00.593|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:01:01.244|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:01:01.245|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Set headers - ending activity
2023-09-01 08:01:01.245|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer - executing activity
2023-09-01 08:01:01.246|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  6|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:01:01.883|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  6|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:01:01.883|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  7|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(11, -1)
2023-09-01 08:01:02.493|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:01:02.494|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${qty}))
2023-09-01 08:01:03.099|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - executing save(var,value)(csqty, $(array|item|${qty}|${counter}))
2023-09-01 08:01:03.709|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored 'custall' as ${csqty}
2023-09-01 08:01:03.711|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer?qty=${csqty})
2023-09-01 08:01:04.323|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer?qty=custall' as ${url}
2023-09-01 08:01:04.326|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:01:04.929|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer?qty=custall HTTP/1.1
2023-09-01 08:01:05.723|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:01:05.724|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer?qty=custall HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:01:05.728|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer?qty=custall'
2023-09-01 08:01:05.729|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:01:06.337|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=558, Date=Fri, 01 Sep 2023 02:31:04 GMT, Content-Type=application/json}
contentLength=558
elapsedTime=795
body={"gkstatus": 0, "gkresult": [{"custid": 583, "custname": "Cust32142"}, {"custid": 733, "custname": "Customer1"}, {"custid": 581, "custname": "Customer3214"}, {"custid": 574, "custname": "Retail Customer (Default)"}, {"custid": 586, "custname": "test225816"}, {"custid": 742, "custname": "test230236"}, {"custid": 584, "custname": "test410794"}, {"custid": 588, "custname": "test519863"}, {"custid": 580, "custname": "test532628"}, {"custid": 576, "custname": "test5628"}, {"custid": 575, "custname...
2023-09-01 08:01:06.338|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=558, Date=Fri, 01 Sep 2023 02:31:04 GMT, Content-Type=application/json}
contentLength=558
elapsedTime=795
body={"gkstatus": 0, "gkresult": [{"custid": 583, "custname": "Cust32142"}, {"custid": 733, "custname": "Customer1"}, {"custid": 581, "custname": "Customer3214"}, {"custid": 574, "custname": "Retail Customer (Default)"}, {"custid": 586, "custname": "test225816"}, {"custid": 742, "custname": "test230236"}, {"custid": 584, "custname": "test410794"}, {"custid": 588, "custname": "test519863"}, {"custid": 580, "custname": "test532628"}, {"custid": 576, "custname": "test5628"}, {"custid": 575, "custname...
2023-09-01 08:01:06.339|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:01:06.942|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:01:06.943|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - executing save(var,value)(custid, [JSON(${response}.body) => extract(gkresult[0].custid)])
2023-09-01 08:01:07.552|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - [repeat-until] PASS stored '583' as ${custid}
2023-09-01 08:01:07.553|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - executing save(var,value)(custname, [JSON(${response}.body) => extract(gkresult[0].custname)])
2023-09-01 08:01:08.170|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored 'Cust32142' as ${custname}
2023-09-01 08:01:08.171|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.customer.txt)
2023-09-01 08:01:09.511|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:01:10.115|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:01:10.730|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:01:11.344|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 795 is less than or equal to 3000
2023-09-01 08:01:11.946|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:01:12.557|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:01:13.161|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:01:13.162|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\Get.customer.txt!=null)		=> MATCHED
2023-09-01 08:01:13.774|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:01:14.376|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:01:14.980|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:01:14.981|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:01:14.981|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:01:15.589|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:01:15.589|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:01:16.195|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:01:16.195|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:01:16.196|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${qty}))
2023-09-01 08:01:16.799|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - executing save(var,value)(csqty, $(array|item|${qty}|${counter}))
2023-09-01 08:01:17.415|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored 'supall' as ${csqty}
2023-09-01 08:01:17.416|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer?qty=${csqty})
2023-09-01 08:01:18.018|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer?qty=supall' as ${url}
2023-09-01 08:01:18.019|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:01:18.632|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer?qty=supall HTTP/1.1
2023-09-01 08:01:19.421|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:01:19.422|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer?qty=supall HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:01:19.429|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer?qty=supall'
2023-09-01 08:01:19.430|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:01:20.034|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=385, Date=Fri, 01 Sep 2023 02:31:17 GMT, Content-Type=application/json}
contentLength=385
elapsedTime=791
body={"gkstatus": 0, "gkresult": [{"custid": 582, "custname": "Cust43242"}, {"custid": 573, "custname": "Retail Supplier (Default)"}, {"custid": 734, "custname": "Supplier"}, {"custid": 743, "custname": "test131898"}, {"custid": 589, "custname": "test349080"}, {"custid": 591, "custname": "test744388"}, {"custid": 587, "custname": "test784299"}, {"custid": 585, "custname": "test881814"}]}
2023-09-01 08:01:20.035|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=385, Date=Fri, 01 Sep 2023 02:31:17 GMT, Content-Type=application/json}
contentLength=385
elapsedTime=791
body={"gkstatus": 0, "gkresult": [{"custid": 582, "custname": "Cust43242"}, {"custid": 573, "custname": "Retail Supplier (Default)"}, {"custid": 734, "custname": "Supplier"}, {"custid": 743, "custname": "test131898"}, {"custid": 589, "custname": "test349080"}, {"custid": 591, "custname": "test744388"}, {"custid": 587, "custname": "test784299"}, {"custid": 585, "custname": "test881814"}]}
2023-09-01 08:01:20.036|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:01:20.647|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:01:20.648|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - executing save(var,value)(custid, [JSON(${response}.body) => extract(gkresult[0].custid)])
2023-09-01 08:01:21.251|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - [repeat-until] PASS stored '582' as ${custid}
2023-09-01 08:01:21.252|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - executing save(var,value)(custname, [JSON(${response}.body) => extract(gkresult[0].custname)])
2023-09-01 08:01:21.856|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored 'Cust43242' as ${custname}
2023-09-01 08:01:21.857|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.customer.txt)
2023-09-01 08:01:23.180|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:01:23.791|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:01:24.407|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:01:25.015|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 791 is less than or equal to 3000
2023-09-01 08:01:25.622|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:01:26.228|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:01:26.841|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:01:26.843|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\Get.customer.txt!=null)		=> MATCHED
2023-09-01 08:01:27.459|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:01:28.073|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:01:28.679|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:01:28.681|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:01:28.681|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:01:29.286|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:01:29.287|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:01:29.888|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:01:29.890|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:01:29.890|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${qty}))
2023-09-01 08:01:30.509|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer|#  7|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:01:30.512|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer - ending activity
2023-09-01 08:01:30.512|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts - executing activity
2023-09-01 08:01:30.512|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 08:01:31.143|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 19|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 08:01:31.143|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:01:31.755|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 08:01:33.489|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:01:33.759|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:01:33.771|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 08:01:33.772|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 21|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:01:34.381|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 21|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=53603, Date=Fri, 01 Sep 2023 02:31:31 GMT, Content-Type=application/json}
contentLength=53603
elapsedTime=2004
body={"gkstatus": 0, "gkresult": [{"srno": 1, "accountcode": 5217, "accountname": "Accumulated Depreciation", "openingbal": "0.00", "groupcode": 5107, "groupname": "Fixed Assets", "subgroupcode": "", "subgroupname": "", "sysaccount": 0, "defaultflag": ""}, {"srno": 2, "accountcode": 8174, "accountname": "BCA Purchase", "openingbal": "0.00", "groupcode": 1653, "groupname": "Direct Expense", "subgroupcode": 1654, "subgroupname": "Purchase", "sysaccount": 1, "defaultflag": ""}, {"srno": 3, "accountco...
2023-09-01 08:01:34.383|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 21|base.verbose(text)        - PASS 
2023-09-01 08:01:34.384|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 22|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:01:35.022|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 22|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:01:35.022|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 23|base.save(var,value)      - executing save(var,value)(accountcode, [JSON(${response}.body) => extract(gkresult[8].accountcode)])
2023-09-01 08:01:35.690|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 23|base.save(var,value)      - PASS stored '8208' as ${accountcode}
2023-09-01 08:01:35.692|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 24|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:01:36.344|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts|# 24|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:01:36.345|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get accountcode: GET- /accounts - ending activity
2023-09-01 08:01:36.346|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} - executing activity
2023-09-01 08:01:36.346|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 25|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/search/account/${accountcode})
2023-09-01 08:01:36.977|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 25|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/search/account/8208' as ${url}
2023-09-01 08:01:36.978|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:01:37.584|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer/search/account/8208 HTTP/1.1
2023-09-01 08:01:38.371|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:01:38.372|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer/search/account/8208 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:01:38.404|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/search/account/8208'
2023-09-01 08:01:38.405|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 27|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:01:39.010|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 27|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 02:31:36 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=788
body={"gkstatus": 3}
2023-09-01 08:01:39.012|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 27|base.verbose(text)        - PASS 
2023-09-01 08:01:39.012|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 28|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:01:39.655|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 28|base.save(var,value)      - PASS stored '3' as ${actualGkStatus}
2023-09-01 08:01:39.655|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 29|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetAccountcode.customer.txt)
2023-09-01 08:01:40.979|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:01:41.605|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:01:42.206|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:01:42.845|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 788 is less than or equal to 3000
2023-09-01 08:01:43.453|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:01:44.067|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:01:44.680|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:01:44.681|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\GetAccountcode.customer.txt!=null)		=> MATCHED
2023-09-01 08:01:45.328|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:01:45.934|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:01:46.560|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:01:46.587|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 29|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:01:46.588|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 30|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:01:47.197|I|Thread-14|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:01:47.235|E|Thread-14|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001.xlsx_GET_A30.log
2023-09-01 08:01:47.235|E|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 30|base.assertEqual(expected - FAIL 
expected=0
actual  =3
2023-09-01 08:01:47.236|E|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 30|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001.xlsx_GET_A30.log
2023-09-01 08:01:47.236|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} - ending activity
2023-09-01 08:01:47.236|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} - executing activity
2023-09-01 08:01:47.237|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 31|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/search/name/${custname})
2023-09-01 08:01:47.873|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 31|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/search/name/Cust43242' as ${url}
2023-09-01 08:01:47.874|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:01:48.487|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer/search/name/Cust43242 HTTP/1.1
2023-09-01 08:01:49.272|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:01:49.273|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer/search/name/Cust43242 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:01:49.299|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/search/name/Cust43242'
2023-09-01 08:01:49.300|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 33|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:01:49.914|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 33|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=486, Date=Fri, 01 Sep 2023 02:31:47 GMT, Content-Type=application/json}
contentLength=486
elapsedTime=785
body={"gkstatus": 0, "gkresult": {"custid": 582, "custname": "Cust43242", "custaddr": "string", "custphone": "string", "custemail": "string", "custfax": "string", "custpan": "string", "custtan": "string", "state": "Karnataka", "custdoc": null, "csflag": 19, "gstin": {"10": "10AABCU9603R1Z2"}, "pincode": "string", "bankdetails": {"ifsc": "string", "bankname": "string", "accountno": "string", "branchname": "string"}, "statelist": [{"10": "Bihar"}], "gst_reg_type": 0, "gst_party_type": 0}}
2023-09-01 08:01:49.917|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 33|base.verbose(text)        - PASS 
2023-09-01 08:01:49.917|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 34|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:01:50.581|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 34|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:01:50.582|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetCustname.customer.txt)
2023-09-01 08:01:51.937|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:01:52.559|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:01:53.167|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:01:53.792|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 785 is less than or equal to 3000
2023-09-01 08:01:54.407|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:01:55.027|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:01:55.633|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:01:55.635|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\GetCustname.customer.txt!=null)		=> MATCHED
2023-09-01 08:01:56.266|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:01:56.876|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:01:57.504|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:01:57.523|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 35|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:01:57.524|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:01:58.156|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 36|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:01:58.157|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} - ending activity
2023-09-01 08:01:58.157|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} - executing activity
2023-09-01 08:01:58.157|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 37|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/${custid})
2023-09-01 08:01:58.786|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 37|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/582' as ${url}
2023-09-01 08:01:58.786|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:01:59.395|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer/582 HTTP/1.1
2023-09-01 08:02:00.189|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:02:00.190|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer/582 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:02:00.211|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/582'
2023-09-01 08:02:00.212|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 39|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:02:00.823|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 39|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=507, Date=Fri, 01 Sep 2023 02:31:58 GMT, Content-Type=application/json}
contentLength=507
elapsedTime=795
body={"gkstatus": 0, "gkresult": {"custid": 582, "custname": "Cust43242", "custaddr": "string", "custphone": "string", "custemail": "string", "custfax": "string", "custpan": "string", "custtan": "string", "state": "Karnataka", "custdoc": null, "csflag": 19, "gstin": {"10": "10AABCU9603R1Z2"}, "pincode": "string", "bankdetails": {"ifsc": "string", "bankname": "string", "accountno": "string", "branchname": "string"}, "statelist": [{"29": "Karnataka"}, {"10": "Bihar"}], "gst_reg_type": 0, "gst_party_...
2023-09-01 08:02:00.823|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 39|base.verbose(text)        - PASS 
2023-09-01 08:02:00.825|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 40|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:02:01.490|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 40|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:02:01.491|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 41|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetCustId.customer.txt)
2023-09-01 08:02:02.870|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:02:03.510|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:02:04.117|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:02:04.752|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 795 is less than or equal to 3000
2023-09-01 08:02:05.366|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:02:06.014|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:02:06.630|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:02:06.630|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\GetCustId.customer.txt!=null)		=> MATCHED
2023-09-01 08:02:07.259|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:02:07.863|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:02:08.473|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:02:08.489|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 41|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:02:08.489|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 42|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:02:09.154|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 42|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:02:09.155|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} - ending activity
2023-09-01 08:02:10.109|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|GET] saving test scenario
2023-09-01 08:02:10.387|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT - executing test scenario
2023-09-01 08:02:10.388|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Set headers - executing activity
2023-09-01 08:02:10.388|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:02:11.049|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:02:11.050|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Set headers|#  6|base.save(var,value)      - executing save(var,value)(pincode, [NUMBER(${num})=>randomDigits(6)])
2023-09-01 08:02:11.701|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Set headers|#  6|base.save(var,value)      - PASS stored '121289' as ${pincode}
2023-09-01 08:02:11.702|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Set headers - ending activity
2023-09-01 08:02:11.703|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} - executing activity
2023-09-01 08:02:11.703|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  7|base.save(var,value)      - executing save(var,value)(body, {
  "custid": ${putcustid},
  "custdoc": {},
  "custname": "${putcustname}",
  "custaddr": "string",
  "state": "${state}",
  "pincode": "${pincode}",
  "csflag": $(array|item|${csflag}|0),
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
})
2023-09-01 08:02:12.345|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  7|base.save(var,value)      - PASS stored '{
  "custid": 30,
  "custdoc": {},
  "custname": "Cust54536",
  "custaddr": "string",
  "state": "Karnataka",
  "pincode": "121289",
  "csflag": 3,
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
}' as ${body}
2023-09-01 08:02:12.345|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  8|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/${putcustid})
2023-09-01 08:02:12.971|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  8|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/30' as ${url}
2023-09-01 08:02:12.971|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 08:02:13.577|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/customer/30 HTTP/1.1
2023-09-01 08:02:14.627|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 08:02:14.627|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/customer/30 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:02:14.676|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/30'
2023-09-01 08:02:14.678|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 10|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:02:15.289|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 10|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 02:32:13 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1050
body={"gkstatus": 0}
2023-09-01 08:02:15.290|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 10|base.verbose(text)        - PASS 
2023-09-01 08:02:15.291|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:02:15.933|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:02:15.934|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 12|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PutCustid.customer.txt)
2023-09-01 08:02:17.289|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:02:17.921|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:02:18.526|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:02:19.146|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1050 is less than or equal to 3000
2023-09-01 08:02:19.757|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:02:20.362|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:02:20.972|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:02:20.974|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\PutCustid.customer.txt!=null)		=> MATCHED
2023-09-01 08:02:21.598|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:02:22.206|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:02:22.826|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:02:22.837|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 12|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:02:22.837|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:02:23.464|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:02:23.464|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} - ending activity
2023-09-01 08:02:23.709|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|PUT] saving test scenario
2023-09-01 08:02:23.844|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE - executing test scenario
2023-09-01 08:02:23.844|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Set headers - executing activity
2023-09-01 08:02:23.845|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:02:24.469|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:02:24.470|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Set headers - ending activity
2023-09-01 08:02:24.470|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} - executing activity
2023-09-01 08:02:24.471|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/${deletecustid})
2023-09-01 08:02:25.098|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/33' as ${url}
2023-09-01 08:02:25.098|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, , response)
2023-09-01 08:02:25.710|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org/customer/33 HTTP/1.1
2023-09-01 08:02:26.507|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 08:02:26.508|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org/customer/33 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:02:26.521|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/33'
2023-09-01 08:02:26.522|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  8|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:02:27.128|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  8|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 02:32:25 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=799
body={"gkstatus": 0}
2023-09-01 08:02:27.129|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  8|base.verbose(text)        - PASS 
2023-09-01 08:02:27.129|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:02:27.759|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  9|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:02:27.760|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeleteCustid.customer.txt)
2023-09-01 08:02:29.092|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:02:29.717|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:02:30.320|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:02:30.938|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 799 is less than or equal to 3000
2023-09-01 08:02:31.542|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:02:32.163|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:02:32.773|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:02:32.775|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\DeleteCustid.customer.txt!=null)		=> MATCHED
2023-09-01 08:02:33.402|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:02:34.016|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:02:34.641|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:02:34.662|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:02:34.663|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:02:35.314|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:02:35.315|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} - ending activity
2023-09-01 08:02:35.649|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001|DELETE] saving test scenario
2023-09-01 08:02:35.836|I|Thread-14|[20230901_075409] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 143517 ms
» Test Steps:     150
» Error(s):       1



2023-09-01 08:02:36.328|I|Thread-14|[20230901_075409] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 145662 ms
» Iterations:     [1] total 1
» Test Steps:     150
» Passed:         149
» Error(s):       1
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_080010.001.xlsx



2023-09-01 08:02:36.328|I|Thread-14|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:02:36.962|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx] now completed
2023-09-01 08:02:36.962|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\DeliveryNote.data.xlsx
2023-09-01 08:02:37.022|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 08:02:37.022|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx] new thread started
2023-09-01 08:02:37.027|I|Thread-17|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:02:37.027|I|Thread-17|On-Demand Inspection detection enabled
2023-09-01 08:02:37.028|I|Thread-17|[20230901_075409] executing C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx with 1 iteration(s)
2023-09-01 08:02:37.028|I|Thread-17|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\captures
2023-09-01 08:02:37.029|I|Thread-17|[20230901_075409] create directory C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs
2023-09-01 08:02:37.276|I|Thread-17|[20230901_075409] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx
2023-09-01 08:02:37.277|I|Thread-17|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\DeliveryNote.data.xlsx
2023-09-01 08:02:37.348|I|Thread-17|[20230901_075409] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx
2023-09-01 08:02:37.668|I|Thread-17|STARTS
2023-09-01 08:02:37.673|I|Thread-17|skipping test step in ROW 45 since it's disabled
2023-09-01 08:02:37.675|I|Thread-17|skipping test step in ROW 46 since it's disabled
2023-09-01 08:02:37.684|I|Thread-17|skipping test step in ROW 51 since it's disabled
2023-09-01 08:02:37.686|I|Thread-17|skipping test step in ROW 52 since it's disabled
2023-09-01 08:02:37.689|I|Thread-17|skipping test step in ROW 64 since it's disabled
2023-09-01 08:02:37.690|I|Thread-17|skipping test step in ROW 68 since it's disabled
2023-09-01 08:02:37.692|I|Thread-17|skipping test step in ROW 83 since it's disabled
2023-09-01 08:02:37.692|I|Thread-17|skipping test step in ROW 84 since it's disabled
2023-09-01 08:02:38.721|I|Thread-17|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:02:38.722|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx' from 'Test Plan' step 10
2023-09-01 08:02:38.722|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:02:38.723|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token - executing test scenario
2023-09-01 08:02:38.723|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token - executing activity
2023-09-01 08:02:38.723|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:02:40.100|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:02:40.722|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:02:41.336|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:02:41.959|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:02:42.568|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:02:43.179|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:02:44.268|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:02:44.270|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:02:44.300|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:02:44.911|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:02:45.541|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:02:45.557|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:02:45.558|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:02:46.219|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:02:46.220|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 08:02:46.835|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:02:46.837|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 08:02:46.838|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:02:48.165|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:02:48.819|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:02:49.432|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:02:50.058|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:02:50.670|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:02:51.285|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:02:51.893|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:02:52.507|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:02:53.566|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:02:53.567|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:02:53.596|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:02:54.199|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:02:54.834|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:02:54.850|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:02:54.851|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:02:55.490|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:02:55.491|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 08:02:56.102|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:02:56.103|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 08:02:56.105|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token|Login Token - ending activity
2023-09-01 08:02:56.435|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Token] saving test scenario
2023-09-01 08:02:56.536|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get - executing test scenario
2023-09-01 08:02:56.536|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log - executing activity
2023-09-01 08:02:56.536|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  5|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:02:57.145|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:02:57.146|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=null
2023-09-01 08:02:57.155|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  5|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:02:57.156|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 08:02:57.776|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 08:02:57.777|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:02:58.388|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:02:59.172|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:02:59.173|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:02:59.201|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:02:59.202|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:02:59.830|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:02:59.831|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  9|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:03:00.441|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  9|base.verbose(text)        - 
0
2023-09-01 08:03:00.443|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|#  9|base.verbose(text)        - PASS 
2023-09-01 08:03:00.444|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:03:01.769|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:03:02.398|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:03:03.006|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:03:03.640|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 785 is less than or equal to 3000
2023-09-01 08:03:04.250|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:03:04.878|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:03:05.482|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:03:05.483|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:03:06.116|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:03:06.720|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:03:07.340|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:03:07.351|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:03:07.351|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:03:07.959|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:03:07.991|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A11.log
2023-09-01 08:03:07.992|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|# 11|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:03:07.992|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A11.log
2023-09-01 08:03:07.992|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /log - ending activity
2023-09-01 08:03:07.993|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log - executing activity
2023-09-01 08:03:07.993|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 12|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:03:08.626|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 12|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:03:08.627|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 13|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:03:09.264|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 13|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:03:09.265|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 14|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:03:09.883|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 14|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:03:10.653|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 14|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:03:10.655|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 14|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:03:10.684|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 14|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:03:10.685|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:03:11.327|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 15|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:03:11.327|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 16|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:03:11.929|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 16|base.verbose(text)        - 
2
2023-09-01 08:03:11.931|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 16|base.verbose(text)        - PASS 
2023-09-01 08:03:11.932|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:03:13.247|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:03:13.876|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:03:14.491|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:03:15.114|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 772 is less than or equal to 3000
2023-09-01 08:03:15.728|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:03:16.369|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:03:16.982|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:03:16.984|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:03:17.618|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:03:18.229|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:03:18.853|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:03:18.862|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 17|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:03:18.862|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:03:19.479|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:03:19.507|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A18.log
2023-09-01 08:03:19.507|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 18|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:03:19.507|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 18|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A18.log
2023-09-01 08:03:19.507|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 19|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:03:20.114|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:03:20.116|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:03:20.128|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log|# 19|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:03:20.129|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /log - ending activity
2023-09-01 08:03:20.129|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel - executing activity
2023-09-01 08:03:20.130|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 20|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/cancel?inputdate=${inputdate}&del_cancelled_type=${del_cancelled_type}&inout=${inout})
2023-09-01 08:03:20.775|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 20|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o' as ${url}
2023-09-01 08:03:20.776|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 21|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:03:21.387|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 21|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o HTTP/1.1
2023-09-01 08:03:22.182|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 21|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:03:22.184|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 21|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:03:22.212|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 21|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o'
2023-09-01 08:03:22.213|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 22|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:03:22.848|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 22|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:03:22.848|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 23|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:03:23.452|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 23|base.verbose(text)        - 
0
2023-09-01 08:03:23.455|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 23|base.verbose(text)        - PASS 
2023-09-01 08:03:23.455|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 24|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:03:24.785|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:03:25.408|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:03:26.011|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:03:26.633|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 12|number.assertLesserOrEqua - PASS 797 is less than or equal to 3000
2023-09-01 08:03:27.239|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:03:27.857|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:03:28.464|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:03:28.466|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:03:29.084|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:03:29.690|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:03:30.300|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:03:30.315|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 24|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:03:30.316|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 25|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:03:30.924|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:03:30.951|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A25.log
2023-09-01 08:03:30.951|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 25|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:03:30.951|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel|# 25|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A25.log
2023-09-01 08:03:30.953|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel - ending activity
2023-09-01 08:03:30.953|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel - executing activity
2023-09-01 08:03:30.954|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 26|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:03:31.583|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 26|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:03:31.584|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 27|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:03:32.221|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 27|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:03:32.222|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 28|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:03:32.834|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 28|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o HTTP/1.1
2023-09-01 08:03:33.599|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 28|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:03:33.600|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 28|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:03:33.622|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 28|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o'
2023-09-01 08:03:33.623|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 29|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:03:34.242|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 29|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:03:34.243|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 30|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:03:34.844|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 30|base.verbose(text)        - 
2
2023-09-01 08:03:34.847|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 30|base.verbose(text)        - PASS 
2023-09-01 08:03:34.848|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 31|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:03:36.168|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:03:36.793|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:03:37.402|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:03:38.029|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 12|number.assertLesserOrEqua - PASS 768 is less than or equal to 3000
2023-09-01 08:03:38.635|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:03:39.261|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:03:39.866|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:03:39.868|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:03:40.485|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:03:41.095|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:03:41.716|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:03:41.731|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 31|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:03:41.732|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 32|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:03:42.338|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:03:42.362|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A32.log
2023-09-01 08:03:42.363|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 32|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:03:42.363|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 32|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A32.log
2023-09-01 08:03:42.364|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 33|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:03:42.969|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:03:42.969|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:03:42.984|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel|# 33|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:03:42.985|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel - ending activity
2023-09-01 08:03:42.986|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last - executing activity
2023-09-01 08:03:42.986|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 34|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/last?status=${status})
2023-09-01 08:03:43.623|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 34|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/last?status=9' as ${url}
2023-09-01 08:03:43.623|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 35|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:03:44.241|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 35|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/last?status=9 HTTP/1.1
2023-09-01 08:03:44.984|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 35|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:03:44.985|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 35|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/last?status=9 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:03:45.011|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 35|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/last?status=9'
2023-09-01 08:03:45.011|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 36|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:03:45.650|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 36|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:03:45.651|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 37|base.save(var,value)      - executing save(var,value)(dcdate, [JSON(${response}.body)=>extract(dcdate)])
2023-09-01 08:03:46.297|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 37|base.save(var,value)      - PASS stored 'null' as ${dcdate}
2023-09-01 08:03:46.298|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 38|base.save(var,value)      - executing save(var,value)(dcno, [JSON(${response}.body)=>extract(dcno)])
2023-09-01 08:03:46.936|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 38|base.save(var,value)      - PASS stored 'null' as ${dcno}
2023-09-01 08:03:46.937|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 39|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:03:47.549|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 39|base.verbose(text)        - 
0
2023-09-01 08:03:47.550|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 39|base.verbose(text)        - PASS 
2023-09-01 08:03:47.551|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 40|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:03:48.911|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:03:49.547|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:03:50.159|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:03:50.789|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 12|number.assertLesserOrEqua - PASS 745 is less than or equal to 3000
2023-09-01 08:03:51.401|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:03:52.045|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:03:52.662|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:03:52.663|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:03:53.288|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:03:53.896|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:03:54.520|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:03:54.545|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 40|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:03:54.546|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 41|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:03:55.159|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:03:55.202|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A41.log
2023-09-01 08:03:55.203|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 41|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:03:55.203|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last|# 41|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A41.log
2023-09-01 08:03:55.203|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/last - ending activity
2023-09-01 08:03:55.203|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last - executing activity
2023-09-01 08:03:55.204|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 42|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:03:55.843|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 42|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:03:55.844|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 43|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:03:56.478|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 43|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:03:56.479|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 44|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:03:57.092|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 44|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/last?status=9 HTTP/1.1
2023-09-01 08:03:57.840|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 44|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:03:57.840|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 44|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/last?status=9 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:03:57.869|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 44|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/last?status=9'
2023-09-01 08:03:57.869|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 45|base.save(var,value)      - executing save(var,value)(dcdate, [JSON(${response}.body) =>extract(gkresult)])
2023-09-01 08:03:57.870|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:03:57.870|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 45|base.save(var,value)      - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:03:57.870|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 46|base.save(var,value)      - executing save(var,value)(dcno, [JSON(${response}.body) =>extract(gkresult.dcno)])
2023-09-01 08:03:57.870|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:03:57.871|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 46|base.save(var,value)      - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:03:57.871|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 47|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:03:58.490|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 47|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:03:58.490|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 48|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:03:59.098|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 48|base.verbose(text)        - 
2
2023-09-01 08:03:59.099|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 48|base.verbose(text)        - PASS 
2023-09-01 08:03:59.099|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 49|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:04:00.438|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:04:01.073|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:04:01.681|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:04:02.313|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 12|number.assertLesserOrEqua - PASS 749 is less than or equal to 3000
2023-09-01 08:04:02.917|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:04:03.539|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:04:04.151|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:04:04.152|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:04:04.769|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:04:05.380|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:04:05.995|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:04:06.016|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 49|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:04:06.016|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 50|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:04:06.621|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:04:06.648|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A50.log
2023-09-01 08:04:06.648|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 50|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:04:06.649|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 50|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A50.log
2023-09-01 08:04:06.650|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 51|base.assertEqual(expected - executing assertEqual(expected,actual)(15/04/2023, ${dcdate})
2023-09-01 08:04:06.650|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:04:06.651|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 51|base.assertEqual(expected - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:04:06.652|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 52|base.assertEqual(expected - executing assertEqual(expected,actual)(9/DIN-23, ${dcno})
2023-09-01 08:04:06.653|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:04:06.654|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 52|base.assertEqual(expected - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:04:06.654|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 53|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:04:07.269|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:04:07.270|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:04:07.291|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last|# 53|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:04:07.291|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/last - ending activity
2023-09-01 08:04:07.292|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 - executing activity
2023-09-01 08:04:07.292|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 54|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/next_id?status=${status})
2023-09-01 08:04:07.925|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 54|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/next_id?status=9' as ${url}
2023-09-01 08:04:07.926|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 55|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:04:08.538|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 55|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/next_id?status=9 HTTP/1.1
2023-09-01 08:04:09.308|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 55|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:04:09.310|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 55|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/next_id?status=9 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:04:09.346|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 55|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/next_id?status=9'
2023-09-01 08:04:09.346|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 56|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:04:09.995|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 56|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:04:09.995|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 57|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:04:10.607|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 57|base.verbose(text)        - 
0
2023-09-01 08:04:10.608|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 57|base.verbose(text)        - PASS 
2023-09-01 08:04:10.608|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 58|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:04:12.023|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:04:12.656|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:04:13.265|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:04:13.898|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 12|number.assertLesserOrEqua - PASS 772 is less than or equal to 3000
2023-09-01 08:04:14.503|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:04:15.137|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:04:15.747|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:04:15.747|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:04:16.370|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:04:16.973|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:04:17.587|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:04:17.601|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 58|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:04:17.602|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 59|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:04:18.220|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:04:18.255|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A59.log
2023-09-01 08:04:18.255|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 59|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:04:18.256|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9|# 59|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A59.log
2023-09-01 08:04:18.256|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/delchal/next_id?status=9 - ending activity
2023-09-01 08:04:18.256|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 - executing activity
2023-09-01 08:04:18.256|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 60|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:04:18.911|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 60|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:04:18.914|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 61|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:04:19.565|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 61|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:04:19.566|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 62|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:04:20.183|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 62|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/next_id?status=9 HTTP/1.1
2023-09-01 08:04:20.955|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 62|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:04:20.956|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 62|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/next_id?status=9 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:04:20.985|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 62|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/next_id?status=9'
2023-09-01 08:04:20.985|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 63|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:04:21.628|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 63|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:04:21.629|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 64|base.save(var,value)      - executing save(var,value)(dcid, [JSON(${response}.body) => extract(dcid)])
2023-09-01 08:04:21.631|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:04:21.631|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 64|base.save(var,value)      - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:04:21.631|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 65|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:04:22.233|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 65|base.verbose(text)        - 
2
2023-09-01 08:04:22.235|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 65|base.verbose(text)        - PASS 
2023-09-01 08:04:22.236|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 66|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:04:23.563|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:04:24.196|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:04:24.808|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:04:25.447|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 12|number.assertLesserOrEqua - PASS 774 is less than or equal to 3000
2023-09-01 08:04:26.058|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:04:26.689|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:04:27.300|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:04:27.301|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:04:27.928|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:04:28.533|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:04:29.153|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:04:29.177|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 66|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:04:29.177|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 67|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:04:29.784|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:04:29.830|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A67.log
2023-09-01 08:04:29.830|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 67|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:04:29.830|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 67|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A67.log
2023-09-01 08:04:29.830|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 68|base.assertEqual(expected - executing assertEqual(expected,actual)(10, ${dcid})
2023-09-01 08:04:29.831|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:04:29.832|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 68|base.assertEqual(expected - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:04:29.832|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 69|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:04:30.448|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:04:30.449|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:04:30.469|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9|# 69|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:04:30.469|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/delchal/next_id?status=9 - ending activity
2023-09-01 08:04:30.470|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid - executing activity
2023-09-01 08:04:30.470|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 70|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/${dcid})
2023-09-01 08:04:31.096|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 70|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/260' as ${url}
2023-09-01 08:04:31.097|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 71|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:04:31.710|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 71|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1
2023-09-01 08:04:32.452|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 71|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:04:32.453|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 71|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:04:32.470|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 71|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/260'
2023-09-01 08:04:32.471|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 72|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:04:33.128|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 72|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:04:33.129|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 73|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:04:33.736|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 73|base.verbose(text)        - 
0
2023-09-01 08:04:33.738|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 73|base.verbose(text)        - PASS 
2023-09-01 08:04:33.739|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 74|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:04:35.112|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:04:35.738|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:04:36.351|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:04:36.986|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 12|number.assertLesserOrEqua - PASS 743 is less than or equal to 3000
2023-09-01 08:04:37.596|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:04:38.222|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:04:38.826|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:04:38.827|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:04:39.452|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:04:40.055|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:04:40.675|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:04:40.693|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 74|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:04:40.694|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 75|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:04:41.312|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:04:41.352|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A75.log
2023-09-01 08:04:41.352|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 75|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:04:41.353|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid|# 75|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A75.log
2023-09-01 08:04:41.353|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/dcid - ending activity
2023-09-01 08:04:41.353|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid - executing activity
2023-09-01 08:04:41.354|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 76|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:04:42.007|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 76|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:04:42.007|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 77|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:04:42.658|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 77|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:04:42.659|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 78|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:04:43.267|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 78|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1
2023-09-01 08:04:44.034|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 78|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:04:44.034|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 78|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:04:44.059|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 78|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/260'
2023-09-01 08:04:44.059|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 79|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:04:44.681|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 79|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:04:44.682|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 80|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:04:45.285|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 80|base.verbose(text)        - 
2
2023-09-01 08:04:45.287|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 80|base.verbose(text)        - PASS 
2023-09-01 08:04:45.288|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 81|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:04:46.634|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:04:47.257|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:04:47.870|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:04:48.500|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 12|number.assertLesserOrEqua - PASS 769 is less than or equal to 3000
2023-09-01 08:04:49.114|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:04:49.736|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:04:50.349|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:04:50.350|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:04:50.982|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:04:51.591|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:04:52.214|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:04:52.241|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 81|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:04:52.242|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 82|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:04:52.857|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:04:52.886|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A82.log
2023-09-01 08:04:52.886|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 82|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:04:52.887|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 82|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A82.log
2023-09-01 08:04:52.888|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 83|base.save(var,value)      - executing save(var,value)(dcid, [JSON(${response}) => extract(gkresult.delchaldata.dcid)])
2023-09-01 08:04:52.889|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:04:52.889|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 83|base.save(var,value)      - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:04:52.890|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 84|base.verbose(text)        - executing verbose(text)(${dcid})
2023-09-01 08:04:52.891|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:04:52.891|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 84|base.verbose(text)        - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:04:52.892|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 85|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:04:53.500|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:04:53.500|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:04:53.522|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid|# 85|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:04:53.523|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/dcid - ending activity
2023-09-01 08:04:53.523|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid - executing activity
2023-09-01 08:04:53.525|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 86|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/cancel/${cancel_dcid})
2023-09-01 08:04:54.160|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 86|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/cancel/376' as ${url}
2023-09-01 08:04:54.161|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 87|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:04:54.778|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 87|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/cancel/376 HTTP/1.1
2023-09-01 08:04:55.534|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 87|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:04:55.535|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 87|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/cancel/376 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:04:55.554|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 87|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/cancel/376'
2023-09-01 08:04:55.555|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 88|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:04:56.179|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 88|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:04:56.180|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 89|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:04:56.794|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 89|base.verbose(text)        - 
0
2023-09-01 08:04:56.796|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 89|base.verbose(text)        - PASS 
2023-09-01 08:04:56.797|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 90|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:04:58.145|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:04:58.769|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:04:59.384|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:05:00.011|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 12|number.assertLesserOrEqua - PASS 758 is less than or equal to 3000
2023-09-01 08:05:00.625|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:05:01.258|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:05:01.871|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:05:01.872|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:05:02.494|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:05:03.104|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:05:03.724|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:05:03.733|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 90|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:05:03.733|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 91|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:05:04.349|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:05:04.375|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A91.log
2023-09-01 08:05:04.375|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 91|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:05:04.375|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid|# 91|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A91.log
2023-09-01 08:05:04.376|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Negative - /delchal/cancel/dcid - ending activity
2023-09-01 08:05:04.376|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid - executing activity
2023-09-01 08:05:04.376|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 92|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:05:05.010|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 92|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:05:05.011|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 93|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:05:05.645|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 93|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:05:05.646|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 94|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:05:06.257|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 94|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/cancel/376 HTTP/1.1
2023-09-01 08:05:07.033|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 94|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:05:07.034|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 94|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/cancel/376 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:05:07.050|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 94|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/cancel/376'
2023-09-01 08:05:07.051|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 95|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:05:07.687|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 95|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:05:07.688|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 96|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:05:08.298|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 96|base.verbose(text)        - 
2
2023-09-01 08:05:08.300|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 96|base.verbose(text)        - PASS 
2023-09-01 08:05:08.301|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 97|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:05:09.604|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:05:10.229|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:05:10.841|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:05:11.464|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 12|number.assertLesserOrEqua - PASS 778 is less than or equal to 3000
2023-09-01 08:05:12.069|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:05:12.687|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:05:13.296|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:05:13.297|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:05:13.921|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:05:14.535|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:05:15.162|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:05:15.183|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 97|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:05:15.183|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 98|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:05:15.802|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:05:15.828|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A98.log
2023-09-01 08:05:15.828|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 98|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:05:15.828|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid|# 98|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Get_A98.log
2023-09-01 08:05:15.829|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get|Positive - /delchal/cancel/dcid - ending activity
2023-09-01 08:05:18.778|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Get] saving test scenario
2023-09-01 08:05:18.986|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post - executing test scenario
2023-09-01 08:05:18.987|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote - executing activity
2023-09-01 08:05:18.987|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  5|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:05:19.601|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:05:19.602|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:05:19.613|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  5|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:05:19.614|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 08:05:20.241|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 08:05:20.242|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  7|base.save(var,value)      - executing save(var,value)(body, {
  "orgname": "Mapusa[NUMBER(${num})=>randomDigits(5)]",
  "orgtype": "{orgtype}",
  "yearstart": "{yearstart}",
  "yearend": "{yearend}",
  "orgstate": "{orgstate}",
  "orgcity": "{orgcity}",
  "orgaddr": "{orgaddr}",
  "orgpincode": "{orgpincode}",
  "orgcountry": "{orgcountry}",
  "orgtelno": "[NUMBER(${num})=>randomDigits(10)]",
  "orgfax": "[NUMBER(${num})=>randomDigits(6)]",
  "orgwebsite": "{orgwebsite}",
  "orgemail": "{orgemail}",
  "orgpan": "[AJNKK[NUMBER(${num})=>randomDigits(5)]",
  "orgmvat": "[NUMBER(${num})=>randomDigits(7)]",
  "orgstax": "[NUMBER(${num})=>randomDigits(5)]",
  "orgregno": "[NUMBER(${num})=>randomDigits(3)]",
  "orgregdate": "{orgregdate}",
  "orgfcrano": "{orgfcrano}",
  "orgfcradate": "{orgfcradate}",
  "invflag": "{invflag}",
  "invsflag": "{invsflag}",
  "billflag": "{billflag}",
  "avflag": "{avflag}",
  "maflag": "{maflag}",
  "avnoflag": "{avnoflag}",
  "ainvnoflag": "{ainvnoflag}",
  "modeflag": "{modeflag}",
  "orgconf": "{orgconf}",
  "roflag": "{roflag}",
  "booksclosedflag": "{booksclosedflag}",
  "logo": "{logo}"
})
2023-09-01 08:05:20.883|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  7|base.save(var,value)      - PASS stored '{
  "orgname": "Mapusa89670",
  "orgtype": "{orgtype}",
  "yearstart": "{yearstart}",
  "yearend": "{yearend}",
  "orgstate": "{orgstate}",
  "orgcity": "{orgcity}",
  "orgaddr": "{orgaddr}",
  "orgpincode": "{orgpincode}",
  "orgcountry": "{orgcountry}",
  "orgtelno": "8289544663",
  "orgfax": "598638",
  "orgwebsite": "{orgwebsite}",
  "orgemail": "{orgemail}",
  "orgpan": "[AJNKK89670",
  "orgmvat": "1533622",
  "orgstax": "89670",
  "orgregno": "919",
  "orgregdate": "{orgregdate}",
  "orgfcrano": "{orgfcrano}",
  "orgfcradate": "{orgfcradate}",
  "invflag": "{invflag}",
  "invsflag": "{invsflag}",
  "billflag": "{billflag}",
  "avflag": "{avflag}",
  "maflag": "{maflag}",
  "avnoflag": "{avnoflag}",
  "ainvnoflag": "{ainvnoflag}",
  "modeflag": "{modeflag}",
  "orgconf": "{orgconf}",
  "roflag": "{roflag}",
  "booksclosedflag": "{booksclosedflag}",
  "logo": "{logo}"
}' as ${body}
2023-09-01 08:05:20.884|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:05:21.491|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:05:23.058|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:05:23.059|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:05:23.092|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:05:23.093|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:05:23.736|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|#  9|base.save(var,value)      - PASS stored '3' as ${actualGkStatus}
2023-09-01 08:05:23.736|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|# 10|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:05:24.351|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|# 10|base.verbose(text)        - 
3
2023-09-01 08:05:24.354|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|# 10|base.verbose(text)        - PASS 
2023-09-01 08:05:24.355|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|# 11|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:05:25.689|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:05:26.317|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:05:26.932|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:05:27.557|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1569 is less than or equal to 3000
2023-09-01 08:05:28.172|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:05:28.797|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:05:29.413|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:05:29.415|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:05:30.035|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:05:30.637|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:05:31.261|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:05:31.281|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|# 11|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:05:31.281|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:05:31.900|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:05:31.933|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Post_A12.log
2023-09-01 08:05:31.933|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|# 12|base.assertEqual(expected - FAIL 
expected=2
actual  =3
2023-09-01 08:05:31.934|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote|# 12|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Post_A12.log
2023-09-01 08:05:31.934|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Negative - Create DeliveryNote - ending activity
2023-09-01 08:05:31.935|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote - executing activity
2023-09-01 08:05:31.935|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 13|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:05:32.567|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 13|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:05:32.568|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 14|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:05:33.199|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 14|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:05:33.200|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 15|base.save(var,value)      - executing save(var,value)(body, {
  "orgname": "Mapusa[NUMBER(${num})=>randomDigits(5)]",
  "orgtype": "{orgtype}",
  "yearstart": "{yearstart}",
  "yearend": "{yearend}",
  "orgstate": "{orgstate}",
  "orgcity": "{orgcity}",
  "orgaddr": "{orgaddr}",
  "orgpincode": "{orgpincode}",
  "orgcountry": "{orgcountry}",
  "orgtelno": "[NUMBER(${num})=>randomDigits(10)]",
  "orgfax": "[NUMBER(${num})=>randomDigits(6)]",
  "orgwebsite": "{orgwebsite}",
  "orgemail": "{orgemail}",
  "orgpan": "[AJNKK[NUMBER(${num})=>randomDigits(5)]",
  "orgmvat": "[NUMBER(${num})=>randomDigits(7)]",
  "orgstax": "[NUMBER(${num})=>randomDigits(5)]",
  "orgregno": "[NUMBER(${num})=>randomDigits(3)]",
  "orgregdate": "{orgregdate}",
  "orgfcrano": "{orgfcrano}",
  "orgfcradate": "{orgfcradate}",
  "invflag": "{invflag}",
  "invsflag": "{invsflag}",
  "billflag": "{billflag}",
  "avflag": "{avflag}",
  "maflag": "{maflag}",
  "avnoflag": "{avnoflag}",
  "ainvnoflag": "{ainvnoflag}",
  "modeflag": "{modeflag}",
  "orgconf": "{orgconf}",
  "roflag": "{roflag}",
  "booksclosedflag": "{booksclosedflag}",
  "logo": "{logo}"
})
2023-09-01 08:05:33.840|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 15|base.save(var,value)      - PASS stored '{
  "orgname": "Mapusa15113",
  "orgtype": "{orgtype}",
  "yearstart": "{yearstart}",
  "yearend": "{yearend}",
  "orgstate": "{orgstate}",
  "orgcity": "{orgcity}",
  "orgaddr": "{orgaddr}",
  "orgpincode": "{orgpincode}",
  "orgcountry": "{orgcountry}",
  "orgtelno": "7664684309",
  "orgfax": "231173",
  "orgwebsite": "{orgwebsite}",
  "orgemail": "{orgemail}",
  "orgpan": "[AJNKK15113",
  "orgmvat": "2061794",
  "orgstax": "15113",
  "orgregno": "518",
  "orgregdate": "{orgregdate}",
  "orgfcrano": "{orgfcrano}",
  "orgfcradate": "{orgfcradate}",
  "invflag": "{invflag}",
  "invsflag": "{invsflag}",
  "billflag": "{billflag}",
  "avflag": "{avflag}",
  "maflag": "{maflag}",
  "avnoflag": "{avnoflag}",
  "ainvnoflag": "{ainvnoflag}",
  "modeflag": "{modeflag}",
  "orgconf": "{orgconf}",
  "roflag": "{roflag}",
  "booksclosedflag": "{booksclosedflag}",
  "logo": "{logo}"
}' as ${body}
2023-09-01 08:05:33.841|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, ${body}, response)
2023-09-01 08:05:34.480|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal?%7B%0A++%22orgname%22%3A+%22Mapusa15113%22%2C%0A++%22orgtype%22%3A+%22%7Borgtype%7D%22%2C%0A++%22yearstart%22%3A+%22%7Byearstart%7D%22%2C%0A++%22yearend%22%3A+%22%7Byearend%7D%22%2C%0A++%22orgstate%22%3A+%22%7Borgstate%7D%22%2C%0A++%22orgcity%22%3A+%22%7Borgcity%7D%22%2C%0A++%22orgaddr%22%3A+%22%7Borgaddr%7D%22%2C%0A++%22orgpincode%22%3A+%22%7Borgpincode%7D%22%2C%0A++%22orgcountry%22%3A+%22%7Borgcountry%7D%22%2C%0A++%22orgtelno%22%3A+%227664684309%22%2C%0A++%22orgfax%22%3A+%22231173%22%2C%0A++%22orgwebsite%22%3A+%22%7Borgwebsite%7D%22%2C%0A++%22orgemail%22%3A+%22%7Borgemail%7D%22%2C%0A++%22orgpan%22%3A+%22%5BAJNKK15113%22%2C%0A++%22orgmvat%22%3A+%222061794%22%2C%0A++%22orgstax%22%3A+%2215113%22%2C%0A++%22orgregno%22%3A+%22518%22%2C%0A++%22orgregdate%22%3A+%22%7Borgregdate%7D%22%2C%0A++%22orgfcrano%22%3A+%22%7Borgfcrano%7D%22%2C%0A++%22orgfcradate%22%3A+%22%7Borgfcradate%7D%22%2C%0A++%22invflag%22%3A+%22%7Binvflag%7D%22%2C%0A++%22invsflag%22%3A+%22%7Binvsflag%7D%22%2C%0A++%22billflag%22%3A+%22%7Bbillflag%7D%22%2C%0A++%22avflag%22%3A+%22%7Bavflag%7D%22%2C%0A++%22maflag%22%3A+%22%7Bmaflag%7D%22%2C%0A++%22avnoflag%22%3A+%22%7Bavnoflag%7D%22%2C%0A++%22ainvnoflag%22%3A+%22%7Bainvnoflag%7D%22%2C%0A++%22modeflag%22%3A+%22%7Bmodeflag%7D%22%2C%0A++%22orgconf%22%3A+%22%7Borgconf%7D%22%2C%0A++%22roflag%22%3A+%22%7Broflag%7D%22%2C%0A++%22booksclosedflag%22%3A+%22%7Bbooksclosedflag%7D%22%2C%0A++%22logo%22%3A+%22%7Blogo%7D%22%0A%7D HTTP/1.1
2023-09-01 08:05:35.286|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:05:35.314|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal?%7B%0A++%22orgname%22%3A+%22Mapusa15113%22%2C%0A++%22orgtype%22%3A+%22%7Borgtype%7D%22%2C%0A++%22yearstart%22%3A+%22%7Byearstart%7D%22%2C%0A++%22yearend%22%3A+%22%7Byearend%7D%22%2C%0A++%22orgstate%22%3A+%22%7Borgstate%7D%22%2C%0A++%22orgcity%22%3A+%22%7Borgcity%7D%22%2C%0A++%22orgaddr%22%3A+%22%7Borgaddr%7D%22%2C%0A++%22orgpincode%22%3A+%22%7Borgpincode%7D%22%2C%0A++%22orgcountry%22%3A+%22%7Borgcountry%7D%22%2C%0A++%22orgtelno%22%3A+%227664684309%22%2C%0A++%22orgfax%22%3A+%22231173%22%2C%0A++%22orgwebsite%22%3A+%22%7Borgwebsite%7D%22%2C%0A++%22orgemail%22%3A+%22%7Borgemail%7D%22%2C%0A++%22orgpan%22%3A+%22%5BAJNKK15113%22%2C%0A++%22orgmvat%22%3A+%222061794%22%2C%0A++%22orgstax%22%3A+%2215113%22%2C%0A++%22orgregno%22%3A+%22518%22%2C%0A++%22orgregdate%22%3A+%22%7Borgregdate%7D%22%2C%0A++%22orgfcrano%22%3A+%22%7Borgfcrano%7D%22%2C%0A++%22orgfcradate%22%3A+%22%7Borgfcradate%7D%22%2C%0A++%22invflag%22%3A+%22%7Binvflag%7D%22%2C%0A++%22invsflag%22%3A+%22%7Binvsflag%7D%22%2C%0A++%22billflag%22%3A+%22%7Bbillflag%7D%22%2C%0A++%22avflag%22%3A+%22%7Bavflag%7D%22%2C%0A++%22maflag%22%3A+%22%7Bmaflag%7D%22%2C%0A++%22avnoflag%22%3A+%22%7Bavnoflag%7D%22%2C%0A++%22ainvnoflag%22%3A+%22%7Bainvnoflag%7D%22%2C%0A++%22modeflag%22%3A+%22%7Bmodeflag%7D%22%2C%0A++%22orgconf%22%3A+%22%7Borgconf%7D%22%2C%0A++%22roflag%22%3A+%22%7Broflag%7D%22%2C%0A++%22booksclosedflag%22%3A+%22%7Bbooksclosedflag%7D%22%2C%0A++%22logo%22%3A+%22%7Blogo%7D%22%0A%7D HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:05:35.359|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:05:35.360|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 17|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:05:35.998|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 17|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:05:35.999|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 18|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:05:36.615|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 18|base.verbose(text)        - 
2
2023-09-01 08:05:36.617|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 18|base.verbose(text)        - PASS 
2023-09-01 08:05:36.618|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 19|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:05:37.963|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:05:38.601|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:05:39.203|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:05:39.826|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 12|number.assertLesserOrEqua - PASS 838 is less than or equal to 3000
2023-09-01 08:05:40.436|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:05:41.064|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:05:41.667|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:05:41.669|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:05:42.293|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:05:42.906|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:05:43.535|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:05:43.546|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 19|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:05:43.547|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 20|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:05:44.162|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:05:44.187|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Post_A20.log
2023-09-01 08:05:44.187|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 20|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:05:44.187|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 20|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Post_A20.log
2023-09-01 08:05:44.188|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 21|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:05:44.805|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:05:44.806|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:05:44.826|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote|# 21|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:05:44.826|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post|Positive - Create DeliveryNote - ending activity
2023-09-01 08:05:45.269|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Post] saving test scenario
2023-09-01 08:05:45.430|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete - executing test scenario
2023-09-01 08:05:45.430|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log - executing activity
2023-09-01 08:05:45.430|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  5|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:05:46.046|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 08:05:46.047|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=null
2023-09-01 08:05:46.061|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  5|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:05:46.061|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/${delete_dcid})
2023-09-01 08:05:46.688|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/227' as ${url}
2023-09-01 08:05:46.689|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:05:47.294|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/227 HTTP/1.1
2023-09-01 08:05:48.059|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:05:48.060|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/227 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:05:48.075|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/227'
2023-09-01 08:05:48.076|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:05:48.696|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:05:48.697|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  9|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:05:49.307|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  9|base.verbose(text)        - 
0
2023-09-01 08:05:49.309|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|#  9|base.verbose(text)        - PASS 
2023-09-01 08:05:49.309|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:05:50.600|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:05:51.227|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:05:51.837|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:05:52.478|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 768 is less than or equal to 3000
2023-09-01 08:05:53.095|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:05:53.731|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:05:54.343|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:05:54.344|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:05:54.972|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:05:55.578|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:05:56.201|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:05:56.210|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:05:56.211|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:05:56.828|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:05:56.852|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Delete_A11.log
2023-09-01 08:05:56.852|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|# 11|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:05:56.853|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Delete_A11.log
2023-09-01 08:05:56.853|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Negative - /log - ending activity
2023-09-01 08:05:56.854|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log - executing activity
2023-09-01 08:05:56.854|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 12|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:05:57.496|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 12|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:05:57.497|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 13|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:05:58.136|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 13|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:05:58.136|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:05:58.754|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/227 HTTP/1.1
2023-09-01 08:05:59.522|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:05:59.523|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/227 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:05:59.543|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/227'
2023-09-01 08:05:59.544|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:06:00.175|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 15|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:06:00.176|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 16|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:06:00.787|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 16|base.verbose(text)        - 
2
2023-09-01 08:06:00.788|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 16|base.verbose(text)        - PASS 
2023-09-01 08:06:00.789|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:06:02.103|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:06:02.716|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:06:03.321|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:06:03.944|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 770 is less than or equal to 3000
2023-09-01 08:06:04.550|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:06:05.184|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:06:05.791|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:06:05.792|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:06:06.407|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:06:07.016|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:06:07.633|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:06:07.644|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 17|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:06:07.645|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:06:08.251|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:06:08.286|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Delete_A18.log
2023-09-01 08:06:08.286|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 18|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:06:08.286|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log|# 18|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_Delete_A18.log
2023-09-01 08:06:08.287|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete|Positive - /log - ending activity
2023-09-01 08:06:08.722|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|Delete] saving test scenario
2023-09-01 08:06:08.907|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT - executing test scenario
2023-09-01 08:06:08.907|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log - executing activity
2023-09-01 08:06:08.907|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  5|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:06:09.512|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:06:09.513|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:06:09.529|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  5|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:06:09.530|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/${dcid})
2023-09-01 08:06:10.160|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/260' as ${url}
2023-09-01 08:06:10.162|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:06:10.776|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1
2023-09-01 08:06:11.559|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:06:11.561|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:06:11.586|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/260'
2023-09-01 08:06:11.586|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:06:12.230|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:06:12.231|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  9|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:06:12.842|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  9|base.verbose(text)        - 
0
2023-09-01 08:06:12.842|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|#  9|base.verbose(text)        - PASS 
2023-09-01 08:06:12.842|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:06:14.175|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:06:14.799|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:06:15.402|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:06:16.025|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 785 is less than or equal to 3000
2023-09-01 08:06:16.627|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:06:17.263|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:06:17.869|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:06:17.871|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:06:18.496|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:06:19.101|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:06:19.724|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:06:19.749|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:06:19.750|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:06:20.365|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:06:20.411|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_PUT_A11.log
2023-09-01 08:06:20.411|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|# 11|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:06:20.412|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_PUT_A11.log
2023-09-01 08:06:20.412|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Negative - /log - ending activity
2023-09-01 08:06:20.412|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log - executing activity
2023-09-01 08:06:20.413|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 12|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:06:21.055|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 12|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:06:21.056|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 13|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:06:21.727|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 13|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:06:21.728|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:06:22.336|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1
2023-09-01 08:06:23.154|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:06:23.155|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:06:23.178|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/260'
2023-09-01 08:06:23.179|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:06:23.821|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 15|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:06:23.822|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 16|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:06:24.427|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 16|base.verbose(text)        - 
2
2023-09-01 08:06:24.429|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 16|base.verbose(text)        - PASS 
2023-09-01 08:06:24.430|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:06:25.807|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:06:26.444|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:06:27.053|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:06:27.676|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 820 is less than or equal to 3000
2023-09-01 08:06:28.285|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:06:28.914|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:06:29.528|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:06:29.529|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:06:30.152|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:06:30.763|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:06:31.383|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:06:31.407|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 17|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:06:31.408|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:06:32.023|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:06:32.073|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_PUT_A18.log
2023-09-01 08:06:32.074|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 18|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:06:32.074|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log|# 18|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_075409\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx_PUT_A18.log
2023-09-01 08:06:32.075|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT|Positive - /log - ending activity
2023-09-01 08:06:32.810|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001|PUT] saving test scenario
2023-09-01 08:06:33.145|I|Thread-17|[20230901_075409] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 234422 ms
» Test Steps:     244
» Error(s):       18



2023-09-01 08:06:33.950|I|Thread-17|[20230901_075409] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 236921 ms
» Iterations:     [1] total 1
» Test Steps:     244
» Passed:         218
» Error(s):       18
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_075409\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_080237.001.xlsx



2023-09-01 08:06:33.950|I|Thread-17|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:06:34.951|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx] now completed
2023-09-01 08:06:34.951|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Invite.data.xlsx
2023-09-01 08:06:35.015|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 08:06:35.015|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx] new thread started
2023-09-01 08:06:35.019|I|Thread-20|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:06:35.020|I|Thread-20|On-Demand Inspection detection enabled
2023-09-01 08:06:35.020|E|Thread-20|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:06:36.027|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx] now completed
2023-09-01 08:06:36.028|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Invoice.data.xlsx
2023-09-01 08:06:36.078|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 08:06:36.078|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx] new thread started
2023-09-01 08:06:36.080|I|Thread-21|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:06:36.081|I|Thread-21|On-Demand Inspection detection enabled
2023-09-01 08:06:36.081|E|Thread-21|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:06:37.092|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx] now completed
2023-09-01 08:06:37.093|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Product.data.xlsx
2023-09-01 08:06:37.148|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 08:06:37.149|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx] new thread started
2023-09-01 08:06:37.150|I|Thread-22|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:06:37.150|I|Thread-22|On-Demand Inspection detection enabled
2023-09-01 08:06:37.150|E|Thread-22|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:06:38.164|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx] now completed
2023-09-01 08:06:38.165|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Reports.data.xlsx
2023-09-01 08:06:38.214|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 08:06:38.215|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx] new thread started
2023-09-01 08:06:38.217|I|Thread-23|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:06:38.217|I|Thread-23|On-Demand Inspection detection enabled
2023-09-01 08:06:38.217|E|Thread-23|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:06:39.225|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx] now completed
2023-09-01 08:06:39.226|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Tax.data.xlsx
2023-09-01 08:06:39.274|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx] resolve RUN ID as 20230901_075409
2023-09-01 08:06:39.275|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx] new thread started
2023-09-01 08:06:39.278|I|Thread-24|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:06:39.278|I|Thread-24|On-Demand Inspection detection enabled
2023-09-01 08:06:39.278|E|Thread-24|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:06:40.286|I|main|[20230901_075409] [C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx] now completed
2023-09-01 08:06:40.287|I|main|[20230901_075409] all execution thread(s) have terminated
2023-09-01 08:06:40.289|I|main|[20230901_075409] test run completed in about 750 seconds
2023-09-01 08:06:40.343|I|main|No predefined nexial-setup found
2023-09-01 08:06:40.392|I|main|outputBase not set; output-to-cloud DISABLED!
2023-09-01 08:06:40.393|I|main|accessKey not set; output-to-cloud DISABLED!
2023-09-01 08:06:40.393|I|main|secretKey not set; output-to-cloud DISABLED!
2023-09-01 08:06:40.393|I|main|generating HTML output for this execution to C:\projects\GKCore\gkcore\tests\output\20230901_075409\execution-output.html
2023-09-01 08:06:41.507|I|main|generating JUnit XML output for this execution to C:\projects\GKCore\gkcore\tests\output\20230901_075409\junit.xml
2023-09-01 08:06:41.560|I|main|generated the JUnit report for this execution: C:\projects\GKCore\gkcore\tests\output\20230901_075409\junit.xml
2023-09-01 08:06:41.609|I|main|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:06:41.609|I|main|skipped email notification as configured
2023-09-01 08:06:41.610|I|main|exiting current script/plan execution
2023-09-01 08:06:41.610|I|main|exiting Nexial...
2023-09-01 08:06:41.610|I|main|shutdown starts...
2023-09-01 08:06:41.610|I|main|shutdown ends...
2023-09-01 08:06:41.615|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 743 sec.
| » Test Steps....: 712
| » Passed........: 680
| » Failed........: 32
| » Success Rate..: 95.51%
\----------------------------------------------------------nexial-core dev_1535-

2023-09-01 08:06:41.615|E|main|failure found; success rate is 95.51%
2023-09-01 08:06:41.618|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\GKCore\gkcore\tests\output\20230901_075409
NEXIAL_EXECUTION_HTML: C:\projects\GKCore\gkcore\tests\output\20230901_075409\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\GKCore\gkcore\tests\output\20230901_075409\junit.xml
NEXIAL_SUCCESS_RATE:   95.51%
NEXIAL_EXIT_STATUS:    -13
