2023-09-01 08:32:47.584|I|Thread-1|(DELAYED) nexial-core dev_1535 starting up...
2023-09-01 08:32:47.586|I|Thread-1|(DELAYED) found plans in C:\projects\GKCore\gkcore\tests\artifact\plan\GNUKhata-plan.xlsx: all subplans included
2023-09-01 08:32:47.586|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx
2023-09-01 08:32:47.586|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\GKUser.data.xlsx
2023-09-01 08:32:47.587|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx
2023-09-01 08:32:47.590|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\GNUKhata.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Account.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\AuditLogs.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\CustomerandSupplier.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\DeliveryNote.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Invite.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Invoice.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Product.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Reports.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating test script as C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) validating data file as C:\projects\GKCore\gkcore\tests\artifact\data\Tax.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) skipping plan step in ROW 16 since it's disabled
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) skipping plan step in ROW 17 since it's disabled
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) skipping plan step in ROW 18 since it's disabled
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) input files and output directory resolved...
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) cleaning up outdated temp files...
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) No predefined nexial-setup found
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GKUser.data.xlsx
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) [20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:32:47.591|I|Thread-1|(DELAYED) [20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx] new thread started
2023-09-01 08:32:47.592|I|Thread-1|No predefined nexial-setup found
2023-09-01 08:32:48.094|I|Thread-1|outputBase not set; output-to-cloud DISABLED!
2023-09-01 08:32:48.094|I|Thread-1|accessKey not set; output-to-cloud DISABLED!
2023-09-01 08:32:48.095|I|Thread-1|secretKey not set; output-to-cloud DISABLED!
2023-09-01 08:32:48.324|I|Thread-1|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:32:48.942|I|Thread-1|On-Demand Inspection detection enabled
2023-09-01 08:32:48.943|I|Thread-1|[20230901_083241] executing C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx with 1 iteration(s)
2023-09-01 08:32:48.948|I|Thread-1|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\captures
2023-09-01 08:32:48.949|I|Thread-1|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs
2023-09-01 08:32:49.225|I|Thread-1|[20230901_083241] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001.xlsx
2023-09-01 08:32:49.226|I|Thread-1|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GKUser.data.xlsx
2023-09-01 08:32:49.481|I|Thread-1|[20230901_083241] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001.xlsx
2023-09-01 08:32:50.412|I|Thread-1|STARTS
2023-09-01 08:32:51.499|I|Thread-1|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:32:51.512|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx' from 'Test Plan' step 5
2023-09-01 08:32:51.518|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:32:51.525|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token - executing test scenario
2023-09-01 08:32:51.526|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token - executing activity
2023-09-01 08:32:51.534|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:32:52.945|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:32:53.748|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:32:54.360|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:32:54.997|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:32:55.601|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:32:56.388|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:32:57.680|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:32:57.683|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:32:57.735|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:32:58.351|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:32:58.984|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:32:59.023|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:32:59.023|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:32:59.729|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:32:59.730|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:33:01.089|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:33:01.724|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:33:02.330|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:33:02.950|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:33:03.555|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:33:04.174|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:33:04.787|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:33:05.397|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:33:06.446|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:33:06.447|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:33:06.479|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:33:07.086|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:33:07.714|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:33:07.732|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:33:07.733|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:33:08.394|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:33:08.395|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token|Login Token - ending activity
2023-09-01 08:33:09.029|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Token] saving test scenario
2023-09-01 08:33:09.205|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get - executing test scenario
2023-09-01 08:33:09.206|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers - executing activity
2023-09-01 08:33:09.206|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:33:09.844|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:33:09.845|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}organisation/gkusers)
2023-09-01 08:33:10.487|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/organisation/gkusers' as ${url}
2023-09-01 08:33:10.488|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:33:11.099|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/organisation/gkusers HTTP/1.1
2023-09-01 08:33:11.861|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:33:11.862|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/organisation/gkusers HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:33:11.894|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/organisation/gkusers'
2023-09-01 08:33:11.895|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(0, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:33:12.536|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  8|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:33:12.536|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  9|base.save(var,value)      - executing save(var,value)(GkResultCount, [JSON(${response}.body) => count(gkresult)])
2023-09-01 08:33:13.175|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|#  9|base.save(var,value)      - PASS stored '6' as ${GkResultCount}
2023-09-01 08:33:13.176|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 10|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:33:13.809|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 10|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:33:13.810|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 11|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(4, -1)
2023-09-01 08:33:14.415|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:33:14.417|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:33:15.029|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:33:15.634|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1257' as ${userid}
2023-09-01 08:33:15.636|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:33:16.253|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1257'
2023-09-01 08:33:16.254|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:33:16.874|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:33:16.875|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:33:16.875|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:33:17.482|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:33:18.089|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1258' as ${userid}
2023-09-01 08:33:18.090|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:33:18.705|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1258'
2023-09-01 08:33:18.707|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:33:19.316|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:33:19.317|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:33:19.318|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:33:19.934|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:33:20.539|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1255' as ${userid}
2023-09-01 08:33:20.545|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:33:21.156|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1255'
2023-09-01 08:33:21.157|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:33:21.762|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 3
2023-09-01 08:33:21.763|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #4---------------------------------------------->
2023-09-01 08:33:21.764|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:33:22.372|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:33:22.977|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1256' as ${userid}
2023-09-01 08:33:22.979|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:33:23.582|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1256'
2023-09-01 08:33:23.584|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:33:24.191|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 4
2023-09-01 08:33:24.192|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #5---------------------------------------------->
2023-09-01 08:33:24.193|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:33:24.809|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:33:25.416|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '1259' as ${userid}
2023-09-01 08:33:25.419|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:33:26.022|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '1259'
2023-09-01 08:33:26.024|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:33:26.626|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 5
2023-09-01 08:33:26.627|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #6---------------------------------------------->
2023-09-01 08:33:26.628|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:33:27.245|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult[${counter}].userid)])
2023-09-01 08:33:27.851|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 13|base.save(var,value)      - [repeat-until] PASS stored '2' as ${userid}
2023-09-01 08:33:27.853|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - executing assertNotEqual(expected,actual)(0, ${userid})
2023-09-01 08:33:28.468|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 14|base.assertNotEqual(expec - [repeat-until] PASS validated EXPECTED not equal to ACTUAL; '0' not equal to '2'
2023-09-01 08:33:28.469|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:33:29.074|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 15|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 6
2023-09-01 08:33:29.075|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - 
<[repeat-until] entering loop #7---------------------------------------------->
2023-09-01 08:33:29.076|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, ${GkResultCount})
2023-09-01 08:33:29.719|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 11|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:33:29.720|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Org_gkUser.txt)
2023-09-01 08:33:31.095|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:33:31.744|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:33:32.349|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:33:32.990|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 766 is less than or equal to 3000
2023-09-01 08:33:33.600|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:33:34.232|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:33:34.847|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:33:34.849|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\Org_gkUser.txt!=null)		=> MATCHED
2023-09-01 08:33:35.647|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:33:36.248|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:33:36.859|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:33:36.870|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers|# 16|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:33:36.873|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - organisation/gkUsers - ending activity
2023-09-01 08:33:36.874|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs - executing activity
2023-09-01 08:33:36.875|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 17|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:33:37.508|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 17|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:33:37.509|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 18|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser/orgs)
2023-09-01 08:33:38.138|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 18|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser/orgs' as ${url}
2023-09-01 08:33:38.139|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:33:38.752|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/gkuser/orgs HTTP/1.1
2023-09-01 08:33:39.566|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:33:39.567|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/gkuser/orgs HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:33:39.584|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 19|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser/orgs'
2023-09-01 08:33:39.585|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 20|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:33:40.233|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 20|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:33:40.233|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 21|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\gkUserOrgs.txt)
2023-09-01 08:33:41.556|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:33:42.184|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:33:42.794|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:33:43.416|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 12|number.assertLesserOrEqua - PASS 817 is less than or equal to 3000
2023-09-01 08:33:44.020|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:33:44.654|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:33:45.257|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:33:45.260|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\gkUserOrgs.txt!=null)		=> MATCHED
2023-09-01 08:33:45.906|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:33:46.520|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:33:47.152|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:33:47.165|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 21|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:33:47.165|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 22|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:33:47.790|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs|# 22|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:33:47.791|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/orgs - ending activity
2023-09-01 08:33:47.792|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser - executing activity
2023-09-01 08:33:47.792|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 23|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:33:48.441|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 23|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:33:48.442|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 24|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:33:49.077|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 24|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:33:49.078|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 25|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:33:49.722|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 25|base.save(var,value)      - PASS stored 'test57459' as ${randomUsername}
2023-09-01 08:33:49.723|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 26|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:33:50.356|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 26|base.save(var,value)      - PASS stored '{
    "username": "test57459",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:33:50.357|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:33:50.971|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:33:52.031|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:33:52.031|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:33:52.060|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 27|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:33:52.060|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 28|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:33:52.689|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 28|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:33:52.690|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 29|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:33:54.040|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:33:54.676|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:33:55.289|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:33:55.915|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1061 is less than or equal to 3000
2023-09-01 08:33:56.522|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:33:57.138|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:33:57.745|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:33:57.747|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:33:58.381|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:33:58.988|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:33:59.606|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:33:59.620|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 29|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:33:59.621|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 30|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:34:00.269|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser|# 30|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:34:00.270|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser - ending activity
2023-09-01 08:34:00.270|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question - executing activity
2023-09-01 08:34:00.271|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 31|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/pwd/question?username=${randomUsername})
2023-09-01 08:34:00.901|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 31|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test57459' as ${url}
2023-09-01 08:34:00.902|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:34:01.507|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test57459 HTTP/1.1
2023-09-01 08:34:02.259|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:34:02.261|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test57459 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:34:02.286|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 32|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test57459'
2023-09-01 08:34:02.286|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 33|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:34:02.927|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 33|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:34:02.928|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 34|base.save(var,value)      - executing save(var,value)(userid, [JSON(${response}.body) => extract(gkresult.userid)])
2023-09-01 08:34:03.554|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 34|base.save(var,value)      - PASS stored '1359' as ${userid}
2023-09-01 08:34:03.555|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\pwdQuestion.txt)
2023-09-01 08:34:04.918|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:34:05.546|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:34:06.157|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:34:06.791|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 12|number.assertLesserOrEqua - PASS 755 is less than or equal to 3000
2023-09-01 08:34:07.393|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:34:08.019|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:34:08.630|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:34:08.632|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\pwdQuestion.txt!=null)		=> MATCHED
2023-09-01 08:34:09.269|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:34:09.883|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:34:10.503|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:34:10.523|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 35|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:34:10.524|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:34:11.180|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question|# 36|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:34:11.181|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive/gkuser/pwd/question - ending activity
2023-09-01 08:34:11.181|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer - executing activity
2023-09-01 08:34:11.182|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 37|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:34:11.815|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 37|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:34:11.816|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 38|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/pwd/answer?userid=${userid}&useranswer=${answer})
2023-09-01 08:34:12.460|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 38|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1359&useranswer=admin' as ${url}
2023-09-01 08:34:12.461|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:34:13.065|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1359&useranswer=admin HTTP/1.1
2023-09-01 08:34:13.873|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:34:13.874|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1359&useranswer=admin HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:34:13.902|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 39|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/pwd/answer?userid=1359&useranswer=admin'
2023-09-01 08:34:13.902|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 40|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:34:14.535|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 40|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:34:14.536|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 41|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\pwdAnswer.txt)
2023-09-01 08:34:15.891|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:34:16.531|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:34:17.147|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:34:17.764|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 810 is less than or equal to 3000
2023-09-01 08:34:18.371|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:34:19.009|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:34:19.620|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:34:19.622|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\pwdAnswer.txt!=null)		=> MATCHED
2023-09-01 08:34:20.240|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:34:20.848|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:34:21.460|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:34:21.472|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 41|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:34:21.473|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 42|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:34:22.101|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer|# 42|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:34:22.102|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|Positive - gkUser/pwd/answer - ending activity
2023-09-01 08:34:22.102|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} - executing activity
2023-09-01 08:34:22.102|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 43|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:34:22.727|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 43|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:34:22.728|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 44|base.save(var,value)      - executing save(var,value)(NewUser, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:34:23.367|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 44|base.save(var,value)      - PASS stored 'test97423' as ${NewUser}
2023-09-01 08:34:23.368|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 45|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${NewUser}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:34:24.009|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 45|base.save(var,value)      - PASS stored '{
    "username": "test97423",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:34:24.009|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:34:24.615|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:34:25.654|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:34:25.656|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:34:25.678|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 46|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:34:25.679|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 47|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:34:26.315|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 47|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:34:26.315|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 48|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\gkUser.txt)
2023-09-01 08:34:27.630|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:34:28.267|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:34:28.872|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:34:29.514|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1042 is less than or equal to 3000
2023-09-01 08:34:30.129|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:34:30.743|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:34:31.348|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:34:31.351|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\gkUser.txt!=null)		=> MATCHED
2023-09-01 08:34:31.965|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:34:32.579|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:34:33.203|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:34:33.213|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 48|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:34:33.214|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 49|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:34:33.855|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 49|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:34:33.856|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 50|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/check/username=${NewUser})
2023-09-01 08:34:34.493|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 50|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/check/username=test97423' as ${url}
2023-09-01 08:34:34.494|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response_CheckUser)
2023-09-01 08:34:35.107|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/check/username=test97423 HTTP/1.1
2023-09-01 08:34:35.878|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:34:35.879|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/check/username=test97423 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:34:35.891|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 51|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/check/username=test97423'
2023-09-01 08:34:35.891|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 52|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response_CheckUser}.body) => extract(gkstatus)])
2023-09-01 08:34:36.515|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 52|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:34:36.516|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 53|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response_CheckUser}.returnCode
actualResponseTime=${response_CheckUser}.elapsedTime
actualContentType=${response_CheckUser}.headers.[Content-Type]
responseBody=${response_CheckUser}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\checkUser.txt)
2023-09-01 08:34:37.821|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:34:38.449|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:34:39.051|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:34:39.678|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 773 is less than or equal to 3000
2023-09-01 08:34:40.289|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:34:40.906|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:34:41.513|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:34:41.515|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\checkUser.txt!=null)		=> MATCHED
2023-09-01 08:34:42.131|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:34:42.742|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:34:43.362|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: schema
2023-09-01 08:34:43.390|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 53|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:34:43.391|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 54|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:34:44.036|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username}|# 54|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:34:44.037|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get|gkUser/check/{username} - ending activity
2023-09-01 08:34:45.792|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Get] saving test scenario
2023-09-01 08:34:45.966|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post - executing test scenario
2023-09-01 08:34:45.966|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User - executing activity
2023-09-01 08:34:45.967|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  5|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:34:46.595|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  5|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:34:46.596|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  6|base.save(var,value)      - executing save(var,value)(body, {
    "username": "test[NUMBER(${num})=>randomDigits(5)]",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:34:47.247|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  6|base.save(var,value)      - PASS stored '{
    "username": "test36296",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:34:47.247|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  7|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:34:47.859|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  7|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:34:48.926|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  7|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:34:48.927|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  7|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:34:48.955|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  7|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:34:48.956|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:34:49.599|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:34:49.600|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  9|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:34:50.952|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:34:51.582|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:34:52.197|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:34:52.811|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1069 is less than or equal to 3000
2023-09-01 08:34:53.423|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:34:54.051|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:34:54.666|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:34:54.667|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:34:55.298|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:34:55.900|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:34:56.529|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:34:56.537|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|#  9|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:34:56.538|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:34:57.179|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User|# 10|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:34:57.179|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post|Create User - ending activity
2023-09-01 08:34:57.440|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Post] saving test scenario
2023-09-01 08:34:57.624|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put - executing test scenario
2023-09-01 08:34:57.624|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset - executing activity
2023-09-01 08:34:57.624|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:34:58.260|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:34:58.260|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:34:58.876|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:34:58.877|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  7|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:34:59.518|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  7|base.save(var,value)      - PASS stored 'test99882' as ${randomUsername}
2023-09-01 08:34:59.519|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  8|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:35:00.155|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  8|base.save(var,value)      - PASS stored '{
    "username": "test99882",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:35:00.155|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:35:00.765|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:35:01.844|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:35:01.845|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:35:01.879|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:35:01.880|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 10|base.save(var,value)      - executing save(var,value)(actualAnswer, ${answer})
2023-09-01 08:35:02.522|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 10|base.save(var,value)      - PASS stored 'admin' as ${actualAnswer}
2023-09-01 08:35:02.523|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:35:03.158|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:35:03.159|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 12|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:35:04.500|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:35:05.126|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:35:05.732|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:35:06.354|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1080 is less than or equal to 3000
2023-09-01 08:35:06.962|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:35:07.583|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:35:08.189|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:35:08.191|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:35:08.813|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:35:09.428|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:35:10.042|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:35:10.051|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 12|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:35:10.051|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:35:10.681|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:35:10.682|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 14|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}/gkuser/pwd/question?username=${randomUsername})
2023-09-01 08:35:11.318|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 14|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test99882' as ${url}
2023-09-01 08:35:11.319|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:35:11.926|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test99882 HTTP/1.1
2023-09-01 08:35:12.711|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:35:12.712|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org//gkuser/pwd/question?username=test99882 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:35:12.753|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 15|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org//gkuser/pwd/question?username=test99882'
2023-09-01 08:35:12.755|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 16|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:35:13.406|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 16|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:35:13.407|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 17|base.save(var,value)      - executing save(var,value)(actualUserid, [JSON(${response}.body) => extract(gkresult.userid)])
2023-09-01 08:35:14.060|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 17|base.save(var,value)      - PASS stored '1362' as ${actualUserid}
2023-09-01 08:35:14.061|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 18|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\pwdQuestion.txt)
2023-09-01 08:35:15.387|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:35:16.007|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:35:16.610|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:35:17.238|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - PASS 787 is less than or equal to 3000
2023-09-01 08:35:17.847|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:35:18.481|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:35:19.092|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:35:19.094|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\pwdQuestion.txt!=null)		=> MATCHED
2023-09-01 08:35:19.705|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:35:20.307|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:35:20.926|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:35:20.938|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 18|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:35:20.939|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 19|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:35:21.567|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 19|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:35:21.568|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 20|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser/pwd/reset)
2023-09-01 08:35:22.180|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 20|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser/pwd/reset' as ${url}
2023-09-01 08:35:22.181|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 21|base.save(var,value)      - executing save(var,value)(body, {
  "userid": "${actualUserid}",
  "useranswer": "${actualAnswer}",
  "userpassword": "${resetPassword}"
}
)
2023-09-01 08:35:22.830|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 21|base.save(var,value)      - PASS stored '{
  "userid": "1362",
  "useranswer": "admin",
  "userpassword": "User12345"
}
' as ${body}
2023-09-01 08:35:22.831|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 08:35:23.443|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/gkuser/pwd/reset HTTP/1.1
2023-09-01 08:35:24.496|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 08:35:24.497|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/gkuser/pwd/reset HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:35:24.528|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 22|ws.put(url,body,var)      - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser/pwd/reset'
2023-09-01 08:35:24.529|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 23|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:35:25.165|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 23|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:35:25.166|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 24|base.verbose(text)        - executing verbose(text)(${response}.body)
2023-09-01 08:35:25.772|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 24|base.verbose(text)        - 
{"gkstatus": 0}
2023-09-01 08:35:25.775|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 24|base.verbose(text)        - PASS 
2023-09-01 08:35:25.775|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 25|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\resetUser.txt)
2023-09-01 08:35:27.072|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:35:27.687|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:35:28.300|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:35:28.929|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1056 is less than or equal to 3000
2023-09-01 08:35:29.536|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:35:30.169|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:35:30.781|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:35:30.783|I|Thread-1|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GKUser\resetUser.txt!=null)		=> MATCHED
2023-09-01 08:35:31.399|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:35:32.007|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:35:32.620|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:35:32.640|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 25|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:35:32.641|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:35:33.282|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset|# 26|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:35:33.283|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|gkUser/pwd/reset - ending activity
2023-09-01 08:35:33.284|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|Clear the Token - executing activity
2023-09-01 08:35:33.284|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|Clear the Token|# 27|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:35:33.898|I|Thread-1|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:35:33.919|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|Clear the Token|# 27|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:35:33.920|I|Thread-1|GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put|Clear the Token - ending activity
2023-09-01 08:35:34.679|I|Thread-1|[GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001|Put] saving test scenario
2023-09-01 08:35:34.861|I|Thread-1|[20230901_083241] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 163339 ms
» Test Steps:     167
» Error(s):       0



2023-09-01 08:35:35.425|I|Thread-1|[20230901_083241] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 167963 ms
» Iterations:     [1] total 1
» Test Steps:     167
» Passed:         167
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.001,GKUser.20230901_083248.001.xlsx



2023-09-01 08:35:35.425|I|Thread-1|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:35:35.909|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\GKUser.xlsx] now completed
2023-09-01 08:35:35.909|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GNUKhata.data.xlsx
2023-09-01 08:35:35.957|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:35:35.957|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx] new thread started
2023-09-01 08:35:35.961|I|Thread-5|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:35:35.962|I|Thread-5|On-Demand Inspection detection enabled
2023-09-01 08:35:35.962|I|Thread-5|[20230901_083241] executing C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx with 1 iteration(s)
2023-09-01 08:35:35.964|I|Thread-5|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\captures
2023-09-01 08:35:35.964|I|Thread-5|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs
2023-09-01 08:35:36.111|I|Thread-5|[20230901_083241] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001.xlsx
2023-09-01 08:35:36.111|I|Thread-5|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\GNUKhata.data.xlsx
2023-09-01 08:35:36.180|I|Thread-5|[20230901_083241] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001.xlsx
2023-09-01 08:35:36.484|I|Thread-5|STARTS
2023-09-01 08:35:36.489|I|Thread-5|skipping test step in ROW 5 since it's disabled
2023-09-01 08:35:36.490|I|Thread-5|skipping test step in ROW 6 since it's disabled
2023-09-01 08:35:36.491|I|Thread-5|skipping test step in ROW 7 since it's disabled
2023-09-01 08:35:37.498|I|Thread-5|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:35:37.498|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx' from 'Test Plan' step 6
2023-09-01 08:35:37.500|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:35:37.501|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token - executing test scenario
2023-09-01 08:35:37.502|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token - executing activity
2023-09-01 08:35:37.503|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:35:38.844|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:35:39.457|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:35:40.069|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:35:40.685|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:35:41.293|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:35:41.903|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:35:43.008|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:35:43.009|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:35:43.043|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:35:43.646|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:35:44.264|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:35:44.278|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:35:44.279|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:35:44.923|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:35:44.924|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:35:46.248|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:35:46.878|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:35:47.488|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:35:48.103|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:35:48.713|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:35:49.336|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:35:49.952|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:35:50.560|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:35:51.615|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:35:51.616|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:35:51.643|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:35:52.248|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:35:52.880|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:35:52.891|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:35:52.892|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:35:53.526|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:35:53.527|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(jSessionId, ${response}.cookies.JSESSIONID.value)
2023-09-01 08:35:54.166|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored '.value' as ${jSessionId}
2023-09-01 08:35:54.168|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token|Login Token - ending activity
2023-09-01 08:35:54.598|I|Thread-5|[GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Token] saving test scenario
2023-09-01 08:35:54.723|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post - executing test scenario
2023-09-01 08:35:54.724|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Set headers - executing activity
2023-09-01 08:35:54.724|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(Authorization, "${token}")
2023-09-01 08:35:55.369|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header Authorization=""
2023-09-01 08:35:55.370|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Set headers|#  6|ws.header(name,value)     - executing header(name,value)(Cookie, JSESSIONID=${jSessionId})
2023-09-01 08:35:56.016|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Set headers|#  6|ws.header(name,value)     - PASS set HTTP Header Cookie=JSESSIONID=.value
2023-09-01 08:35:56.016|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Set headers - ending activity
2023-09-01 08:35:56.017|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User - executing activity
2023-09-01 08:35:56.018|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}gkuser)
2023-09-01 08:35:56.647|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/gkuser' as ${url}
2023-09-01 08:35:56.648|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|#  8|base.save(var,value)      - executing save(var,value)(randomUsername, test[NUMBER(${num})=>randomDigits(5)])
2023-09-01 08:35:57.277|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|#  8|base.save(var,value)      - PASS stored 'test52918' as ${randomUsername}
2023-09-01 08:35:57.278|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|#  9|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:35:57.924|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|#  9|base.save(var,value)      - PASS stored '{
    "username": "test52918",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:35:57.925|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 10|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:35:58.532|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 10|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:35:59.546|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 10|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:35:59.547|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 10|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:35:59.577|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 10|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:35:59.578|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 11|base.verbose(text)        - executing verbose(text)(${response}.body)
2023-09-01 08:36:00.187|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 11|base.verbose(text)        - 
{"gkstatus": 0, "token": "eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6InRlc3Q1MjkxOCIsInVzZXJpZCI6MTM2M30.FQluJ-IdmzCaJqT8mIFykTrHt_nioYaLmer-08VYzag"}
2023-09-01 08:36:00.191|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 11|base.verbose(text)        - PASS 
2023-09-01 08:36:00.191|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)([JSON(${response}.body) => extract(gkstatus)], 0)
2023-09-01 08:36:00.831|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 12|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:36:00.832|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 13|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\CreateUser.txt)
2023-09-01 08:36:02.165|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:36:02.787|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:36:03.399|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:36:04.025|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1016 is less than or equal to 3000
2023-09-01 08:36:04.633|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:36:05.265|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:36:05.874|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:36:05.875|I|Thread-5|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GNUKhata\CreateUser.txt!=null)		=> MATCHED
2023-09-01 08:36:06.505|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:36:07.117|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:36:07.740|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:36:07.758|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User|# 13|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:36:07.759|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create User - ending activity
2023-09-01 08:36:07.759|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID - executing activity
2023-09-01 08:36:07.760|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 14|base.save(var,value)      - executing save(var,value)(body, {
    "username": "${randomUsername}",
    "userpassword": "${password}",
    "userquestion": "${question}",
    "useranswer": "${answer}"
}
)
2023-09-01 08:36:08.405|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 14|base.save(var,value)      - PASS stored '{
    "username": "test52918",
    "userpassword": "test4",
    "userquestion": "Your Favourite Place?",
    "useranswer": "admin"
}
' as ${body}
2023-09-01 08:36:08.406|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:36:09.019|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1
2023-09-01 08:36:10.070|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:36:10.071|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/gkuser HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:36:10.098|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 15|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/gkuser'
2023-09-01 08:36:10.098|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 16|base.assertEqual(expected - executing assertEqual(expected,actual)([JSON(${response}.body) => extract(gkstatus)], 1)
2023-09-01 08:36:10.736|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 16|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '1' = '1'
2023-09-01 08:36:10.736|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DuplicateUser.txt)
2023-09-01 08:36:12.106|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:36:12.725|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:36:13.333|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:36:13.958|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1053 is less than or equal to 3000
2023-09-01 08:36:14.573|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:36:15.193|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:36:15.794|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:36:15.795|I|Thread-5|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\GNUKhata\DuplicateUser.txt!=null)		=> MATCHED
2023-09-01 08:36:16.416|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:36:17.022|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:36:17.641|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:36:17.653|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 17|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:36:17.654|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 18|ws.clearHeaders(headers)  - executing clearHeaders(headers)(Authorization,Cookie)
2023-09-01 08:36:18.263|I|Thread-5|removed nexial.ws.header.Authorization as HTTP Header; previous value=""
2023-09-01 08:36:18.264|I|Thread-5|removed nexial.ws.header.Cookie as HTTP Header; previous value=JSESSIONID=.value
2023-09-01 08:36:18.286|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID|# 18|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:36:18.287|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post|Create user with exisiting ID - ending activity
2023-09-01 08:36:18.740|I|Thread-5|[GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Post] saving test scenario
2023-09-01 08:36:18.865|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get - executing test scenario
2023-09-01 08:36:18.865|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get|Read Organisation details - executing activity
2023-09-01 08:36:18.865|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get|Read Organisation details|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${response})
2023-09-01 08:36:18.868|I|Thread-5|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:36:18.870|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get|Read Organisation details|#  5|ws.header(name,value)     - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:36:18.870|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get|Read Organisation details|#  6|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:36:18.871|I|Thread-5|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:36:18.871|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get|Read Organisation details|#  6|ws.assertReturnCode(var,r - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:36:18.872|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get|Read Organisation details|#  7|number.assertLesser(num1, - executing assertLesser(num1,num2)(${response}.elapsedTime, 3000)
2023-09-01 08:36:18.872|I|Thread-5|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:36:18.872|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get|Read Organisation details|#  7|number.assertLesser(num1, - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:36:18.873|I|Thread-5|GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get|Read Organisation details - ending activity
2023-09-01 08:36:18.880|I|Thread-5|[GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001|Get] saving test scenario
2023-09-01 08:36:19.009|I|Thread-5|[20230901_083241] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 41507 ms
» Test Steps:     41
» Error(s):       0



2023-09-01 08:36:19.404|I|Thread-5|[20230901_083241] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 43442 ms
» Iterations:     [1] total 1
» Test Steps:     41
» Passed:         38
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.002,GNUKhata.20230901_083535.001.xlsx



2023-09-01 08:36:19.404|I|Thread-5|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:36:20.362|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\GNUKhata.xlsx] now completed
2023-09-01 08:36:20.362|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Account.data.xlsx
2023-09-01 08:36:20.413|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:36:20.413|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx] new thread started
2023-09-01 08:36:20.416|I|Thread-8|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:36:20.416|I|Thread-8|On-Demand Inspection detection enabled
2023-09-01 08:36:20.417|I|Thread-8|[20230901_083241] executing C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx with 1 iteration(s)
2023-09-01 08:36:20.417|I|Thread-8|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\captures
2023-09-01 08:36:20.418|I|Thread-8|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs
2023-09-01 08:36:20.587|I|Thread-8|[20230901_083241] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001.xlsx
2023-09-01 08:36:20.588|I|Thread-8|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Account.data.xlsx
2023-09-01 08:36:20.659|I|Thread-8|[20230901_083241] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001.xlsx
2023-09-01 08:36:20.901|I|Thread-8|STARTS
2023-09-01 08:36:21.919|I|Thread-8|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:36:21.919|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx' from 'Test Plan' step 7
2023-09-01 08:36:21.920|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:36:21.921|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token - executing test scenario
2023-09-01 08:36:21.921|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token - executing activity
2023-09-01 08:36:21.922|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:36:23.268|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:36:23.890|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:36:24.502|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:36:25.124|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:36:25.739|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:36:26.349|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:36:27.476|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:36:27.478|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:36:27.511|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:36:28.114|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:36:28.759|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:36:28.775|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:36:28.776|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:36:29.404|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:36:29.406|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:36:30.742|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:36:31.367|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:36:31.969|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:36:32.583|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:36:33.193|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:36:33.810|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:36:34.415|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:36:35.021|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:36:36.052|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:36:36.053|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:36:36.090|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:36:36.699|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:36:37.324|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:36:37.341|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token|#  7|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:36:37.342|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token|#  8|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:36:37.968|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token|#  8|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:36:37.969|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token|Login Token - ending activity
2023-09-01 08:36:38.331|I|Thread-8|[GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Token] saving test scenario
2023-09-01 08:36:38.431|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get - executing test scenario
2023-09-01 08:36:38.432|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) - executing activity
2023-09-01 08:36:38.432|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:36:39.056|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:36:39.057|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 08:36:39.690|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 08:36:39.691|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:36:40.303|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 08:36:41.657|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:36:41.918|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:36:41.935|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 08:36:41.936|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:36:42.598|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:36:42.598|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  9|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Accounts.txt)
2023-09-01 08:36:43.964|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:36:44.593|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:36:45.207|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:36:45.824|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1616 is less than or equal to 3000
2023-09-01 08:36:46.435|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:36:47.061|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:36:47.672|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:36:47.674|I|Thread-8|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Account\\Accounts.txt!=null)		=> MATCHED
2023-09-01 08:36:48.331|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:36:48.941|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:36:49.568|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:36:49.590|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|#  9|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:36:49.591|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|# 10|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:36:50.218|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|# 10|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:36:50.219|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|# 11|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:36:50.833|I|Thread-8|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:36:50.853|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts)|# 11|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:36:50.854|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts (List of accounts) - ending activity
2023-09-01 08:36:50.854|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet - executing activity
2023-09-01 08:36:50.854|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 12|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:36:51.493|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 12|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:36:51.494|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 13|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts/spreadsheet?fystart=${fystart}&fyend=${fyend}&orgname=${orgname}&orgtype=${orgtype})
2023-09-01 08:36:52.119|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 13|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For Profit' as ${url}
2023-09-01 08:36:52.121|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:36:52.729|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For+Profit HTTP/1.1
2023-09-01 08:36:53.916|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:36:53.930|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For+Profit HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:36:53.965|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 14|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts/spreadsheet?fystart=2023-04-01&fyend=2024-03-31&orgname=GNUKhata_Milk_Product&orgtype=For Profit'
2023-09-01 08:36:53.966|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 15|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=4000
expectedContentType=application/vnd.openxmlformats-officedocument.spreadsheetml.sheet
)
2023-09-01 08:36:55.316|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:36:55.955|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:36:56.557|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:36:57.187|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1201 is less than or equal to 4000
2023-09-01 08:36:57.801|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:36:58.446|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet' = 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet'
2023-09-01 08:36:59.052|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:36:59.053|I|Thread-8|evaluating flow control:	ProceedIf(!=null)		=> NOT MATCHED
2023-09-01 08:36:59.055|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 14|json.assertCorrectness(js - SKIPPED current step skipped: NOT TRUE(${schema} != null)
2023-09-01 08:36:59.671|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:37:00.284|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response
2023-09-01 08:37:00.304|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 15|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:37:00.305|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 16|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:37:00.950|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 16|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:37:00.951|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 17|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:37:01.563|I|Thread-8|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:37:01.585|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet|# 17|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:37:01.585|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get|Positive - accounts/Spreadsheet - ending activity
2023-09-01 08:37:02.314|I|Thread-8|[GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Get] saving test scenario
2023-09-01 08:37:02.417|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post - executing test scenario
2023-09-01 08:37:02.419|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Set headers - executing activity
2023-09-01 08:37:02.419|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:37:03.038|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:37:03.039|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Set headers - ending activity
2023-09-01 08:37:03.040|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation - executing activity
2023-09-01 08:37:03.040|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 08:37:03.660|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 08:37:03.661|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|#  7|base.save(var,value)      - executing save(var,value)(randomACname, test[NUMBER(${num})=>randomDigits(3)])
2023-09-01 08:37:04.298|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|#  7|base.save(var,value)      - PASS stored 'test356' as ${randomACname}
2023-09-01 08:37:04.299|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|#  8|base.save(var,value)      - executing save(var,value)(randomOrigin, createAccount[NUMBER(${num})=>randomDigits(1)])
2023-09-01 08:37:04.950|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|#  8|base.save(var,value)      - PASS stored 'createAccount1' as ${randomOrigin}
2023-09-01 08:37:04.951|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|#  9|base.save(var,value)      - executing save(var,value)(body, {
    "origin":"${randomOrigin}",
    "gkdata":{
        "accountname": "${randomACname}",
        "groupcode": 18,
        "openingbal": "0.00"
    }
})
2023-09-01 08:37:05.579|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|#  9|base.save(var,value)      - PASS stored '{
    "origin":"createAccount1",
    "gkdata":{
        "accountname": "test356",
        "groupcode": 18,
        "openingbal": "0.00"
    }
}' as ${body}
2023-09-01 08:37:05.580|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:37:06.191|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 08:37:07.239|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:37:07.240|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:37:07.260|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 10|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 08:37:07.260|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:37:07.884|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:37:07.885|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 12|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\AccountsPost.txt)
2023-09-01 08:37:09.197|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:37:09.811|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:37:10.424|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:37:11.046|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1049 is less than or equal to 3000
2023-09-01 08:37:11.661|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:37:12.275|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:37:12.890|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:37:12.892|I|Thread-8|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Account\\AccountsPost.txt!=null)		=> MATCHED
2023-09-01 08:37:13.526|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:37:14.142|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:37:14.774|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:37:14.794|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 12|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:37:14.795|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:37:15.414|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:37:15.415|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 14|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:37:16.019|I|Thread-8|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:37:16.041|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation|# 14|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:37:16.041|I|Thread-8|GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post|Positive-Organisation - ending activity
2023-09-01 08:37:16.278|I|Thread-8|[GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001|Post] saving test scenario
2023-09-01 08:37:16.390|I|Thread-8|[20230901_083241] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 54469 ms
» Test Steps:     51
» Error(s):       0



2023-09-01 08:37:16.751|I|Thread-8|[20230901_083241] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 56335 ms
» Iterations:     [1] total 1
» Test Steps:     51
» Passed:         50
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.003,Account.20230901_083620.001.xlsx



2023-09-01 08:37:16.751|I|Thread-8|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:37:16.865|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Account.xlsx] now completed
2023-09-01 08:37:16.865|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\AuditLogs.data.xlsx
2023-09-01 08:37:16.910|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:37:16.911|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx] new thread started
2023-09-01 08:37:16.917|I|Thread-11|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:37:16.918|I|Thread-11|On-Demand Inspection detection enabled
2023-09-01 08:37:16.918|I|Thread-11|[20230901_083241] executing C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx with 1 iteration(s)
2023-09-01 08:37:16.919|I|Thread-11|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\captures
2023-09-01 08:37:16.920|I|Thread-11|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs
2023-09-01 08:37:17.037|I|Thread-11|[20230901_083241] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001.xlsx
2023-09-01 08:37:17.037|I|Thread-11|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\AuditLogs.data.xlsx
2023-09-01 08:37:17.103|I|Thread-11|[20230901_083241] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001.xlsx
2023-09-01 08:37:17.413|I|Thread-11|STARTS
2023-09-01 08:37:18.434|I|Thread-11|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:37:18.434|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx' from 'Test Plan' step 8
2023-09-01 08:37:18.435|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:37:18.436|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token - executing test scenario
2023-09-01 08:37:18.437|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token - executing activity
2023-09-01 08:37:18.437|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:37:19.759|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:37:20.386|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:37:20.990|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:37:21.622|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:37:22.238|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:37:22.853|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:37:23.949|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:37:23.950|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:37:23.981|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:37:24.590|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:37:25.216|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:37:25.231|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:37:25.231|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:37:25.892|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:37:25.893|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 08:37:26.497|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:37:26.499|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 08:37:26.500|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:37:27.796|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:37:28.436|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:37:29.042|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:37:29.655|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:37:30.264|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:37:30.884|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:37:31.489|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:37:32.095|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:37:33.142|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:37:33.143|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:37:33.158|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:37:33.762|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:37:34.388|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:37:34.398|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:37:34.398|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:37:35.038|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:37:35.039|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 08:37:35.652|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:37:35.655|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 08:37:35.655|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token|Login Token - ending activity
2023-09-01 08:37:36.080|I|Thread-11|[GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Token] saving test scenario
2023-09-01 08:37:36.193|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get - executing test scenario
2023-09-01 08:37:36.194|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log - executing activity
2023-09-01 08:37:36.194|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  5|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}log)
2023-09-01 08:37:36.819|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  5|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/log' as ${url}
2023-09-01 08:37:36.820|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:37:37.436|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log HTTP/1.1
2023-09-01 08:37:38.190|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:37:38.191|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:37:38.203|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  6|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log'
2023-09-01 08:37:38.204|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  7|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:37:38.832|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  7|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:37:38.833|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 08:37:40.138|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:37:40.756|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:37:41.362|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:37:41.987|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 756 is less than or equal to 3000
2023-09-01 08:37:42.593|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:37:43.231|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:37:43.845|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:37:43.847|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 08:37:44.472|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:37:45.086|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:37:45.714|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:37:45.726|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:37:45.727|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  9|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:37:46.370|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log|#  9|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:37:46.371|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /log - ending activity
2023-09-01 08:37:46.371|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log - executing activity
2023-09-01 08:37:46.372|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 10|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:37:47.002|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 10|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:37:47.003|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:37:47.606|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log HTTP/1.1
2023-09-01 08:37:48.436|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:37:48.437|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:37:48.451|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 11|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log'
2023-09-01 08:37:48.452|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 12|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:37:49.097|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 12|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:37:49.098|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 13|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\AuditLogs.txt)
2023-09-01 08:37:50.462|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:37:51.080|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:37:51.696|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:37:52.321|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 831 is less than or equal to 3000
2023-09-01 08:37:52.932|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:37:53.561|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:37:54.162|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:37:54.164|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\AuditLogs\\AuditLogs.txt!=null)		=> MATCHED
2023-09-01 08:37:54.795|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:37:55.406|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:37:56.026|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:37:56.036|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 13|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:37:56.036|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 14|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:37:56.663|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log|# 14|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:37:56.664|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive - /log - ending activity
2023-09-01 08:37:56.665|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate - executing activity
2023-09-01 08:37:56.665|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 15|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 08:37:57.274|I|Thread-11|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:37:57.276|I|Thread-11|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:37:57.286|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 15|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:37:57.286|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 16|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}log/dateRange?from=${fromDate}&to=${toDate})
2023-09-01 08:37:57.923|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 16|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30' as ${url}
2023-09-01 08:37:57.923|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:37:58.533|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1
2023-09-01 08:37:59.488|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:37:59.490|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:37:59.520|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 17|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30'
2023-09-01 08:37:59.521|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 18|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:38:00.151|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 18|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:38:00.151|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 19|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${data.path}\Schema\unauthorizedAccess.schema.txt)
2023-09-01 08:38:01.475|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:38:02.102|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:38:02.707|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:38:03.339|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - PASS 958 is less than or equal to 3000
2023-09-01 08:38:03.951|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:38:04.575|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:38:05.190|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:38:05.191|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\unauthorizedAccess.schema.txt!=null)		=> MATCHED
2023-09-01 08:38:05.814|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:38:06.418|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:38:07.037|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:38:07.049|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 19|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:38:07.050|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 20|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:38:07.690|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate|# 20|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:38:07.691|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Negative - /logs/rangedate - ending activity
2023-09-01 08:38:07.692|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate - executing activity
2023-09-01 08:38:07.692|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 21|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:38:08.330|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 21|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:38:08.331|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 22|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:38:08.968|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 22|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:38:08.968|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:38:09.579|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1
2023-09-01 08:38:10.717|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:38:10.718|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:38:10.752|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 23|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log/dateRange?from=2028-04-12&to=2028-04-30'
2023-09-01 08:38:10.753|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:38:11.375|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 24|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:38:11.376|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 25|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DateRangePositiveResponse.txt)
2023-09-01 08:38:12.699|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:38:13.314|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:38:13.925|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:38:14.566|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1140 is less than or equal to 3000
2023-09-01 08:38:15.173|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:38:15.804|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:38:16.420|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:38:16.422|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\AuditLogs\\DateRangePositiveResponse.txt!=null)		=> MATCHED
2023-09-01 08:38:17.040|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:38:17.647|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:38:18.267|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:38:18.292|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 25|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:38:18.293|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 26|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:38:18.933|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 26|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:38:18.934|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 27|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gktoken)
2023-09-01 08:38:19.551|I|Thread-11|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:38:19.552|I|Thread-11|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:38:19.569|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate|# 27|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:38:19.570|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get|Positive -  /logs/rangedate - ending activity
2023-09-01 08:38:20.556|I|Thread-11|[GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Get] saving test scenario
2023-09-01 08:38:20.698|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post - executing test scenario
2023-09-01 08:38:20.698|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers - executing activity
2023-09-01 08:38:20.698|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:38:21.328|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:38:21.329|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}log)
2023-09-01 08:38:21.943|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/log' as ${url}
2023-09-01 08:38:21.944|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  7|base.save(var,value)      - executing save(var,value)(body, {
"activity": "3% Milk Fat product created"
})
2023-09-01 08:38:22.579|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  7|base.save(var,value)      - PASS stored '{
"activity": "3% Milk Fat product created"
}' as ${body}
2023-09-01 08:38:22.580|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  8|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:38:23.183|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  8|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/log HTTP/1.1
2023-09-01 08:38:24.240|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  8|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:38:24.241|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  8|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/log HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:38:24.271|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  8|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/log'
2023-09-01 08:38:24.272|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:38:24.919|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|#  9|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:38:24.920|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\createlog.txt)
2023-09-01 08:38:26.258|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:38:26.891|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:38:27.496|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:38:28.126|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1058 is less than or equal to 3000
2023-09-01 08:38:28.741|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:38:29.357|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:38:29.970|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:38:29.973|I|Thread-11|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\AuditLogs\\createlog.txt!=null)		=> MATCHED
2023-09-01 08:38:30.595|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:38:31.202|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:38:31.825|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:38:31.851|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:38:31.852|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:38:32.493|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:38:32.494|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|# 12|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gktoken)
2023-09-01 08:38:33.102|I|Thread-11|removed nexial.ws.header.gktoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:38:33.122|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers|# 12|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:38:33.122|I|Thread-11|GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post|Set headers - ending activity
2023-09-01 08:38:33.371|I|Thread-11|[GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001|Post] saving test scenario
2023-09-01 08:38:33.498|I|Thread-11|[20230901_083241] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 75061 ms
» Test Steps:     71
» Error(s):       0



2023-09-01 08:38:33.810|I|Thread-11|[20230901_083241] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 76895 ms
» Iterations:     [1] total 1
» Test Steps:     71
» Passed:         71
» Error(s):       0
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.004,AuditLogs.20230901_083716.001.xlsx



2023-09-01 08:38:33.810|I|Thread-11|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:38:34.610|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\AuditLogs.xlsx] now completed
2023-09-01 08:38:34.610|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\CustomerandSupplier.data.xlsx
2023-09-01 08:38:34.650|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:38:34.650|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx] new thread started
2023-09-01 08:38:34.655|I|Thread-14|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:38:34.655|I|Thread-14|On-Demand Inspection detection enabled
2023-09-01 08:38:34.656|I|Thread-14|[20230901_083241] executing C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx with 1 iteration(s)
2023-09-01 08:38:34.657|I|Thread-14|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\captures
2023-09-01 08:38:34.657|I|Thread-14|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs
2023-09-01 08:38:34.819|I|Thread-14|[20230901_083241] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001.xlsx
2023-09-01 08:38:34.820|I|Thread-14|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\CustomerandSupplier.data.xlsx
2023-09-01 08:38:34.892|I|Thread-14|[20230901_083241] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001.xlsx
2023-09-01 08:38:35.208|I|Thread-14|STARTS
2023-09-01 08:38:36.228|I|Thread-14|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:38:36.230|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx' from 'Test Plan' step 9
2023-09-01 08:38:36.230|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:38:36.231|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token - executing test scenario
2023-09-01 08:38:36.231|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token - executing activity
2023-09-01 08:38:36.232|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:38:37.565|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:38:38.187|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:38:38.799|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:38:39.417|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:38:40.023|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:38:40.632|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:38:41.780|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:38:41.781|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:38:41.809|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:38:42.419|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:38:43.050|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:38:43.065|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:38:43.066|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:38:43.723|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:38:43.724|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 08:38:44.328|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:38:44.331|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 08:38:44.332|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:38:45.678|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:38:46.305|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:38:46.912|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:38:47.531|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:38:48.142|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:38:48.761|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:38:49.365|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:38:49.975|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:38:51.026|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:38:51.027|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:38:51.057|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:38:51.666|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:38:52.303|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:38:52.320|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:38:52.321|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:38:52.950|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:38:52.951|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 08:38:53.565|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:38:53.566|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 08:38:53.567|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token|Login Token - ending activity
2023-09-01 08:38:53.936|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|Token] saving test scenario
2023-09-01 08:38:54.038|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST - executing test scenario
2023-09-01 08:38:54.039|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Set headers - executing activity
2023-09-01 08:38:54.039|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:38:54.675|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:38:54.675|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Set headers - ending activity
2023-09-01 08:38:54.676|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer - executing activity
2023-09-01 08:38:54.676|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  6|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:38:55.310|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  6|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:38:55.311|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  7|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(11, -1)
2023-09-01 08:38:55.918|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:38:55.919|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${csflag}))
2023-09-01 08:38:56.525|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - executing save(var,value)(cstflag, $(array|item|${csflag}|${counter}))
2023-09-01 08:38:57.128|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored '3' as ${cstflag}
2023-09-01 08:38:57.129|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - executing save(var,value)(randomCustname, test[NUMBER(${num})=>randomDigits(6)])
2023-09-01 08:38:57.738|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'test630992' as ${randomCustname}
2023-09-01 08:38:57.739|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer)
2023-09-01 08:38:58.342|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer' as ${url}
2023-09-01 08:38:58.343|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - executing save(var,value)(body, {
  "custname": "${randomCustname}",
  "custaddr": "string",
  "state": "${state}",
  "pincode": "string",
  "csflag": ${cstflag},
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
})
2023-09-01 08:38:58.946|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - [repeat-until] PASS stored '{
  "custname": "test630992",
  "custaddr": "string",
  "state": "Karnataka",
  "pincode": "string",
  "csflag": 3,
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
}' as ${body}
2023-09-01 08:38:58.948|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:38:59.564|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/customer HTTP/1.1
2023-09-01 08:39:00.591|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:39:00.592|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/customer HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:39:00.595|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer'
2023-09-01 08:39:00.596|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:39:01.198|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 03:08:59 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1029
body={"gkstatus": 0, "gkresult": {"custid": 744}}
2023-09-01 08:39:01.199|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 03:08:59 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1029
body={"gkstatus": 0, "gkresult": {"custid": 744}}
2023-09-01 08:39:01.201|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:39:01.812|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:39:01.813|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PostCustomer.customer.txt)
2023-09-01 08:39:03.164|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:39:03.770|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:39:04.385|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:39:04.987|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1029 is less than or equal to 3000
2023-09-01 08:39:05.593|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:39:06.198|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:39:06.811|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:39:06.813|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\PostCustomer.customer.txt!=null)		=> MATCHED
2023-09-01 08:39:07.426|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:39:08.031|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:39:08.639|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:39:08.640|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:39:08.641|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:39:09.244|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:39:09.245|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:39:09.855|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:39:09.856|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:39:09.856|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${csflag}))
2023-09-01 08:39:10.471|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - executing save(var,value)(cstflag, $(array|item|${csflag}|${counter}))
2023-09-01 08:39:11.075|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored '19' as ${cstflag}
2023-09-01 08:39:11.076|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - executing save(var,value)(randomCustname, test[NUMBER(${num})=>randomDigits(6)])
2023-09-01 08:39:11.690|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'test229718' as ${randomCustname}
2023-09-01 08:39:11.691|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer)
2023-09-01 08:39:12.296|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 11|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer' as ${url}
2023-09-01 08:39:12.297|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - executing save(var,value)(body, {
  "custname": "${randomCustname}",
  "custaddr": "string",
  "state": "${state}",
  "pincode": "string",
  "csflag": ${cstflag},
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
})
2023-09-01 08:39:12.901|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 12|base.save(var,value)      - [repeat-until] PASS stored '{
  "custname": "test229718",
  "custaddr": "string",
  "state": "Karnataka",
  "pincode": "string",
  "csflag": 19,
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
}' as ${body}
2023-09-01 08:39:12.903|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:39:13.514|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/customer HTTP/1.1
2023-09-01 08:39:14.576|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:39:14.578|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/customer HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:39:14.582|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 13|ws.post(url,body,var)     - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer'
2023-09-01 08:39:14.583|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:39:15.184|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 03:09:13 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1065
body={"gkstatus": 0, "gkresult": {"custid": 745}}
2023-09-01 08:39:15.185|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 14|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=44, Date=Fri, 01 Sep 2023 03:09:13 GMT, Content-Type=application/json}
contentLength=44
elapsedTime=1065
body={"gkstatus": 0, "gkresult": {"custid": 745}}
2023-09-01 08:39:15.186|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:39:15.794|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:39:15.795|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PostCustomer.customer.txt)
2023-09-01 08:39:17.165|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:39:17.778|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:39:18.382|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:39:18.993|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1065 is less than or equal to 3000
2023-09-01 08:39:19.598|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:39:20.201|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:39:20.815|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:39:20.816|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\PostCustomer.customer.txt!=null)		=> MATCHED
2023-09-01 08:39:21.423|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:39:22.033|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:39:22.642|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:39:22.643|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:39:22.644|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:39:23.260|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:39:23.261|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:39:23.864|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:39:23.865|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:39:23.866|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${csflag}))
2023-09-01 08:39:24.513|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer|#  7|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:39:24.521|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST|Create a new customer / supplier : POST- /customer - ending activity
2023-09-01 08:39:24.576|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|POST] saving test scenario
2023-09-01 08:39:24.686|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET - executing test scenario
2023-09-01 08:39:24.686|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Set headers - executing activity
2023-09-01 08:39:24.686|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:39:25.318|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:39:25.319|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Set headers - ending activity
2023-09-01 08:39:25.320|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer - executing activity
2023-09-01 08:39:25.320|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  6|base.save(var,value)      - executing save(var,value)(counter, 0)
2023-09-01 08:39:25.956|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  6|base.save(var,value)      - PASS stored '0' as ${counter}
2023-09-01 08:39:25.956|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  7|base.repeatUntil(steps,ma - executing repeatUntil(steps,maxWaitMs)(11, -1)
2023-09-01 08:39:26.565|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #1---------------------------------------------->
2023-09-01 08:39:26.566|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${qty}))
2023-09-01 08:39:27.183|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - executing save(var,value)(csqty, $(array|item|${qty}|${counter}))
2023-09-01 08:39:27.785|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored 'custall' as ${csqty}
2023-09-01 08:39:27.786|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer?qty=${csqty})
2023-09-01 08:39:28.388|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer?qty=custall' as ${url}
2023-09-01 08:39:28.388|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:39:29.000|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer?qty=custall HTTP/1.1
2023-09-01 08:39:29.805|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:39:29.806|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer?qty=custall HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:39:29.810|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer?qty=custall'
2023-09-01 08:39:29.811|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:39:30.421|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=601, Date=Fri, 01 Sep 2023 03:09:28 GMT, Content-Type=application/json}
contentLength=601
elapsedTime=807
body={"gkstatus": 0, "gkresult": [{"custid": 583, "custname": "Cust32142"}, {"custid": 733, "custname": "Customer1"}, {"custid": 581, "custname": "Customer3214"}, {"custid": 574, "custname": "Retail Customer (Default)"}, {"custid": 586, "custname": "test225816"}, {"custid": 742, "custname": "test230236"}, {"custid": 584, "custname": "test410794"}, {"custid": 588, "custname": "test519863"}, {"custid": 580, "custname": "test532628"}, {"custid": 576, "custname": "test5628"}, {"custid": 575, "custname...
2023-09-01 08:39:30.422|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=601, Date=Fri, 01 Sep 2023 03:09:28 GMT, Content-Type=application/json}
contentLength=601
elapsedTime=807
body={"gkstatus": 0, "gkresult": [{"custid": 583, "custname": "Cust32142"}, {"custid": 733, "custname": "Customer1"}, {"custid": 581, "custname": "Customer3214"}, {"custid": 574, "custname": "Retail Customer (Default)"}, {"custid": 586, "custname": "test225816"}, {"custid": 742, "custname": "test230236"}, {"custid": 584, "custname": "test410794"}, {"custid": 588, "custname": "test519863"}, {"custid": 580, "custname": "test532628"}, {"custid": 576, "custname": "test5628"}, {"custid": 575, "custname...
2023-09-01 08:39:30.423|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:39:31.034|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:39:31.035|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - executing save(var,value)(custid, [JSON(${response}.body) => extract(gkresult[0].custid)])
2023-09-01 08:39:31.638|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - [repeat-until] PASS stored '583' as ${custid}
2023-09-01 08:39:31.639|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - executing save(var,value)(custname, [JSON(${response}.body) => extract(gkresult[0].custname)])
2023-09-01 08:39:32.257|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored 'Cust32142' as ${custname}
2023-09-01 08:39:32.258|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.customer.txt)
2023-09-01 08:39:33.578|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:39:34.186|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:39:34.789|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:39:35.393|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 807 is less than or equal to 3000
2023-09-01 08:39:35.997|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:39:36.603|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:39:37.219|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:39:37.221|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\Get.customer.txt!=null)		=> MATCHED
2023-09-01 08:39:37.834|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:39:38.449|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:39:39.052|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:39:39.053|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:39:39.054|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:39:39.665|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:39:39.666|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:39:40.268|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 1
2023-09-01 08:39:40.270|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #2---------------------------------------------->
2023-09-01 08:39:40.271|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${qty}))
2023-09-01 08:39:40.881|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - executing save(var,value)(csqty, $(array|item|${qty}|${counter}))
2023-09-01 08:39:41.484|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  9|base.save(var,value)      - [repeat-until] PASS stored 'supall' as ${csqty}
2023-09-01 08:39:41.485|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer?qty=${csqty})
2023-09-01 08:39:42.089|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 10|base.save(var,value)      - [repeat-until] PASS stored 'https://api-dev.gnukhata.org/customer?qty=supall' as ${url}
2023-09-01 08:39:42.090|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:39:42.698|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer?qty=supall HTTP/1.1
2023-09-01 08:39:43.497|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:39:43.498|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer?qty=supall HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:39:43.504|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 11|ws.get(url,queryString,va - [repeat-until] PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer?qty=supall'
2023-09-01 08:39:43.504|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:39:44.121|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=428, Date=Fri, 01 Sep 2023 03:09:42 GMT, Content-Type=application/json}
contentLength=428
elapsedTime=801
body={"gkstatus": 0, "gkresult": [{"custid": 582, "custname": "Cust43242"}, {"custid": 573, "custname": "Retail Supplier (Default)"}, {"custid": 734, "custname": "Supplier"}, {"custid": 743, "custname": "test131898"}, {"custid": 745, "custname": "test229718"}, {"custid": 589, "custname": "test349080"}, {"custid": 591, "custname": "test744388"}, {"custid": 587, "custname": "test784299"}, {"custid": 585, "custname": "test881814"}]}
2023-09-01 08:39:44.122|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 12|base.verbose(text)        - [repeat-until] PASS returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=428, Date=Fri, 01 Sep 2023 03:09:42 GMT, Content-Type=application/json}
contentLength=428
elapsedTime=801
body={"gkstatus": 0, "gkresult": [{"custid": 582, "custname": "Cust43242"}, {"custid": 573, "custname": "Retail Supplier (Default)"}, {"custid": 734, "custname": "Supplier"}, {"custid": 743, "custname": "test131898"}, {"custid": 745, "custname": "test229718"}, {"custid": 589, "custname": "test349080"}, {"custid": 591, "custname": "test744388"}, {"custid": 587, "custname": "test784299"}, {"custid": 585, "custname": "test881814"}]}
2023-09-01 08:39:44.123|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:39:44.736|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 13|base.save(var,value)      - [repeat-until] PASS stored '0' as ${actualGkStatus}
2023-09-01 08:39:44.737|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - executing save(var,value)(custid, [JSON(${response}.body) => extract(gkresult[0].custid)])
2023-09-01 08:39:45.343|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 14|base.save(var,value)      - [repeat-until] PASS stored '582' as ${custid}
2023-09-01 08:39:45.344|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - executing save(var,value)(custname, [JSON(${response}.body) => extract(gkresult[0].custname)])
2023-09-01 08:39:45.951|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 15|base.save(var,value)      - [repeat-until] PASS stored 'Cust43242' as ${custname}
2023-09-01 08:39:45.953|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\Get.customer.txt)
2023-09-01 08:39:47.265|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:39:47.878|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:39:48.480|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:39:49.083|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 12|number.assertLesserOrEqua - PASS 801 is less than or equal to 3000
2023-09-01 08:39:49.696|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:39:50.298|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:39:50.901|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:39:50.903|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\Get.customer.txt!=null)		=> MATCHED
2023-09-01 08:39:51.514|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:39:52.119|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:39:52.720|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:39:52.721|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 16|base.macroFlex(macro,inpu - [repeat-until] PASS Macro successfully executed
2023-09-01 08:39:52.723|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:39:53.325|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 17|base.assertEqual(expected - [repeat-until] PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:39:53.325|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - executing increment(var,amount)(counter, 1)
2023-09-01 08:39:53.936|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|# 18|number.increment(var,amou - [repeat-until] PASS incremented ${counter} by 1 to 2
2023-09-01 08:39:53.937|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - 
<[repeat-until] entering loop #3---------------------------------------------->
2023-09-01 08:39:53.937|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  8|base.assertEqual(expected - executing assertEqual(expected,actual)(${counter}, $(array|length|${qty}))
2023-09-01 08:39:54.574|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer|#  7|base.repeatUntil(steps,ma - PASS repeat-until execution completed
2023-09-01 08:39:54.574|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer - ending activity
2023-09-01 08:39:54.574|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts - executing activity
2023-09-01 08:39:54.574|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 19|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}accounts)
2023-09-01 08:39:55.198|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 19|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/accounts' as ${url}
2023-09-01 08:39:55.199|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:39:55.817|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/accounts HTTP/1.1
2023-09-01 08:39:57.723|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:39:58.348|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/accounts HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:39:58.358|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 20|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/accounts'
2023-09-01 08:39:58.358|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 21|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:39:58.965|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 21|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=54295, Date=Fri, 01 Sep 2023 03:09:55 GMT, Content-Type=application/json}
contentLength=54295
elapsedTime=2531
body={"gkstatus": 0, "gkresult": [{"srno": 1, "accountcode": 5217, "accountname": "Accumulated Depreciation", "openingbal": "0.00", "groupcode": 5107, "groupname": "Fixed Assets", "subgroupcode": "", "subgroupname": "", "sysaccount": 0, "defaultflag": ""}, {"srno": 2, "accountcode": 8174, "accountname": "BCA Purchase", "openingbal": "0.00", "groupcode": 1653, "groupname": "Direct Expense", "subgroupcode": 1654, "subgroupname": "Purchase", "sysaccount": 1, "defaultflag": ""}, {"srno": 3, "accountco...
2023-09-01 08:39:58.967|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 21|base.verbose(text)        - PASS 
2023-09-01 08:39:58.968|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 22|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:39:59.609|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 22|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:39:59.610|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 23|base.save(var,value)      - executing save(var,value)(accountcode, [JSON(${response}.body) => extract(gkresult[8].accountcode)])
2023-09-01 08:40:00.280|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 23|base.save(var,value)      - PASS stored '8208' as ${accountcode}
2023-09-01 08:40:00.281|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 24|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:40:00.914|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts|# 24|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:40:00.915|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get accountcode: GET- /accounts - ending activity
2023-09-01 08:40:00.916|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} - executing activity
2023-09-01 08:40:00.916|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 25|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/search/account/${accountcode})
2023-09-01 08:40:01.545|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 25|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/search/account/8208' as ${url}
2023-09-01 08:40:01.545|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:40:02.154|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer/search/account/8208 HTTP/1.1
2023-09-01 08:40:02.935|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:40:02.936|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer/search/account/8208 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:40:02.959|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 26|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/search/account/8208'
2023-09-01 08:40:02.960|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 27|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:40:03.573|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 27|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:10:01 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=783
body={"gkstatus": 3}
2023-09-01 08:40:03.575|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 27|base.verbose(text)        - PASS 
2023-09-01 08:40:03.576|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 28|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:40:04.198|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 28|base.save(var,value)      - PASS stored '3' as ${actualGkStatus}
2023-09-01 08:40:04.199|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 29|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetAccountcode.customer.txt)
2023-09-01 08:40:05.532|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:40:06.166|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:40:06.780|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:40:07.397|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 783 is less than or equal to 3000
2023-09-01 08:40:08.007|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:40:08.622|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:40:09.230|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:40:09.231|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\GetAccountcode.customer.txt!=null)		=> MATCHED
2023-09-01 08:40:09.868|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:40:10.477|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:40:11.123|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:40:11.131|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 29|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:40:11.131|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 30|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:40:11.751|I|Thread-14|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:40:11.775|E|Thread-14|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001.xlsx_GET_A30.log
2023-09-01 08:40:11.775|E|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 30|base.assertEqual(expected - FAIL 
expected=0
actual  =3
2023-09-01 08:40:11.776|E|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode}|# 30|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001.xlsx_GET_A30.log
2023-09-01 08:40:11.777|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/account/{accountcode} - ending activity
2023-09-01 08:40:11.777|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} - executing activity
2023-09-01 08:40:11.777|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 31|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/search/name/${custname})
2023-09-01 08:40:12.393|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 31|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/search/name/Cust43242' as ${url}
2023-09-01 08:40:12.394|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:40:13.007|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer/search/name/Cust43242 HTTP/1.1
2023-09-01 08:40:13.765|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:40:13.766|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer/search/name/Cust43242 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:40:13.796|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 32|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/search/name/Cust43242'
2023-09-01 08:40:13.797|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 33|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:40:14.402|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 33|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=486, Date=Fri, 01 Sep 2023 03:10:12 GMT, Content-Type=application/json}
contentLength=486
elapsedTime=760
body={"gkstatus": 0, "gkresult": {"custid": 582, "custname": "Cust43242", "custaddr": "string", "custphone": "string", "custemail": "string", "custfax": "string", "custpan": "string", "custtan": "string", "state": "Karnataka", "custdoc": null, "csflag": 19, "gstin": {"10": "10AABCU9603R1Z2"}, "pincode": "string", "bankdetails": {"ifsc": "string", "bankname": "string", "accountno": "string", "branchname": "string"}, "statelist": [{"10": "Bihar"}], "gst_reg_type": 0, "gst_party_type": 0}}
2023-09-01 08:40:14.405|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 33|base.verbose(text)        - PASS 
2023-09-01 08:40:14.406|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 34|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:40:15.043|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 34|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:40:15.044|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 35|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetCustname.customer.txt)
2023-09-01 08:40:16.359|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:40:16.992|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:40:17.599|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:40:18.230|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 760 is less than or equal to 3000
2023-09-01 08:40:18.845|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:40:19.460|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:40:20.069|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:40:20.071|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\GetCustname.customer.txt!=null)		=> MATCHED
2023-09-01 08:40:20.698|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:40:21.312|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:40:21.941|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:40:21.967|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 35|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:40:21.968|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 36|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:40:22.603|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname}|# 36|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:40:22.605|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/search/name/{custname} - ending activity
2023-09-01 08:40:22.605|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} - executing activity
2023-09-01 08:40:22.606|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 37|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/${custid})
2023-09-01 08:40:23.237|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 37|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/582' as ${url}
2023-09-01 08:40:23.237|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:40:23.847|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/customer/582 HTTP/1.1
2023-09-01 08:40:24.619|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:40:24.622|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/customer/582 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:40:24.636|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 38|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/582'
2023-09-01 08:40:24.637|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 39|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:40:25.237|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 39|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=507, Date=Fri, 01 Sep 2023 03:10:23 GMT, Content-Type=application/json}
contentLength=507
elapsedTime=776
body={"gkstatus": 0, "gkresult": {"custid": 582, "custname": "Cust43242", "custaddr": "string", "custphone": "string", "custemail": "string", "custfax": "string", "custpan": "string", "custtan": "string", "state": "Karnataka", "custdoc": null, "csflag": 19, "gstin": {"10": "10AABCU9603R1Z2"}, "pincode": "string", "bankdetails": {"ifsc": "string", "bankname": "string", "accountno": "string", "branchname": "string"}, "statelist": [{"29": "Karnataka"}, {"10": "Bihar"}], "gst_reg_type": 0, "gst_party_...
2023-09-01 08:40:25.239|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 39|base.verbose(text)        - PASS 
2023-09-01 08:40:25.240|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 40|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:40:25.864|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 40|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:40:25.865|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 41|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\GetCustId.customer.txt)
2023-09-01 08:40:27.240|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:40:27.859|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:40:28.472|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:40:29.103|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 776 is less than or equal to 3000
2023-09-01 08:40:29.706|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:40:30.336|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:40:30.945|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:40:30.947|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\GetCustId.customer.txt!=null)		=> MATCHED
2023-09-01 08:40:31.563|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:40:32.169|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:40:32.800|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:40:32.827|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 41|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:40:32.828|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 42|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:40:33.502|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid}|# 42|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:40:33.503|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET|Get Customer and Supplier Details: GET- /customer/{custid} - ending activity
2023-09-01 08:40:34.404|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|GET] saving test scenario
2023-09-01 08:40:34.555|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT - executing test scenario
2023-09-01 08:40:34.555|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Set headers - executing activity
2023-09-01 08:40:34.555|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:40:35.208|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:40:35.209|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Set headers|#  6|base.save(var,value)      - executing save(var,value)(pincode, [NUMBER(${num})=>randomDigits(6)])
2023-09-01 08:40:35.853|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Set headers|#  6|base.save(var,value)      - PASS stored '263406' as ${pincode}
2023-09-01 08:40:35.854|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Set headers - ending activity
2023-09-01 08:40:35.855|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} - executing activity
2023-09-01 08:40:35.855|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  7|base.save(var,value)      - executing save(var,value)(body, {
  "custid": ${putcustid},
  "custdoc": {},
  "custname": "${putcustname}",
  "custaddr": "string",
  "state": "${state}",
  "pincode": "${pincode}",
  "csflag": $(array|item|${csflag}|0),
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
})
2023-09-01 08:40:36.510|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  7|base.save(var,value)      - PASS stored '{
  "custid": 30,
  "custdoc": {},
  "custname": "Cust54536",
  "custaddr": "string",
  "state": "Karnataka",
  "pincode": "263406",
  "csflag": 3,
  "custtan": "string",
  "custphone": "string",
  "custemail": "string",
  "custfax": "string",
  "custpan": "string",
  "gst_reg_type": 0,
  "gst_party_type": 0,
  "gstin": {
    "10": "10AABCU9603R1Z2"
  },
  "bankdetails": {
    "accountno": "string",
    "bankname": "string",
    "ifsc": "string",
    "branchname": "string"
  }
}' as ${body}
2023-09-01 08:40:36.511|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  8|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/${putcustid})
2023-09-01 08:40:37.137|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  8|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/30' as ${url}
2023-09-01 08:40:37.138|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - executing put(url,body,var)(${url}, ${body}, response)
2023-09-01 08:40:37.750|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - Executing request PUT https://api-dev.gnukhata.org/customer/30 HTTP/1.1
2023-09-01 08:40:38.783|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - Saving response payload as raw bytes
2023-09-01 08:40:38.784|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - Executed request PUT https://api-dev.gnukhata.org/customer/30 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:40:38.830|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|#  9|ws.put(url,body,var)      - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/30'
2023-09-01 08:40:38.831|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 10|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:40:39.434|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 10|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:10:37 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=1033
body={"gkstatus": 0}
2023-09-01 08:40:39.437|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 10|base.verbose(text)        - PASS 
2023-09-01 08:40:39.437|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 11|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:40:40.087|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 11|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:40:40.088|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 12|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\PutCustid.customer.txt)
2023-09-01 08:40:41.443|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:40:42.089|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:40:42.695|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:40:43.328|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1033 is less than or equal to 3000
2023-09-01 08:40:43.936|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:40:44.564|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:40:45.164|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:40:45.165|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\PutCustid.customer.txt!=null)		=> MATCHED
2023-09-01 08:40:45.802|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:40:46.418|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:40:47.045|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:40:47.071|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 12|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:40:47.071|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:40:47.712|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid}|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:40:47.713|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT|Edit a customer's / supplier's data : POST- /customer/{custid} - ending activity
2023-09-01 08:40:47.999|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|PUT] saving test scenario
2023-09-01 08:40:48.199|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE - executing test scenario
2023-09-01 08:40:48.199|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Set headers - executing activity
2023-09-01 08:40:48.199|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Set headers|#  5|ws.header(name,value)     - executing header(name,value)(gktoken, ${gktoken})
2023-09-01 08:40:48.842|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Set headers|#  5|ws.header(name,value)     - PASS set HTTP Header gktoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:40:48.843|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Set headers - ending activity
2023-09-01 08:40:48.843|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} - executing activity
2023-09-01 08:40:48.845|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}customer/${deletecustid})
2023-09-01 08:40:49.475|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/customer/33' as ${url}
2023-09-01 08:40:49.476|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - executing delete(url,body,var)(${url}, , response)
2023-09-01 08:40:50.090|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - Executing request DELETE https://api-dev.gnukhata.org/customer/33 HTTP/1.1
2023-09-01 08:40:50.896|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - Saving response payload as raw bytes
2023-09-01 08:40:50.897|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - Executed request DELETE https://api-dev.gnukhata.org/customer/33 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:40:50.924|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  7|ws.delete(url,body,var)   - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/customer/33'
2023-09-01 08:40:50.924|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  8|base.verbose(text)        - executing verbose(text)(${response})
2023-09-01 08:40:51.534|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  8|base.verbose(text)        - 
returnCode=200
statusText=OK
headers={Server=nginx/1.18.0 (Ubuntu), Connection=keep-alive, Content-Length=15, Date=Fri, 01 Sep 2023 03:10:49 GMT, Content-Type=application/json}
contentLength=15
elapsedTime=807
body={"gkstatus": 0}
2023-09-01 08:40:51.536|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  8|base.verbose(text)        - PASS 
2023-09-01 08:40:51.536|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:40:52.174|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|#  9|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:40:52.175|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeleteCustid.customer.txt)
2023-09-01 08:40:53.524|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:40:54.166|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:40:54.772|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:40:55.403|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 12|number.assertLesserOrEqua - PASS 807 is less than or equal to 3000
2023-09-01 08:40:56.017|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:40:56.639|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:40:57.247|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:40:57.248|I|Thread-14|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\Customer and Supplier\DeleteCustid.customer.txt!=null)		=> MATCHED
2023-09-01 08:40:57.880|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:40:58.494|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:40:59.129|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:40:59.149|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:40:59.150|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:40:59.779|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid}|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '0' = '0'
2023-09-01 08:40:59.779|I|Thread-14|GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE|Delete a customer / supplier : DELETE- /customer/{custid} - ending activity
2023-09-01 08:41:00.027|I|Thread-14|[GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001|DELETE] saving test scenario
2023-09-01 08:41:00.179|I|Thread-14|[20230901_083241] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 143949 ms
» Test Steps:     150
» Error(s):       1



2023-09-01 08:41:00.604|I|Thread-14|[20230901_083241] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 145950 ms
» Iterations:     [1] total 1
» Test Steps:     150
» Passed:         149
» Error(s):       1
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.005,CustomerandSupplier.20230901_083834.001.xlsx



2023-09-01 08:41:00.605|I|Thread-14|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:41:00.943|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\CustomerandSupplier.xlsx] now completed
2023-09-01 08:41:00.944|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\DeliveryNote.data.xlsx
2023-09-01 08:41:00.987|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:41:00.988|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx] new thread started
2023-09-01 08:41:00.991|I|Thread-17|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:41:00.992|I|Thread-17|On-Demand Inspection detection enabled
2023-09-01 08:41:00.992|I|Thread-17|[20230901_083241] executing C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx with 1 iteration(s)
2023-09-01 08:41:00.993|I|Thread-17|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\captures
2023-09-01 08:41:00.993|I|Thread-17|[20230901_083241] create directory C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs
2023-09-01 08:41:01.195|I|Thread-17|[20230901_083241] merging test data to tmp file C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx
2023-09-01 08:41:01.196|I|Thread-17|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\DeliveryNote.data.xlsx
2023-09-01 08:41:01.282|I|Thread-17|[20230901_083241] test script and test data merged to C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx
2023-09-01 08:41:01.607|I|Thread-17|STARTS
2023-09-01 08:41:01.609|I|Thread-17|skipping test step in ROW 5 since it's disabled
2023-09-01 08:41:01.610|I|Thread-17|skipping test step in ROW 20 since it's disabled
2023-09-01 08:41:01.611|I|Thread-17|skipping test step in ROW 35 since it's disabled
2023-09-01 08:41:01.612|I|Thread-17|skipping test step in ROW 48 since it's disabled
2023-09-01 08:41:01.612|I|Thread-17|skipping test step in ROW 49 since it's disabled
2023-09-01 08:41:01.619|I|Thread-17|skipping test step in ROW 54 since it's disabled
2023-09-01 08:41:01.619|I|Thread-17|skipping test step in ROW 55 since it's disabled
2023-09-01 08:41:01.620|I|Thread-17|skipping test step in ROW 56 since it's disabled
2023-09-01 08:41:01.621|I|Thread-17|skipping test step in ROW 68 since it's disabled
2023-09-01 08:41:01.622|I|Thread-17|skipping test step in ROW 72 since it's disabled
2023-09-01 08:41:01.622|I|Thread-17|skipping test step in ROW 73 since it's disabled
2023-09-01 08:41:01.623|I|Thread-17|skipping test step in ROW 88 since it's disabled
2023-09-01 08:41:01.624|I|Thread-17|skipping test step in ROW 89 since it's disabled
2023-09-01 08:41:01.624|I|Thread-17|skipping test step in ROW 90 since it's disabled
2023-09-01 08:41:02.652|I|Thread-17|resolving WPS Spreadsheet as 'C:\Users\AL3063\AppData\Local\Kingsoft\WPS Office\12.2.0.13190\office6\et.exe
2023-09-01 08:41:02.653|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001 - executing 'C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx' from 'Test Plan' step 10
2023-09-01 08:41:02.653|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001 - executing iteration #1 of 1; Iteration Id 1
2023-09-01 08:41:02.654|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token - executing test scenario
2023-09-01 08:41:02.654|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token - executing activity
2023-09-01 08:41:02.655|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKUserToken), username=${login.username}
password=${login.password}, response=response)
2023-09-01 08:41:04.003|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/user)
2023-09-01 08:41:04.622|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  2|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/user' as ${url}
2023-09-01 08:41:05.225|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - executing save(var,value)(body, {"username":"${username}","userpassword":"${password}"})
2023-09-01 08:41:05.855|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  3|base.save(var,value)      - PASS stored '{"username":"${username}","userpassword":"${password}"}' as ${body}
2023-09-01 08:41:06.461|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:41:07.070|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/user HTTP/1.1
2023-09-01 08:41:08.127|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:41:08.128|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/user HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:41:08.151|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  4|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/user'
2023-09-01 08:41:08.753|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:41:09.375|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKUserToken)|#  5|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:41:09.383|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  5|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:41:09.384|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  6|base.save(var,value)      - executing save(var,value)(gkusertoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:41:10.020|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  6|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA' as ${gkusertoken}
2023-09-01 08:41:10.020|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  7|base.verbose(text)        - executing verbose(text)(${gkusertoken})
2023-09-01 08:41:10.635|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  7|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:41:10.638|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  7|base.verbose(text)        - PASS 
2023-09-01 08:41:10.639|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|getGKToken), gkusertoken=${gkusertoken}
orgcode=${login.orgcode}, response=response)
2023-09-01 08:41:11.951|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:41:12.580|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  6|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:41:13.184|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}login/org)
2023-09-01 08:41:13.800|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/login/org' as ${url}
2023-09-01 08:41:14.402|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - executing save(var,value)(body, {"orgcode": ${orgcode}})
2023-09-01 08:41:15.024|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  8|base.save(var,value)      - PASS stored '{"orgcode": ${orgcode}}' as ${body}
2023-09-01 08:41:15.634|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:41:16.238|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/login/org HTTP/1.1
2023-09-01 08:41:17.350|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:41:17.351|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/login/org HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:41:17.365|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|#  9|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/login/org'
2023-09-01 08:41:17.970|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - executing assertReturnCode(var,returnCode)(response, 200)
2023-09-01 08:41:18.594|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token (getGKToken)|# 10|ws.assertReturnCode(var,r - PASS EXPECTED return code found
2023-09-01 08:41:18.603|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  8|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:41:18.605|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  9|base.save(var,value)      - executing save(var,value)(gktoken, [JSON(${response}.body) => extract(token)])
2023-09-01 08:41:19.245|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|#  9|base.save(var,value)      - PASS stored 'eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg' as ${gktoken}
2023-09-01 08:41:19.246|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|# 10|base.verbose(text)        - executing verbose(text)(${gktoken})
2023-09-01 08:41:19.849|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|# 10|base.verbose(text)        - 
eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:41:19.851|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token|# 10|base.verbose(text)        - PASS 
2023-09-01 08:41:19.851|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token|Login Token - ending activity
2023-09-01 08:41:20.239|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Token] saving test scenario
2023-09-01 08:41:20.361|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get - executing test scenario
2023-09-01 08:41:20.362|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log - executing activity
2023-09-01 08:41:20.363|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  5|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:41:20.363|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:41:20.364|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  5|ws.clearHeaders(headers)  - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:41:20.364|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  6|ws.header(name,value)     - executing header(name,value)(gkToken, Test Invalid gk Token)
2023-09-01 08:41:21.012|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  6|ws.header(name,value)     - PASS set HTTP Header gkToken=Test Invalid gk Token
2023-09-01 08:41:21.013|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  7|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 08:41:21.634|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  7|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 08:41:21.634|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  8|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:41:22.242|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  8|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:41:22.990|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  8|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:41:22.991|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  8|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:41:23.006|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  8|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:41:23.007|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:41:23.643|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|#  9|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:41:23.643|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|# 10|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:41:24.258|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|# 10|base.verbose(text)        - 
2
2023-09-01 08:41:24.259|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|# 10|base.verbose(text)        - PASS 
2023-09-01 08:41:24.260|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|# 11|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:41:25.581|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:41:26.223|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:41:26.839|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:41:27.462|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 750 is less than or equal to 3000
2023-09-01 08:41:28.078|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:41:28.707|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:41:29.322|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:41:29.324|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:41:29.949|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:41:30.552|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:41:31.181|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:41:31.198|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|# 11|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:41:31.199|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:41:31.819|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log|# 12|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:41:31.819|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /log - ending activity
2023-09-01 08:41:31.820|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log - executing activity
2023-09-01 08:41:31.820|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 13|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:41:32.451|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 13|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:41:32.451|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 14|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:41:33.081|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 14|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:41:33.082|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 15|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:41:33.694|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 15|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:41:34.432|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 15|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:41:34.433|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 15|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:41:34.458|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 15|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:41:34.459|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 16|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:41:35.102|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 16|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:41:35.103|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 17|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:41:35.708|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 17|base.verbose(text)        - 
2
2023-09-01 08:41:35.710|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 17|base.verbose(text)        - PASS 
2023-09-01 08:41:35.711|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 18|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:41:37.045|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:41:37.668|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:41:38.282|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:41:38.912|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 739 is less than or equal to 3000
2023-09-01 08:41:39.526|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:41:40.140|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:41:40.748|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:41:40.750|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:41:41.371|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:41:41.987|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:41:42.604|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:41:42.615|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 18|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:41:42.616|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 19|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:41:43.226|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:41:43.253|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A19.log
2023-09-01 08:41:43.253|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 19|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:41:43.254|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 19|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A19.log
2023-09-01 08:41:43.255|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 20|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:41:43.256|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:41:43.257|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 20|ws.clearHeaders(headers)  - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:41:43.258|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 21|ws.header(name,value)     - executing header(name,value)(gkToken, Test Invalid gk Token)
2023-09-01 08:41:43.902|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log|# 21|ws.header(name,value)     - PASS set HTTP Header gkToken=Test Invalid gk Token
2023-09-01 08:41:43.902|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /log - ending activity
2023-09-01 08:41:43.903|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel - executing activity
2023-09-01 08:41:43.904|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 22|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/cancel?inputdate=${inputdate}&del_cancelled_type=${del_cancelled_type}&inout=${inout})
2023-09-01 08:41:44.524|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 22|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o' as ${url}
2023-09-01 08:41:44.525|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 23|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:41:45.139|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 23|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o HTTP/1.1
2023-09-01 08:41:45.913|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 23|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:41:45.914|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 23|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:41:45.944|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 23|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o'
2023-09-01 08:41:45.945|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 24|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:41:46.575|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 24|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:41:46.575|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 25|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:41:47.186|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 25|base.verbose(text)        - 
2
2023-09-01 08:41:47.189|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 25|base.verbose(text)        - PASS 
2023-09-01 08:41:47.189|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 26|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:41:48.509|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:41:49.140|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:41:49.748|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:41:50.378|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 12|number.assertLesserOrEqua - PASS 777 is less than or equal to 3000
2023-09-01 08:41:50.993|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:41:51.618|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:41:52.230|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:41:52.231|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:41:52.850|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:41:53.456|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:41:54.072|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:41:54.083|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 26|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:41:54.084|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 27|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:41:54.718|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel|# 27|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:41:54.719|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel - ending activity
2023-09-01 08:41:54.719|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel - executing activity
2023-09-01 08:41:54.719|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 28|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:41:55.356|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 28|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:41:55.357|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 29|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:41:56.008|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 29|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:41:56.009|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 30|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:41:56.624|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 30|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o HTTP/1.1
2023-09-01 08:41:57.376|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 30|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:41:57.377|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 30|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:41:57.409|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 30|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/cancel?inputdate=2023-05-09&del_cancelled_type=0&inout=o'
2023-09-01 08:41:57.410|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 31|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:41:58.034|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 31|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:41:58.035|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 32|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:41:58.636|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 32|base.verbose(text)        - 
2
2023-09-01 08:41:58.638|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 32|base.verbose(text)        - PASS 
2023-09-01 08:41:58.639|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 33|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:41:59.972|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:42:00.605|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:42:01.214|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:42:01.834|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 12|number.assertLesserOrEqua - PASS 754 is less than or equal to 3000
2023-09-01 08:42:02.444|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:42:03.075|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:42:03.692|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:42:03.693|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:42:04.326|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:42:04.930|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:42:05.549|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:42:05.576|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 33|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:42:05.576|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 34|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:42:06.191|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:42:06.218|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A34.log
2023-09-01 08:42:06.218|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 34|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:42:06.219|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 34|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A34.log
2023-09-01 08:42:06.219|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 35|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:42:06.219|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:42:06.221|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 35|ws.clearHeaders(headers)  - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:42:06.223|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 36|ws.header(name,value)     - executing header(name,value)(gkToken, Test Invalid gk Token)
2023-09-01 08:42:06.866|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel|# 36|ws.header(name,value)     - PASS set HTTP Header gkToken=Test Invalid gk Token
2023-09-01 08:42:06.867|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel - ending activity
2023-09-01 08:42:06.867|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last - executing activity
2023-09-01 08:42:06.868|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 37|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/last?status=${status})
2023-09-01 08:42:07.509|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 37|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/last?status=9' as ${url}
2023-09-01 08:42:07.509|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 38|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:42:08.115|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 38|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/last?status=9 HTTP/1.1
2023-09-01 08:42:08.909|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 38|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:42:08.911|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 38|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/last?status=9 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:42:08.937|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 38|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/last?status=9'
2023-09-01 08:42:08.938|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 39|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:42:09.572|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 39|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:42:09.572|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 40|base.save(var,value)      - executing save(var,value)(dcdate, [JSON(${response}.body)=>extract(dcdate)])
2023-09-01 08:42:10.204|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 40|base.save(var,value)      - PASS stored 'null' as ${dcdate}
2023-09-01 08:42:10.205|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 41|base.save(var,value)      - executing save(var,value)(dcno, [JSON(${response}.body)=>extract(dcno)])
2023-09-01 08:42:10.818|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 41|base.save(var,value)      - PASS stored 'null' as ${dcno}
2023-09-01 08:42:10.819|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 42|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:42:11.432|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 42|base.verbose(text)        - 
2
2023-09-01 08:42:11.434|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 42|base.verbose(text)        - PASS 
2023-09-01 08:42:11.435|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 43|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:42:12.782|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:42:13.405|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:42:14.020|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:42:14.647|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 12|number.assertLesserOrEqua - PASS 797 is less than or equal to 3000
2023-09-01 08:42:15.252|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:42:15.885|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:42:16.489|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:42:16.490|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:42:17.115|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:42:17.731|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:42:18.351|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:42:18.364|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 43|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:42:18.365|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 44|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:42:19.001|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last|# 44|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:42:19.002|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/last - ending activity
2023-09-01 08:42:19.003|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last - executing activity
2023-09-01 08:42:19.003|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 45|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:42:19.629|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 45|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:42:19.630|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 46|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:42:20.259|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 46|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:42:20.260|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 47|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:42:20.877|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 47|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/last?status=9 HTTP/1.1
2023-09-01 08:42:21.655|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 47|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:42:21.656|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 47|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/last?status=9 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:42:21.685|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 47|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/last?status=9'
2023-09-01 08:42:21.686|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 48|base.save(var,value)      - executing save(var,value)(dcdate, [JSON(${response}.body) =>extract(gkresult)])
2023-09-01 08:42:21.687|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:42:21.687|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 48|base.save(var,value)      - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:42:21.688|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 49|base.save(var,value)      - executing save(var,value)(dcno, [JSON(${response}.body) =>extract(gkresult.dcno)])
2023-09-01 08:42:21.688|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:42:21.689|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 49|base.save(var,value)      - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:42:21.690|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 50|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:42:22.331|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 50|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:42:22.332|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 51|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:42:22.935|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 51|base.verbose(text)        - 
2
2023-09-01 08:42:22.937|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 51|base.verbose(text)        - PASS 
2023-09-01 08:42:22.938|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 52|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:42:24.257|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:42:24.884|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:42:25.495|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:42:26.127|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 12|number.assertLesserOrEqua - PASS 780 is less than or equal to 3000
2023-09-01 08:42:26.736|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:42:27.370|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:42:27.974|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:42:27.976|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:42:28.592|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:42:29.196|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:42:29.807|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:42:29.819|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 52|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:42:29.820|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 53|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:42:30.427|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:42:30.459|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A53.log
2023-09-01 08:42:30.459|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 53|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:42:30.459|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 53|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A53.log
2023-09-01 08:42:30.460|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 54|base.assertEqual(expected - executing assertEqual(expected,actual)(15/04/2023, ${dcdate})
2023-09-01 08:42:30.461|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:42:30.463|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 54|base.assertEqual(expected - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:42:30.463|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 55|base.assertEqual(expected - executing assertEqual(expected,actual)(9/DIN-23, ${dcno})
2023-09-01 08:42:30.465|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:42:30.465|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 55|base.assertEqual(expected - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:42:30.465|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 56|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:42:30.465|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:42:30.466|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 56|ws.clearHeaders(headers)  - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:42:30.466|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 57|ws.header(name,value)     - executing header(name,value)(gkToken, Test Invalid gk Token)
2023-09-01 08:42:31.096|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last|# 57|ws.header(name,value)     - PASS set HTTP Header gkToken=Test Invalid gk Token
2023-09-01 08:42:31.096|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/last - ending activity
2023-09-01 08:42:31.097|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 - executing activity
2023-09-01 08:42:31.097|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 58|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/next_id?status=${status})
2023-09-01 08:42:31.738|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 58|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/next_id?status=9' as ${url}
2023-09-01 08:42:31.739|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 59|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:42:32.346|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 59|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/next_id?status=9 HTTP/1.1
2023-09-01 08:42:33.108|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 59|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:42:33.109|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 59|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/next_id?status=9 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:42:33.135|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 59|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/next_id?status=9'
2023-09-01 08:42:33.136|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 60|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:42:33.763|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 60|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:42:33.763|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 61|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:42:34.373|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 61|base.verbose(text)        - 
2
2023-09-01 08:42:34.375|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 61|base.verbose(text)        - PASS 
2023-09-01 08:42:34.375|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 62|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:42:35.699|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:42:36.325|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:42:36.944|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:42:37.575|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 12|number.assertLesserOrEqua - PASS 763 is less than or equal to 3000
2023-09-01 08:42:38.185|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:42:38.808|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:42:39.420|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:42:39.422|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:42:40.038|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:42:40.647|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:42:41.276|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:42:41.286|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 62|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:42:41.286|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 63|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:42:41.916|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9|# 63|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:42:41.917|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/delchal/next_id?status=9 - ending activity
2023-09-01 08:42:41.918|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 - executing activity
2023-09-01 08:42:41.918|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 64|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:42:42.550|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 64|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:42:42.551|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 65|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:42:43.193|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 65|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:42:43.194|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 66|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:42:43.809|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 66|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/next_id?status=9 HTTP/1.1
2023-09-01 08:42:44.604|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 66|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:42:44.606|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 66|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/next_id?status=9 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:42:44.632|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 66|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/next_id?status=9'
2023-09-01 08:42:44.632|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 67|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:42:45.264|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 67|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:42:45.265|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 68|base.save(var,value)      - executing save(var,value)(dcid, [JSON(${response}.body) => extract(dcid)])
2023-09-01 08:42:45.267|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:42:45.267|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 68|base.save(var,value)      - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:42:45.267|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 69|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:42:45.873|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 69|base.verbose(text)        - 
2
2023-09-01 08:42:45.875|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 69|base.verbose(text)        - PASS 
2023-09-01 08:42:45.876|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 70|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:42:47.178|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:42:47.806|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:42:48.408|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:42:49.039|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 12|number.assertLesserOrEqua - PASS 797 is less than or equal to 3000
2023-09-01 08:42:49.649|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:42:50.287|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:42:50.897|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:42:50.898|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:42:51.517|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:42:52.125|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:42:52.738|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:42:52.758|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 70|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:42:52.759|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 71|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:42:53.377|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:42:53.411|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A71.log
2023-09-01 08:42:53.412|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 71|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:42:53.412|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 71|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A71.log
2023-09-01 08:42:53.413|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 72|base.assertEqual(expected - executing assertEqual(expected,actual)(10, ${dcid})
2023-09-01 08:42:53.414|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:42:53.414|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 72|base.assertEqual(expected - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:42:53.414|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 73|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:42:53.415|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:42:53.415|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 73|ws.clearHeaders(headers)  - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:42:53.416|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 74|ws.header(name,value)     - executing header(name,value)(gkToken, Test Invalid gk Token)
2023-09-01 08:42:54.049|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9|# 74|ws.header(name,value)     - PASS set HTTP Header gkToken=Test Invalid gk Token
2023-09-01 08:42:54.050|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/delchal/next_id?status=9 - ending activity
2023-09-01 08:42:54.051|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid - executing activity
2023-09-01 08:42:54.051|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 75|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/${dcid})
2023-09-01 08:42:54.671|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 75|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/260' as ${url}
2023-09-01 08:42:54.672|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 76|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:42:55.290|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 76|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1
2023-09-01 08:42:57.668|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 76|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:42:57.669|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 76|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:42:57.691|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 76|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/260'
2023-09-01 08:42:57.692|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 77|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:42:58.339|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 77|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:42:58.339|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 78|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:42:58.941|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 78|base.verbose(text)        - 
2
2023-09-01 08:42:58.943|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 78|base.verbose(text)        - PASS 
2023-09-01 08:42:58.944|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 79|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:43:00.279|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:43:00.903|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:43:01.506|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:43:02.135|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 12|number.assertLesserOrEqua - PASS 2381 is less than or equal to 3000
2023-09-01 08:43:02.739|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:43:03.368|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:43:03.983|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:43:03.984|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:43:04.607|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:43:05.220|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:43:05.837|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:43:05.852|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 79|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:43:05.852|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 80|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:43:06.508|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid|# 80|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:43:06.508|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/dcid - ending activity
2023-09-01 08:43:06.509|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid - executing activity
2023-09-01 08:43:06.509|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 81|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:43:07.144|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 81|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:43:07.144|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 82|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:43:07.806|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 82|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:43:07.808|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 83|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:43:08.414|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 83|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1
2023-09-01 08:43:09.148|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 83|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:43:09.149|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 83|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:43:09.175|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 83|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/260'
2023-09-01 08:43:09.175|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 84|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:43:09.817|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 84|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:43:09.817|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 85|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:43:10.428|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 85|base.verbose(text)        - 
2
2023-09-01 08:43:10.430|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 85|base.verbose(text)        - PASS 
2023-09-01 08:43:10.431|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 86|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:43:11.793|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:43:12.430|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:43:13.044|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:43:13.700|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 12|number.assertLesserOrEqua - PASS 735 is less than or equal to 3000
2023-09-01 08:43:14.311|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:43:14.938|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:43:15.547|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:43:15.548|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:43:16.168|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:43:16.773|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:43:17.391|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:43:17.404|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 86|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:43:17.405|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 87|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:43:18.017|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:43:18.070|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A87.log
2023-09-01 08:43:18.070|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 87|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:43:18.071|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 87|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A87.log
2023-09-01 08:43:18.071|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 88|base.save(var,value)      - executing save(var,value)(dcid, [JSON(${response}) => extract(gkresult.delchaldata.dcid)])
2023-09-01 08:43:18.072|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:43:18.073|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 88|base.save(var,value)      - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:43:18.074|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 89|base.verbose(text)        - executing verbose(text)(${dcid})
2023-09-01 08:43:18.075|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:43:18.076|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 89|base.verbose(text)        - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:43:18.076|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 90|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:43:18.077|I|Thread-17|evaluating flow control:	SkipIf(true = true)		=> MATCHED
2023-09-01 08:43:18.078|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 90|ws.clearHeaders(headers)  - SKIPPED current step skipped: SkipIf(true)
2023-09-01 08:43:18.078|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 91|ws.header(name,value)     - executing header(name,value)(gkToken, Test Invalid gk Token)
2023-09-01 08:43:18.735|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid|# 91|ws.header(name,value)     - PASS set HTTP Header gkToken=Test Invalid gk Token
2023-09-01 08:43:18.736|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/dcid - ending activity
2023-09-01 08:43:18.736|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid - executing activity
2023-09-01 08:43:18.737|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 92|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/cancel/${cancel_dcid})
2023-09-01 08:43:19.387|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 92|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/cancel/405' as ${url}
2023-09-01 08:43:19.395|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 93|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:43:20.013|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 93|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/cancel/405 HTTP/1.1
2023-09-01 08:43:20.799|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 93|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:43:20.800|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 93|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/cancel/405 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:43:20.821|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 93|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/cancel/405'
2023-09-01 08:43:20.822|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 94|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:43:21.450|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 94|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:43:21.451|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 95|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:43:22.059|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 95|base.verbose(text)        - 
2
2023-09-01 08:43:22.060|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 95|base.verbose(text)        - PASS 
2023-09-01 08:43:22.061|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 96|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:43:23.398|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:43:24.027|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:43:24.634|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:43:25.261|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 12|number.assertLesserOrEqua - PASS 789 is less than or equal to 3000
2023-09-01 08:43:25.873|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:43:26.496|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:43:27.101|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:43:27.103|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:43:27.712|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:43:28.325|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:43:28.945|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:43:28.958|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 96|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:43:28.959|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 97|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:43:29.589|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid|# 97|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '2' = '2'
2023-09-01 08:43:29.590|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Negative - /delchal/cancel/dcid - ending activity
2023-09-01 08:43:29.591|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid - executing activity
2023-09-01 08:43:29.591|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|# 98|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:43:30.221|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|# 98|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:43:30.221|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|# 99|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:43:30.861|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|# 99|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:43:30.862|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#100|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:43:31.477|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#100|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/cancel/405 HTTP/1.1
2023-09-01 08:43:32.264|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#100|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:43:32.265|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#100|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/cancel/405 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:43:32.291|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#100|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/cancel/405'
2023-09-01 08:43:32.291|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#101|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:43:32.917|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#101|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:43:32.919|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#102|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:43:33.530|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#102|base.verbose(text)        - 
2
2023-09-01 08:43:33.530|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#102|base.verbose(text)        - PASS 
2023-09-01 08:43:33.532|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#103|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:43:34.883|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:43:35.507|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:43:36.123|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:43:36.736|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 12|number.assertLesserOrEqua - PASS 789 is less than or equal to 3000
2023-09-01 08:43:37.347|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:43:37.967|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:43:38.579|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:43:38.581|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:43:39.198|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:43:39.809|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:43:40.426|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:43:40.453|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#103|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:43:40.454|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#104|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:43:41.071|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:43:41.105|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A104.log
2023-09-01 08:43:41.105|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#104|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:43:41.106|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid|#104|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Get_A104.log
2023-09-01 08:43:41.106|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get|Positive - /delchal/cancel/dcid - ending activity
2023-09-01 08:43:44.902|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Get] saving test scenario
2023-09-01 08:43:45.070|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post - executing test scenario
2023-09-01 08:43:45.071|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote - executing activity
2023-09-01 08:43:45.071|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  5|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:43:45.685|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:43:45.685|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:43:45.704|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  5|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:43:45.704|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal)
2023-09-01 08:43:46.335|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal' as ${url}
2023-09-01 08:43:46.335|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  7|base.save(var,value)      - executing save(var,value)(body, {
  "orgname": "Mapusa[NUMBER(${num})=>randomDigits(5)]",
  "orgtype": "{orgtype}",
  "yearstart": "{yearstart}",
  "yearend": "{yearend}",
  "orgstate": "{orgstate}",
  "orgcity": "{orgcity}",
  "orgaddr": "{orgaddr}",
  "orgpincode": "{orgpincode}",
  "orgcountry": "{orgcountry}",
  "orgtelno": "[NUMBER(${num})=>randomDigits(10)]",
  "orgfax": "[NUMBER(${num})=>randomDigits(6)]",
  "orgwebsite": "{orgwebsite}",
  "orgemail": "{orgemail}",
  "orgpan": "[AJNKK[NUMBER(${num})=>randomDigits(5)]",
  "orgmvat": "[NUMBER(${num})=>randomDigits(7)]",
  "orgstax": "[NUMBER(${num})=>randomDigits(5)]",
  "orgregno": "[NUMBER(${num})=>randomDigits(3)]",
  "orgregdate": "{orgregdate}",
  "orgfcrano": "{orgfcrano}",
  "orgfcradate": "{orgfcradate}",
  "invflag": "{invflag}",
  "invsflag": "{invsflag}",
  "billflag": "{billflag}",
  "avflag": "{avflag}",
  "maflag": "{maflag}",
  "avnoflag": "{avnoflag}",
  "ainvnoflag": "{ainvnoflag}",
  "modeflag": "{modeflag}",
  "orgconf": "{orgconf}",
  "roflag": "{roflag}",
  "booksclosedflag": "{booksclosedflag}",
  "logo": "{logo}"
})
2023-09-01 08:43:46.976|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  7|base.save(var,value)      - PASS stored '{
  "orgname": "Mapusa28376",
  "orgtype": "{orgtype}",
  "yearstart": "{yearstart}",
  "yearend": "{yearend}",
  "orgstate": "{orgstate}",
  "orgcity": "{orgcity}",
  "orgaddr": "{orgaddr}",
  "orgpincode": "{orgpincode}",
  "orgcountry": "{orgcountry}",
  "orgtelno": "3921526267",
  "orgfax": "729686",
  "orgwebsite": "{orgwebsite}",
  "orgemail": "{orgemail}",
  "orgpan": "[AJNKK28376",
  "orgmvat": "7560587",
  "orgstax": "28376",
  "orgregno": "815",
  "orgregdate": "{orgregdate}",
  "orgfcrano": "{orgfcrano}",
  "orgfcradate": "{orgfcradate}",
  "invflag": "{invflag}",
  "invsflag": "{invsflag}",
  "billflag": "{billflag}",
  "avflag": "{avflag}",
  "maflag": "{maflag}",
  "avnoflag": "{avnoflag}",
  "ainvnoflag": "{ainvnoflag}",
  "modeflag": "{modeflag}",
  "orgconf": "{orgconf}",
  "roflag": "{roflag}",
  "booksclosedflag": "{booksclosedflag}",
  "logo": "{logo}"
}' as ${body}
2023-09-01 08:43:46.978|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - executing post(url,body,var)(${url}, ${body}, response)
2023-09-01 08:43:47.582|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - Executing request POST https://api-dev.gnukhata.org/delchal HTTP/1.1
2023-09-01 08:43:48.616|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - Saving response payload as raw bytes
2023-09-01 08:43:48.617|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - Executed request POST https://api-dev.gnukhata.org/delchal HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:43:48.646|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  8|ws.post(url,body,var)     - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:43:48.647|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  9|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:43:49.282|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|#  9|base.save(var,value)      - PASS stored '3' as ${actualGkStatus}
2023-09-01 08:43:49.283|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|# 10|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:43:49.891|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|# 10|base.verbose(text)        - 
3
2023-09-01 08:43:49.894|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|# 10|base.verbose(text)        - PASS 
2023-09-01 08:43:49.895|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|# 11|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:43:51.242|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:43:51.857|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:43:52.462|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:43:53.091|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1036 is less than or equal to 3000
2023-09-01 08:43:53.704|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:43:54.339|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:43:54.954|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:43:54.954|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:43:55.582|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:43:56.185|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:43:56.802|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:43:56.822|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|# 11|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:43:56.823|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|# 12|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:43:57.436|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:43:57.479|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Post_A12.log
2023-09-01 08:43:57.479|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|# 12|base.assertEqual(expected - FAIL 
expected=2
actual  =3
2023-09-01 08:43:57.480|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote|# 12|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Post_A12.log
2023-09-01 08:43:57.480|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Negative - Create DeliveryNote - ending activity
2023-09-01 08:43:57.481|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote - executing activity
2023-09-01 08:43:57.481|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 13|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:43:58.112|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 13|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:43:58.113|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 14|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:43:58.742|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 14|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:43:58.743|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 15|base.save(var,value)      - executing save(var,value)(body, {
  "orgname": "Mapusa[NUMBER(${num})=>randomDigits(5)]",
  "orgtype": "{orgtype}",
  "yearstart": "{yearstart}",
  "yearend": "{yearend}",
  "orgstate": "{orgstate}",
  "orgcity": "{orgcity}",
  "orgaddr": "{orgaddr}",
  "orgpincode": "{orgpincode}",
  "orgcountry": "{orgcountry}",
  "orgtelno": "[NUMBER(${num})=>randomDigits(10)]",
  "orgfax": "[NUMBER(${num})=>randomDigits(6)]",
  "orgwebsite": "{orgwebsite}",
  "orgemail": "{orgemail}",
  "orgpan": "[AJNKK[NUMBER(${num})=>randomDigits(5)]",
  "orgmvat": "[NUMBER(${num})=>randomDigits(7)]",
  "orgstax": "[NUMBER(${num})=>randomDigits(5)]",
  "orgregno": "[NUMBER(${num})=>randomDigits(3)]",
  "orgregdate": "{orgregdate}",
  "orgfcrano": "{orgfcrano}",
  "orgfcradate": "{orgfcradate}",
  "invflag": "{invflag}",
  "invsflag": "{invsflag}",
  "billflag": "{billflag}",
  "avflag": "{avflag}",
  "maflag": "{maflag}",
  "avnoflag": "{avnoflag}",
  "ainvnoflag": "{ainvnoflag}",
  "modeflag": "{modeflag}",
  "orgconf": "{orgconf}",
  "roflag": "{roflag}",
  "booksclosedflag": "{booksclosedflag}",
  "logo": "{logo}"
})
2023-09-01 08:43:59.398|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 15|base.save(var,value)      - PASS stored '{
  "orgname": "Mapusa93036",
  "orgtype": "{orgtype}",
  "yearstart": "{yearstart}",
  "yearend": "{yearend}",
  "orgstate": "{orgstate}",
  "orgcity": "{orgcity}",
  "orgaddr": "{orgaddr}",
  "orgpincode": "{orgpincode}",
  "orgcountry": "{orgcountry}",
  "orgtelno": "9765023986",
  "orgfax": "474460",
  "orgwebsite": "{orgwebsite}",
  "orgemail": "{orgemail}",
  "orgpan": "[AJNKK93036",
  "orgmvat": "2883402",
  "orgstax": "93036",
  "orgregno": "569",
  "orgregdate": "{orgregdate}",
  "orgfcrano": "{orgfcrano}",
  "orgfcradate": "{orgfcradate}",
  "invflag": "{invflag}",
  "invsflag": "{invsflag}",
  "billflag": "{billflag}",
  "avflag": "{avflag}",
  "maflag": "{maflag}",
  "avnoflag": "{avnoflag}",
  "ainvnoflag": "{ainvnoflag}",
  "modeflag": "{modeflag}",
  "orgconf": "{orgconf}",
  "roflag": "{roflag}",
  "booksclosedflag": "{booksclosedflag}",
  "logo": "{logo}"
}' as ${body}
2023-09-01 08:43:59.400|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, ${body}, response)
2023-09-01 08:44:00.057|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal?%7B%0A++%22orgname%22%3A+%22Mapusa93036%22%2C%0A++%22orgtype%22%3A+%22%7Borgtype%7D%22%2C%0A++%22yearstart%22%3A+%22%7Byearstart%7D%22%2C%0A++%22yearend%22%3A+%22%7Byearend%7D%22%2C%0A++%22orgstate%22%3A+%22%7Borgstate%7D%22%2C%0A++%22orgcity%22%3A+%22%7Borgcity%7D%22%2C%0A++%22orgaddr%22%3A+%22%7Borgaddr%7D%22%2C%0A++%22orgpincode%22%3A+%22%7Borgpincode%7D%22%2C%0A++%22orgcountry%22%3A+%22%7Borgcountry%7D%22%2C%0A++%22orgtelno%22%3A+%229765023986%22%2C%0A++%22orgfax%22%3A+%22474460%22%2C%0A++%22orgwebsite%22%3A+%22%7Borgwebsite%7D%22%2C%0A++%22orgemail%22%3A+%22%7Borgemail%7D%22%2C%0A++%22orgpan%22%3A+%22%5BAJNKK93036%22%2C%0A++%22orgmvat%22%3A+%222883402%22%2C%0A++%22orgstax%22%3A+%2293036%22%2C%0A++%22orgregno%22%3A+%22569%22%2C%0A++%22orgregdate%22%3A+%22%7Borgregdate%7D%22%2C%0A++%22orgfcrano%22%3A+%22%7Borgfcrano%7D%22%2C%0A++%22orgfcradate%22%3A+%22%7Borgfcradate%7D%22%2C%0A++%22invflag%22%3A+%22%7Binvflag%7D%22%2C%0A++%22invsflag%22%3A+%22%7Binvsflag%7D%22%2C%0A++%22billflag%22%3A+%22%7Bbillflag%7D%22%2C%0A++%22avflag%22%3A+%22%7Bavflag%7D%22%2C%0A++%22maflag%22%3A+%22%7Bmaflag%7D%22%2C%0A++%22avnoflag%22%3A+%22%7Bavnoflag%7D%22%2C%0A++%22ainvnoflag%22%3A+%22%7Bainvnoflag%7D%22%2C%0A++%22modeflag%22%3A+%22%7Bmodeflag%7D%22%2C%0A++%22orgconf%22%3A+%22%7Borgconf%7D%22%2C%0A++%22roflag%22%3A+%22%7Broflag%7D%22%2C%0A++%22booksclosedflag%22%3A+%22%7Bbooksclosedflag%7D%22%2C%0A++%22logo%22%3A+%22%7Blogo%7D%22%0A%7D HTTP/1.1
2023-09-01 08:44:00.822|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:44:00.842|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal?%7B%0A++%22orgname%22%3A+%22Mapusa93036%22%2C%0A++%22orgtype%22%3A+%22%7Borgtype%7D%22%2C%0A++%22yearstart%22%3A+%22%7Byearstart%7D%22%2C%0A++%22yearend%22%3A+%22%7Byearend%7D%22%2C%0A++%22orgstate%22%3A+%22%7Borgstate%7D%22%2C%0A++%22orgcity%22%3A+%22%7Borgcity%7D%22%2C%0A++%22orgaddr%22%3A+%22%7Borgaddr%7D%22%2C%0A++%22orgpincode%22%3A+%22%7Borgpincode%7D%22%2C%0A++%22orgcountry%22%3A+%22%7Borgcountry%7D%22%2C%0A++%22orgtelno%22%3A+%229765023986%22%2C%0A++%22orgfax%22%3A+%22474460%22%2C%0A++%22orgwebsite%22%3A+%22%7Borgwebsite%7D%22%2C%0A++%22orgemail%22%3A+%22%7Borgemail%7D%22%2C%0A++%22orgpan%22%3A+%22%5BAJNKK93036%22%2C%0A++%22orgmvat%22%3A+%222883402%22%2C%0A++%22orgstax%22%3A+%2293036%22%2C%0A++%22orgregno%22%3A+%22569%22%2C%0A++%22orgregdate%22%3A+%22%7Borgregdate%7D%22%2C%0A++%22orgfcrano%22%3A+%22%7Borgfcrano%7D%22%2C%0A++%22orgfcradate%22%3A+%22%7Borgfcradate%7D%22%2C%0A++%22invflag%22%3A+%22%7Binvflag%7D%22%2C%0A++%22invsflag%22%3A+%22%7Binvsflag%7D%22%2C%0A++%22billflag%22%3A+%22%7Bbillflag%7D%22%2C%0A++%22avflag%22%3A+%22%7Bavflag%7D%22%2C%0A++%22maflag%22%3A+%22%7Bmaflag%7D%22%2C%0A++%22avnoflag%22%3A+%22%7Bavnoflag%7D%22%2C%0A++%22ainvnoflag%22%3A+%22%7Bainvnoflag%7D%22%2C%0A++%22modeflag%22%3A+%22%7Bmodeflag%7D%22%2C%0A++%22orgconf%22%3A+%22%7Borgconf%7D%22%2C%0A++%22roflag%22%3A+%22%7Broflag%7D%22%2C%0A++%22booksclosedflag%22%3A+%22%7Bbooksclosedflag%7D%22%2C%0A++%22logo%22%3A+%22%7Blogo%7D%22%0A%7D HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:44:00.873|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 16|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal'
2023-09-01 08:44:00.874|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 17|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:44:01.509|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 17|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:44:01.510|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 18|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:44:02.124|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 18|base.verbose(text)        - 
2
2023-09-01 08:44:02.126|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 18|base.verbose(text)        - PASS 
2023-09-01 08:44:02.127|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 19|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:44:03.434|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:44:04.063|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:44:04.669|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:44:05.302|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 12|number.assertLesserOrEqua - PASS 813 is less than or equal to 3000
2023-09-01 08:44:05.916|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:44:06.540|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:44:07.145|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:44:07.146|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:44:07.769|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:44:08.373|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:44:08.990|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:44:09.000|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 19|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:44:09.001|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 20|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:44:09.618|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:44:09.642|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Post_A20.log
2023-09-01 08:44:09.643|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 20|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:44:09.643|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 20|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Post_A20.log
2023-09-01 08:44:09.644|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 21|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:44:10.260|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:44:10.261|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:44:10.280|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote|# 21|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:44:10.280|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post|Positive - Create DeliveryNote - ending activity
2023-09-01 08:44:10.718|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Post] saving test scenario
2023-09-01 08:44:10.899|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete - executing test scenario
2023-09-01 08:44:10.899|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log - executing activity
2023-09-01 08:44:10.900|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  5|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:44:11.507|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=null
2023-09-01 08:44:11.509|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=null
2023-09-01 08:44:11.532|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  5|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:44:11.533|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/${delete_dcid})
2023-09-01 08:44:12.157|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/227' as ${url}
2023-09-01 08:44:12.158|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:44:12.774|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/227 HTTP/1.1
2023-09-01 08:44:13.921|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:44:13.923|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/227 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:44:13.936|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/227'
2023-09-01 08:44:13.937|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:44:14.568|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:44:14.568|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  9|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:44:15.177|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  9|base.verbose(text)        - 
0
2023-09-01 08:44:15.179|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|#  9|base.verbose(text)        - PASS 
2023-09-01 08:44:15.180|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:44:16.501|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:44:17.129|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:44:17.733|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:44:18.363|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 1149 is less than or equal to 3000
2023-09-01 08:44:18.973|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:44:19.601|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:44:20.211|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:44:20.213|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:44:20.845|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:44:21.460|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:44:22.073|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:44:22.085|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:44:22.085|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:44:22.698|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:44:22.725|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Delete_A11.log
2023-09-01 08:44:22.725|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|# 11|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:44:22.726|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Delete_A11.log
2023-09-01 08:44:22.726|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Negative - /log - ending activity
2023-09-01 08:44:22.727|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log - executing activity
2023-09-01 08:44:22.727|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 12|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:44:23.355|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 12|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:44:23.356|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 13|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:44:23.972|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 13|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:44:23.973|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:44:24.579|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/227 HTTP/1.1
2023-09-01 08:44:25.414|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:44:25.415|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/227 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:44:25.432|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 14|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/227'
2023-09-01 08:44:25.432|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:44:26.074|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 15|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:44:26.074|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 16|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:44:26.684|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 16|base.verbose(text)        - 
2
2023-09-01 08:44:26.686|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 16|base.verbose(text)        - PASS 
2023-09-01 08:44:26.687|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:44:28.015|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:44:28.645|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:44:29.249|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:44:29.871|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 836 is less than or equal to 3000
2023-09-01 08:44:30.487|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:44:31.113|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:44:31.715|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:44:31.716|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:44:32.343|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:44:32.953|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:44:33.574|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:44:33.584|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 17|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:44:33.585|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:44:34.204|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:44:34.251|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Delete_A18.log
2023-09-01 08:44:34.251|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 18|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:44:34.251|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log|# 18|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_Delete_A18.log
2023-09-01 08:44:34.252|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete|Positive - /log - ending activity
2023-09-01 08:44:34.743|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|Delete] saving test scenario
2023-09-01 08:44:34.961|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT - executing test scenario
2023-09-01 08:44:34.961|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log - executing activity
2023-09-01 08:44:34.961|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  5|ws.clearHeaders(headers)  - executing clearHeaders(headers)(gkusertoken,gkToken)
2023-09-01 08:44:35.566|I|Thread-17|removed nexial.ws.header.gkusertoken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:44:35.567|I|Thread-17|removed nexial.ws.header.gkToken as HTTP Header; previous value=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:44:35.584|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  5|ws.clearHeaders(headers)  - PASS HTTP Header(s) removed.
2023-09-01 08:44:35.585|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  6|base.save(var,value)      - executing save(var,value)(url, ${api.baseUrl}delchal/${dcid})
2023-09-01 08:44:36.204|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  6|base.save(var,value)      - PASS stored 'https://api-dev.gnukhata.org/delchal/260' as ${url}
2023-09-01 08:44:36.204|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:44:36.806|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1
2023-09-01 08:44:37.586|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:44:37.587|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:44:37.616|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  7|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/260'
2023-09-01 08:44:37.617|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  8|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body)=>extract(gkstatus)])
2023-09-01 08:44:38.247|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  8|base.save(var,value)      - PASS stored '0' as ${actualGkStatus}
2023-09-01 08:44:38.248|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  9|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:44:38.862|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  9|base.verbose(text)        - 
0
2023-09-01 08:44:38.863|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|#  9|base.verbose(text)        - PASS 
2023-09-01 08:44:38.864|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|# 10|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\invalidresponse.txt)
2023-09-01 08:44:40.212|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:44:40.826|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:44:41.429|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:44:42.050|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 781 is less than or equal to 3000
2023-09-01 08:44:42.666|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:44:43.295|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:44:43.911|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:44:43.912|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\invalidresponse.txt!=null)		=> MATCHED
2023-09-01 08:44:44.540|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:44:45.142|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:44:45.758|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:44:45.769|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|# 10|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:44:45.770|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(2, ${actualGkStatus})
2023-09-01 08:44:46.374|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:44:46.408|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_PUT_A11.log
2023-09-01 08:44:46.408|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|# 11|base.assertEqual(expected - FAIL 
expected=2
actual  =0
2023-09-01 08:44:46.409|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log|# 11|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_PUT_A11.log
2023-09-01 08:44:46.409|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Negative - /log - ending activity
2023-09-01 08:44:46.410|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log - executing activity
2023-09-01 08:44:46.410|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 12|ws.header(name,value)     - executing header(name,value)(gkusertoken, ${gkusertoken})
2023-09-01 08:44:47.054|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 12|ws.header(name,value)     - PASS set HTTP Header gkusertoken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJ1c2VybmFtZSI6IkFjY2lvbiIsInVzZXJpZCI6Mn0.v5sh31fw7GSrvnZORJjA0PFp_qU1IgXQelWA6fAGILA
2023-09-01 08:44:47.055|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 13|ws.header(name,value)     - executing header(name,value)(gkToken, ${gktoken})
2023-09-01 08:44:47.682|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 13|ws.header(name,value)     - PASS set HTTP Header gkToken=eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJvcmdjb2RlIjoxODUsInVzZXJpZCI6Mn0.RIhhHLsoMjVh7dBopwHixqzdpj0vYfoqrRWZlnkfeWg
2023-09-01 08:44:47.682|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - executing get(url,queryString,var)(${url}, , response)
2023-09-01 08:44:48.297|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - Executing request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1
2023-09-01 08:44:49.068|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - Saving response payload as raw bytes
2023-09-01 08:44:49.069|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - Executed request GET https://api-dev.gnukhata.org/delchal/260 HTTP/1.1: HTTP/1.1 200 OK
2023-09-01 08:44:49.090|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 14|ws.get(url,queryString,va - PASS Successfully invoked web service 'https://api-dev.gnukhata.org/delchal/260'
2023-09-01 08:44:49.090|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 15|base.save(var,value)      - executing save(var,value)(actualGkStatus, [JSON(${response}.body) => extract(gkstatus)])
2023-09-01 08:44:49.722|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 15|base.save(var,value)      - PASS stored '2' as ${actualGkStatus}
2023-09-01 08:44:49.723|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 16|base.verbose(text)        - executing verbose(text)(${actualGkStatus})
2023-09-01 08:44:50.327|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 16|base.verbose(text)        - 
2
2023-09-01 08:44:50.329|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 16|base.verbose(text)        - PASS 
2023-09-01 08:44:50.329|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 17|base.macroFlex(macro,inpu - executing macroFlex(macro,input,output)($(projectfile|macro|${gnukhata.path}|MacroLibrary|validateResponse), actualReturnCode=${response}.returnCode
actualResponseTime=${response}.elapsedTime
actualContentType=${response}.headers.[Content-Type]
responseBody=${response}.body
expectedReturnCode=200
expectedResponseTime=3000
expectedContentType=application/json
schema=${schema.path}\DeliveryNote.txt)
2023-09-01 08:44:51.659|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedReturnCode}, ${actualReturnCode})
2023-09-01 08:44:52.293|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 11|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; '200' = '200'
2023-09-01 08:44:52.902|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - executing assertLesserOrEqual(num1,num2)(${actualResponseTime}, ${expectedResponseTime})
2023-09-01 08:44:53.527|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 12|number.assertLesserOrEqua - PASS 772 is less than or equal to 3000
2023-09-01 08:44:54.142|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - executing assertEqual(expected,actual)(${expectedContentType}, ${actualContentType})
2023-09-01 08:44:54.773|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 13|base.assertEqual(expected - PASS validated EXPECTED = ACTUAL; 'application/json' = 'application/json'
2023-09-01 08:44:55.385|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - executing assertCorrectness(json,schema)(${responseBody}, ${schema})
2023-09-01 08:44:55.387|I|Thread-17|evaluating flow control:	ProceedIf(C:\projects\GKCore\gkcore\tests\artifact\data\Schema\DeliveryNote\DeliveryNote.txt!=null)		=> MATCHED
2023-09-01 08:44:56.007|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 14|json.assertCorrectness(js - PASS json validated successfully against schema
2023-09-01 08:44:56.613|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 15|base.clear(vars)          - executing clear(vars)(response, returnCode, responseTime, contentType, schema)
2023-09-01 08:44:57.221|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log (validateResponse)|# 15|base.clear(vars)          - PASS The following data variable(s) are removed from execution: response,schema
2023-09-01 08:44:57.246|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 17|base.macroFlex(macro,inpu - PASS Macro successfully executed
2023-09-01 08:44:57.247|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 18|base.assertEqual(expected - executing assertEqual(expected,actual)(0, ${actualGkStatus})
2023-09-01 08:44:57.857|I|Thread-17|cancelled taking screenshot; agent/driver not ready.
2023-09-01 08:44:57.880|E|Thread-17|Check corresponding error log for details: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_PUT_A18.log
2023-09-01 08:44:57.880|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 18|base.assertEqual(expected - FAIL 
expected=0
actual  =2
2023-09-01 08:44:57.880|E|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log|# 18|base.assertEqual(expected - Error log: C:\projects\GKCore\gkcore\tests\output\20230901_083241\logs\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx_PUT_A18.log
2023-09-01 08:44:57.881|I|Thread-17|GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT|Positive - /log - ending activity
2023-09-01 08:44:58.337|I|Thread-17|[GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001|PUT] saving test scenario
2023-09-01 08:44:58.583|I|Thread-17|[20230901_083241] 
/-ITERATION COMPLETE------------------------------------------------------------
| Test Output:    C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx
| Iteration:      1
\-------------------------------------------------------------------------------
» Execution Time: 235928 ms
» Test Steps:     250
» Error(s):       12



2023-09-01 08:44:59.137|I|Thread-17|[20230901_083241] 
/-SCRIPT COMPLETE---------------------------------------------------------------
| Test Script:    C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx
\-------------------------------------------------------------------------------
» Execution Time: 238144 ms
» Iterations:     [1] total 1
» Test Steps:     250
» Passed:         224
» Error(s):       12
» Iteration 1 of 1: C:\projects\GKCore\gkcore\tests\output\20230901_083241\GNUKhata-plan.Test_Plan.006,DeliveryNote.20230901_084100.001.xlsx



2023-09-01 08:44:59.137|I|Thread-17|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:45:00.022|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\DeliveryNote.xlsx] now completed
2023-09-01 08:45:00.024|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Invite.data.xlsx
2023-09-01 08:45:00.061|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:45:00.062|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx] new thread started
2023-09-01 08:45:00.065|I|Thread-20|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:45:00.065|I|Thread-20|On-Demand Inspection detection enabled
2023-09-01 08:45:00.066|E|Thread-20|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:45:01.077|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Invite.xlsx] now completed
2023-09-01 08:45:01.077|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Invoice.data.xlsx
2023-09-01 08:45:01.130|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:45:01.132|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx] new thread started
2023-09-01 08:45:01.134|I|Thread-21|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:45:01.135|I|Thread-21|On-Demand Inspection detection enabled
2023-09-01 08:45:01.135|E|Thread-21|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:45:02.146|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Invoice.xlsx] now completed
2023-09-01 08:45:02.147|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Product.data.xlsx
2023-09-01 08:45:02.186|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:45:02.187|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx] new thread started
2023-09-01 08:45:02.189|I|Thread-22|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:45:02.190|I|Thread-22|On-Demand Inspection detection enabled
2023-09-01 08:45:02.190|E|Thread-22|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:45:03.197|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Product.xlsx] now completed
2023-09-01 08:45:03.198|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Reports.data.xlsx
2023-09-01 08:45:03.249|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:45:03.249|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx] new thread started
2023-09-01 08:45:03.250|I|Thread-23|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:45:03.251|I|Thread-23|On-Demand Inspection detection enabled
2023-09-01 08:45:03.251|E|Thread-23|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:45:04.255|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Reports.xlsx] now completed
2023-09-01 08:45:04.256|I|main|re-fetching data from C:\projects\GKCore\gkcore\tests\artifact\data\Tax.data.xlsx
2023-09-01 08:45:04.304|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx] resolve RUN ID as 20230901_083241
2023-09-01 08:45:04.305|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx] new thread started
2023-09-01 08:45:04.308|I|Thread-24|missing REQUIRED configuration; sms DISABLED!
2023-09-01 08:45:04.308|I|Thread-24|On-Demand Inspection detection enabled
2023-09-01 08:45:04.308|E|Thread-24|current script - [ABORT] scenario failed and fail-fast is in effect - subsequent test scenarios will be skipped
2023-09-01 08:45:05.308|I|main|[20230901_083241] [C:\projects\GKCore\gkcore\tests\artifact\script\Tax.xlsx] now completed
2023-09-01 08:45:05.309|I|main|[20230901_083241] all execution thread(s) have terminated
2023-09-01 08:45:05.312|I|main|[20230901_083241] test run completed in about 743 seconds
2023-09-01 08:45:05.368|I|main|No predefined nexial-setup found
2023-09-01 08:45:05.412|I|main|outputBase not set; output-to-cloud DISABLED!
2023-09-01 08:45:05.412|I|main|accessKey not set; output-to-cloud DISABLED!
2023-09-01 08:45:05.412|I|main|secretKey not set; output-to-cloud DISABLED!
2023-09-01 08:45:05.412|I|main|generating HTML output for this execution to C:\projects\GKCore\gkcore\tests\output\20230901_083241\execution-output.html
2023-09-01 08:45:06.447|I|main|generating JUnit XML output for this execution to C:\projects\GKCore\gkcore\tests\output\20230901_083241\junit.xml
2023-09-01 08:45:06.509|I|main|generated the JUnit report for this execution: C:\projects\GKCore\gkcore\tests\output\20230901_083241\junit.xml
2023-09-01 08:45:06.542|I|main|nexial mailer not enabled: nexial.enableEmail=false
2023-09-01 08:45:06.542|I|main|skipped email notification as configured
2023-09-01 08:45:06.542|I|main|exiting current script/plan execution
2023-09-01 08:45:06.542|I|main|exiting Nexial...
2023-09-01 08:45:06.543|I|main|shutdown starts...
2023-09-01 08:45:06.543|I|main|shutdown ends...
2023-09-01 08:45:06.546|I|main|

/-END OF EXECUTION--------------------------------------------------------------
| » Execution Time: 737 sec.
| » Test Steps....: 712
| » Passed........: 699
| » Failed........: 13
| » Success Rate..: 98.17%
\----------------------------------------------------------nexial-core dev_1535-

2023-09-01 08:45:06.546|E|main|failure found; success rate is 98.17%
2023-09-01 08:45:06.552|I|main|End of Execution:
NEXIAL_OUTPUT:         C:\projects\GKCore\gkcore\tests\output\20230901_083241
NEXIAL_EXECUTION_HTML: C:\projects\GKCore\gkcore\tests\output\20230901_083241\execution-output.html
NEXIAL_JUNIT_XML:      C:\projects\GKCore\gkcore\tests\output\20230901_083241\junit.xml
NEXIAL_SUCCESS_RATE:   98.17%
NEXIAL_EXIT_STATUS:    -13
