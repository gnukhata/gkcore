openapi: "3.0.0"

info:
  version: "0.8.0a"
  title: GKCORE
  description: |
    API documentation of gkcore - GNUKhata's REST API server.

    The following is the meaning of the `gkstatus` codes, which are returned in `200` response:
    ```json 
      { 
      "Success": 0, 
      "DuplicateEntry": 1, 
      "UnauthorisedAccess": 2, 
      "ConnectionFailed": 3, 
      "BadPrivilege": 4, 
      "ActionDisallowed": 5, 
      "ProxyServerError": 6, 
      }
    ```

components:
  securitySchemes:
    ApiKeyAuth:
      type: apiKey
      in: header
      name: gktoken

security:
  - ApiKeyAuth: []

paths:
  /:
    get:
      tags: ["Public API's"]
      summary: Check whether gkcore is running
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  gkstatus:
                    type: integer
                    description: 0 - success, 1 - something else
                  version:
                    type: string
  /state:
    get:
      tags: ["Public API's", "State"]
      summary: Get list of state codes
      parameters:
        - in: query
          name: type
          schema:
            type: string
            enum: [all]
          required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  gkstatus:
                    type: integer
                  gkresult:
                    type: array
                    items:
                      type: object
                      properties:
                        state_code:
                          type: integer
                        state_name:
                          type: string
                        state_abbr:
                          type: string
  /log:
    $ref: "./logs/log.yaml"
  /log/dateRange:
    $ref: "./logs/dateRange.yaml"
  /export/json:
    $ref: "./data/export-json.yaml"
  /import/json:
    $ref: "./data/import-json.yaml"
  /export/xlsx:
    $ref: "./data/export-xlsx.yaml"
  /import/xlsx:
    $ref: "./data/import-xlsx.yaml"
  /accounts:
    $ref: "./accounts/index.yaml"
  /organisation:
    $ref: "./paths_organisation.yaml#/organisation"
  /organisation/all:
    $ref: "./paths_organisation.yaml#/organisation_all"
  /organisation/gstin:
    $ref: "./paths_organisation.yaml#/organisation_gstin"
  /organisation/attachment:
    $ref: "./paths_organisation.yaml#/organisation_attachment"
  /organisation/gst_accounts:
    $ref: "./paths_organisation.yaml#/organisation_gst_accounts"
  /organisation/gst_accounts/codes:
    $ref: "./paths_organisation.yaml#/organisation_gst_accounts_codes"
  /organisation/check_registration:
    $ref: "./paths_organisation.yaml#/organisation_registration"
  /organisation/check/{orgname}:
    $ref: "./paths_organisation.yaml#/organisation_orgname"
