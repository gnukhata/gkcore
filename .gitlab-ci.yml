variables:
  # POSTGRES_USER: "gkadmin"
  # POSTGRES_PASSWORD: "gkadmin"
  # POSTGRES_DB: "gkdata"
  # GKCORE_DB_URL: "postgres://gkadmin:gkadmin@postgres:5432/gkdata"

services:
  # - postgres:alpine
  - docker:20.10.19-dind

stages:
  - build
  - deploy
  # tests are run against the dev server, so deploy stage should complete first
  - test

# runs the api tests against the dev server
api_tests:
  image: kskarthik/nexial-core:latest
  stage: test
  # this job runs with a delay to make sure the dev server
  # is updated to latest commit
  when: delayed
  start_in: 2 minutes
  script: |
    cd tests/artifact
    nexial.sh -plan plan/GNUKhata-plan.xlsx || true
  allow_failure: true
  # this job runs only on the master branch
  only:
    - master
  artifacts:
    paths:
      - /builds/gnukhata/gkcore/tests/output


# build gkcore
# gkcore:
#   image: python:3.8-slim-buster
#   stage: build
#   script:
#     - apt update && apt install -y build-essential libpq-dev
#     - pip3 install -r requirements.txt
#     - python3 setup.py develop
#     - python3 initdb.py
#     - pserve production.ini
#     #run tests
#     - python3 gkcore/tests/public_apis.py

# build gkcore docker image from devel commits & upload it to docker hub
docker-devel:
  image: docker:20.10.19
  stage: build
  script:
    # build the docker image & push to the dockerhub
    - docker login -u digitalfreedom -p $DOCKERHUB_PWD
    - docker build -t digitalfreedom/gkcore:devel --build-arg VERSION=$CI_COMMIT_SHORT_SHA .
    - docker push digitalfreedom/gkcore:devel
  only:
    - devel

# build gkcore docker image on a release/tags & push it to the docker hub
docker-prod:
  image: docker:20.10.19
  stage: build
  script:
    # build the docker image & push to the dockerhub
    - docker login -u digitalfreedom -p $DOCKERHUB_PWD
    - docker build -t digitalfreedom/gkcore:$CI_COMMIT_TAG --build-arg VERSION=$CI_COMMIT_TAG .
    - docker push digitalfreedom/gkcore:$CI_COMMIT_TAG
    # create alias for the latest tag
    - docker tag digitalfreedom/gkcore:$CI_COMMIT_TAG digitalfreedom/gkcore:latest
    - docker push digitalfreedom/gkcore:latest
  only:
    - tags

# deploy devel branch changes to gkcore test server
update_test_server:
  stage: deploy
  # needs: ["gkcore"]
  script:
    - apt update && apt install -y curl
    - curl $TEST_SERVER_HOOK
  only:
    - devel
